{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-product/admin-product.component.ts","webpack:///src/app/admin/admin-product/admin-product.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/admin.routing.module.ts","webpack:///src/app/admin/admin/admin.component.ts","webpack:///src/app/admin/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/auth/auth-interceptor.service.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.routing.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/change-email/change-email.component.ts","webpack:///src/app/auth/change-email/change-email.component.html","webpack:///src/app/auth/change-password/change-password.component.ts","webpack:///src/app/auth/change-password/change-password.component.html","webpack:///src/app/auth/confirm-account/confirm-account.component.ts","webpack:///src/app/auth/confirm-account/confirm-account.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register.service.ts","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/remind-password/remind-password.component.ts","webpack:///src/app/auth/remind-password/remind-password.component.html","webpack:///src/app/auth/reset-password/reset-password.component.ts","webpack:///src/app/auth/reset-password/reset-password.component.html","webpack:///src/app/auth/user-code-encrypt.service.ts","webpack:///src/app/box-drone/box-drone-routing.module.ts","webpack:///src/app/box-drone/box-drone.module.ts","webpack:///src/app/box-drone/box-drone/box-drone.component.ts","webpack:///src/app/box-drone/box-drone/box-drone.component.html","webpack:///src/app/box-footer/box-footer-routing.module.ts","webpack:///src/app/box-footer/box-footer.module.ts","webpack:///src/app/box-footer/box-footer/box-footer.component.ts","webpack:///src/app/box-footer/box-footer/box-footer.component.html","webpack:///src/app/box-last-product/box-last-product-routing.module.ts","webpack:///src/app/box-last-product/box-last-product.module.ts","webpack:///src/app/box-last-product/box-last-product/box-last-product.component.ts","webpack:///src/app/box-last-product/box-last-product/box-last-product.component.html","webpack:///src/app/box-mobile/box-mobile.module.ts","webpack:///src/app/box-mobile/box-mobile/box-mobile.component.ts","webpack:///src/app/box-mobile/box-mobile/box-mobile.component.html","webpack:///src/app/box-special/box-special-routing.module.ts","webpack:///src/app/box-special/box-special.module.ts","webpack:///src/app/box-special/box-special/box-special.component.ts","webpack:///src/app/box-special/box-special/box-special.component.html","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/cart/cart.module.ts","webpack:///src/app/cart/cart.routing.module.ts","webpack:///src/app/cart/cart.service.ts","webpack:///src/app/error/error-handler/error-handler.component.ts","webpack:///src/app/error/error-handler/error-handler.component.html","webpack:///src/app/error/error.module.ts","webpack:///src/app/form/drone-form/drone-form.component.ts","webpack:///src/app/form/drone-form/drone-form.component.html","webpack:///src/app/form/form.module.ts","webpack:///src/app/form/form.routing.module.ts","webpack:///src/app/form/laptop-form/laptop-form.component.ts","webpack:///src/app/form/laptop-form/laptop-form.component.html","webpack:///src/app/form/order-address-form/order-address-form.component.ts","webpack:///src/app/form/order-address-form/order-address-form.component.html","webpack:///src/app/form/order-detail-form/order-detail-form.component.ts","webpack:///src/app/form/order-detail-form/order-detail-form.component.html","webpack:///src/app/form/order-form/order-form.component.ts","webpack:///src/app/form/order-form/order-form.component.html","webpack:///src/app/form/smartphone-form/smartphone-form.component.ts","webpack:///src/app/form/smartphone-form/smartphone-form.component.html","webpack:///src/app/form/user-form/user-form.component.ts","webpack:///src/app/form/user-form/user-form.component.html","webpack:///src/app/form/user-role-form/user-role-form.component.ts","webpack:///src/app/form/user-role-form/user-role-form.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/navi/menu/menu.component.ts","webpack:///src/app/navi/menu/menu.component.html","webpack:///src/app/navi/navi.module.ts","webpack:///src/app/navi/navi.routing.module.ts","webpack:///src/app/navi/page-not-found/page-not-found.component.ts","webpack:///src/app/navi/page-not-found/page-not-found.component.html","webpack:///src/app/navigation-bar/navigation-bar.component.ts","webpack:///src/app/navigation-bar/navigation-bar.component.html","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/app/orders/add-order/add-order.component.ts","webpack:///src/app/orders/add-order/add-order.component.html","webpack:///src/app/orders/order-sumary/order-sumary.component.ts","webpack:///src/app/orders/order-sumary/order-sumary.component.html","webpack:///src/app/orders/order/order.component.ts","webpack:///src/app/orders/order/order.component.html","webpack:///src/app/orders/orders-delete/orders-delete.component.ts","webpack:///src/app/orders/orders-delete/orders-delete.component.html","webpack:///src/app/orders/orders-manager/orders-manager.component.ts","webpack:///src/app/orders/orders-manager/orders-manager.component.html","webpack:///src/app/orders/orders.module.ts","webpack:///src/app/orders/orders.routing.module.ts","webpack:///src/app/orders/orders.service.ts","webpack:///src/app/orders/orders/orders.component.ts","webpack:///src/app/orders/orders/orders.component.html","webpack:///src/app/products/add-product/add-product.component.ts","webpack:///src/app/products/add-product/add-product.component.html","webpack:///src/app/products/delete-product/delete-product.component.ts","webpack:///src/app/products/delete-product/delete-product.component.html","webpack:///src/app/products/edit-product/edit-product.component.ts","webpack:///src/app/products/edit-product/edit-product.component.html","webpack:///src/app/products/product/drone-by-id/drone-by-id.component.ts","webpack:///src/app/products/product/drone-by-id/drone-by-id.component.html","webpack:///src/app/products/product/laptop-by-id/laptop-by-id.component.ts","webpack:///src/app/products/product/laptop-by-id/laptop-by-id.component.html","webpack:///src/app/products/product/product.component.ts","webpack:///src/app/products/product/product.component.html","webpack:///src/app/products/product/smartphone-by-id/smartphone-by-id.component.ts","webpack:///src/app/products/product/smartphone-by-id/smartphone-by-id.component.html","webpack:///src/app/products/products.module.ts","webpack:///src/app/products/products.routing.module.ts","webpack:///src/app/products/products.service.ts","webpack:///src/app/products/products/drones/drones.component.ts","webpack:///src/app/products/products/drones/drones.component.html","webpack:///src/app/products/products/laptops/laptops.component.ts","webpack:///src/app/products/products/laptops/laptops.component.html","webpack:///src/app/products/products/products.component.ts","webpack:///src/app/products/products/products.component.html","webpack:///src/app/products/products/smartphones/smartphones.component.ts","webpack:///src/app/products/products/smartphones/smartphones.component.html","webpack:///src/app/profile/edit-profile/edit-profile.component.ts","webpack:///src/app/profile/edit-profile/edit-profile.component.html","webpack:///src/app/profile/profile-bar/profile-bar.component.ts","webpack:///src/app/profile/profile-bar/profile-bar.component.html","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.routing.module.ts","webpack:///src/app/profile/profile.service.ts","webpack:///src/app/profile/profile/profile.component.ts","webpack:///src/app/profile/profile/profile.component.html","webpack:///src/app/slider/slider.module.ts","webpack:///src/app/slider/slider/slider.component.ts","webpack:///src/app/slider/slider/slider.component.html","webpack:///src/app/users/delete-user/delete-user.component.ts","webpack:///src/app/users/delete-user/delete-user.component.html","webpack:///src/app/users/edit-user/edit-user.component.ts","webpack:///src/app/users/edit-user/edit-user.component.html","webpack:///src/app/users/role-user/role-user.component.ts","webpack:///src/app/users/role-user/role-user.component.html","webpack:///src/app/users/user-by-id/user-by-id.component.ts","webpack:///src/app/users/user-by-id/user-by-id.component.html","webpack:///src/app/users/users.module.ts","webpack:///src/app/users/users.routing.module.ts","webpack:///src/app/users/users.service.ts","webpack:///src/app/users/users/users.component.ts","webpack:///src/app/users/users/users.component.html","webpack:///src/app/validation/validation-feedback/validation-feedback.component.ts","webpack:///src/app/validation/validation-feedback/validation-feedback.component.html","webpack:///src/app/validation/validation-order-address/validation-order-address.component.ts","webpack:///src/app/validation/validation-order-address/validation-order-address.component.html","webpack:///src/app/validation/validation-product/validation-product.component.ts","webpack:///src/app/validation/validation-product/validation-product.component.html","webpack:///src/app/validation/validation.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminProductComponent","auth","productsService","state","subscribe","getAll","response","product","error","statusError","status","console","document","scrollingElement","scrollTop","selector","templateUrl","styleUrls","AdminModule","declarations","imports","routes","path","component","AdminRoutingModule","forChild","AdminComponent","redirectTo","pathMatch","AppRoutingModule","forRoot","AppComponent","userSessionStorage","localStorage","getItem","getUserIdInStorage","AppModule","providers","bootstrap","AppService","urlAuth","urlApi","providedIn","AuthInterceptorService","next","handle","getAuthorizedRequest","isAuthenticated","clone","setHeaders","getTokenInLocalStorage","getToken","AuthModule","provide","useClass","multi","AuthRoutingModule","AuthService","http","userCodeEnctryptService","router","appService","session","userSession","token","user","pipe","checkRole","role","user_role","credentials","post","name","user_firstName","setTokenInLocalStorage","setUserIdInStorage","user_id","message","getValue","clearRole","removeItem","navigate","email","setItem","JSON","stringify","parse","userId","encryptCode","decryptCode","get","passwordResetData","changePasswordData","put","changeEmailData","ChangeEmailComponent","fb","passwordConfirm","correctPassword","correctChangeEmail","saveNewEmail","saveEmail","valid","confirmPasswordData","password","confirmPasswordForm","group","control","required","changeEmailForm","getCurrentUser","value","confirmPassword","changeEmail","ChangePasswordComponent","saveNewPassword","changePasswordForm","minLength","validatePassword","lowercase","uppercase","number","special","password_repeat","validator","values","password_match","options","hasUppercase","match","hasLowercase","hasNumber","hasSpecial","errors","changePassword","ConfirmAccountComponent","registerService","route","init","paramMap","params","confirmAccount","accountConfirmation","LoginComponent","correctData","loginForm","user_email","user_password","getMessage","login","RegisterService","account","RegisterComponent","validEmail","validPass","checkedEmail","emailExists","registerConfirm","account_confirmation_email","account_confirmation_password","emailForm","passwordForm","user_repeat_password","checkEmail","saveAccount","RemindPasswordComponent","sent","remindPasswordForm","passwordResetVerifyUser","ResetPasswordComponent","resetPasswordForm","queryParams","param","passwordResetCheckCode","linkIsCorrect","passwordResetSetNew","UserCodeEncryptService","idStr","idLength","length","secretNumberIndex","tableLength","table","i","push","Math","floor","random","j","codDez","tabdez","secretNumber","idStrDez","BoxDroneRoutingModule","BoxDroneModule","BoxDroneComponent","getByType","item1","item2","item3","item4","BoxFooterRoutingModule","BoxFooterModule","BoxFooterComponent","BoxLastProductRoutingModule","BoxLastProductModule","BoxLastProductComponent","lastProductList","empty","getLastProducts","lastProduct","setTimeout","window","location","reload","BoxMobileModule","BoxMobileComponent","snackbar","durationInSeconds","newsletterForm","msg","log","open","duration","verticalPosition","send","BoxSpecialRoutingModule","BoxSpecialModule","BoxSpecialComponent","CartComponent","cartService","selectProductForm","product_type","cartLocalItemList","pathOrder","emiterSetItem","getMyCartWithDatabase","checkCartIsEmpty","calculatePrice","setOrderItem","emit","isEmpty","sum","forEach","product_price","order_item_amount","cartSum","newFavorit","index","getMyCartItems","item","idInDatabase","idInList","deleteMyCartItem","err","deleteCartItemInLocalStorage","deleteMyCart","CartModule","CartRoutingModule","CartService","cartItem","ErrorHandlerComponent","ErrorModule","DroneFormComponent","productType","saved","productForm","product_mark","product_status","product_description","product_processor","product_system","product_camera","product_disc_type","product_graphics_card","pattern","product_ram_size","product_disc_size","product_screen_diagonal","product_amount_available","product_camera_resolution","product_time_work","product_range","emiterSaveProduct","updateProduct","FormModule","FormRoutingModule","LaptopFormComponent","changeProductMarkOnString","changeProductStatusOnString","changeProductMarkOnNumber","changeProductStatusOnNumber","OrderAddressFormComponent","ordersService","orderAddressForm","orders_firstName","orders_lastName","orders_email","orders_phoneNumber","orders_zipCode","orders_city","orders_street","orderId","getOrdersById","order","editAddress","valueOf","OrderDetailFormComponent","orderDetailForm","orders_status","orders_number_delivery_days","orders_delivery_method","orders_payments_method","editDetail","OrderFormComponent","addOrderForm","orderSummary","order_data","saveOrderSummary","SmartphoneFormComponent","UserFormComponent","userForm","user_lastName","user_phoneNumber","user_zipCode","user_city","user_street","updateUser","returnPath","saveUser","UserRoleFormComponent","roleForm","HomeComponent","productsRecomendList1","productsRecomendList2","productsRecomendList3","productsPromotion","getByStatus","MenuComponent","NaviModule","NaviRoutingModule","PageNotFoundComponent","NavigationBarComponent","NavigationComponent","breakpointObserver","isHandset$","observe","Handset","result","matches","AddOrderComponent","OrderSumaryComponent","sumOrder","orderData","orderItemList","saveOrderItem","saveOrder","createOrderItem","orders_number","orders_payments_sum","createOrder","OrderComponent","getOrderItemByOrderNumber","items","orderItem","OrdersDeleteComponent","remove","deleteOrder","OrdersManagerComponent","getAllOrders","orders","order_id","orders_id","OrdersModule","OrdersRoutingModule","OrdersService","OrdersComponent","getOrdersByUserId","userOrders","AddProductComponent","create","DeleteProductComponent","EditProductComponent","getById","editedProduct","typeProduct","update","DroneByIdComponent","amount","order_item_id","addProductForm","emiterSetProduct","LaptopByIdComponent","ProductComponent","cartUserItem","setLastProduct","setMyCartItem","newList","SmartphoneByIdComponent","ProductsModule","ProductsRoutingModule","ProductsService","type","DronesComponent","getAllProduct","drones","LaptopsComponent","laptops","ProductsComponent","SmartphonesComponent","smartphones","EditProfileComponent","editedUser","ProfileBarComponent","ProfileModule","ProfileRoutingModule","ProfileService","user_request","ProfileComponent","profile","SliderModule","SliderComponent","DeleteUserComponent","EditUserComponent","RoleUserComponent","updateRole","UserByIdComponent","UsersModule","UsersRoutingModule","UsersService","UsersComponent","usersList","getAllUsers","ValidationFeedbackComponent","ValidationOrderAddressComponent","ValidationProductComponent","ValidationModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-admin-product',\n  templateUrl: './admin-product.component.html',\n  styleUrls: ['./admin-product.component.css']\n})\nexport class AdminProductComponent implements OnInit {\n\n  constructor(public auth:AuthService, private productsService:ProductsService) { \n    this.auth.state.subscribe()\n\n      this.productsService.getAll().subscribe(response =>{\n        this.product = response\n      },error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      })\n    \n\n    \n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\nstatusError:number\nproduct:ProductTest[]\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"wraper\">\n            <error-handler [errorHandler]=\"statusError\"></error-handler>\n            <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"header\">\n              <h4>Produkty</h4>\n              <a [routerLink]=\"['/add-product']\">\n                <span _ngcontent-jlm-c187=\"\" class=\"material-icons\">add_circle</span>\n                Dodaj nowy produkt\n              </a>\n            </div>\n                <table class=\"table table-striped\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Lp</th>\n                        <th scope=\"col\">Produkt</th>\n                        <th scope=\"col\">Ilość</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let p of product let i = index;\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{p.product_description}}</td>\n                        <td>{{p.product_amount_available - p.product_amount_sold}} szt.</td>\n                        <td><a [routerLink]=\"['/product', p.product_id]\">\n                              <span class=\"material-icons\">chrome_reader_mode</span>\n                              podgląd\n                            </a>\n                        </td>     \n                      </tr>\n                    </tbody>\n                  </table>\n            </ng-container>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminRoutingModule } from './admin.routing.module';\nimport { AdminProductComponent } from './admin-product/admin-product.component';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [AdminComponent, AdminProductComponent],\n  imports: [\n    CommonModule,\n    ErrorModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminProductComponent } from './admin-product/admin-product.component';\n\nconst routes: Routes = [\n  {\n    path: 'panel-administracyjny',\n    component: AdminComponent\n  },\n  {\n    path: 'panel-administracyjny-produkty',\n    component: AdminProductComponent\n  },\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\n\n\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <h3>Panel administracyjny</h3>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/zamowienia-admin']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">assignment</span>\n                            Zamówienia \n                        </a>\n                    </div>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/panel-administracyjny-produkty']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">devices_other</span>\n                            Produkty \n                        </a>\n                    </div>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/users']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">people</span>\n                            Użytkownicy \n                        </a>\n                    </div>                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated || (auth.isAuthenticated && auth.role != 'ADMIN')\">\n                    <h4>Brak uprawnień</h4>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './navi/page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path:'not-found',\n    component: PageNotFoundComponent\n  },\n  {\n    path:'home',\n    component:  HomeComponent\n  },\n  {\n    path:'',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path:'**',\n    redirectTo: 'not-found',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n  })\n],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { UserCodeEncryptService } from './auth/user-code-encrypt.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private auth:AuthService, private userSessionStorage:UserCodeEncryptService){}\n\n  ngOnInit(){\n    if(localStorage.getItem('x-tom------>____ <o_o> ____<----x-tom') !== null){\n      this.auth.getUserIdInStorage()\n    }\n  }\n  \n}\n","<div class=\"page-wraper\">\n    <navigation>\n        <navigation-bar></navigation-bar>\n        <div class=\"content-wraper\">\n            <router-outlet></router-outlet>\n            <box-mobile></box-mobile>\n            <box-footer></box-footer>\n        </div>\n    </navigation>\n</div>\n    \n    \n    \n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthModule } from './auth/auth.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { NaviModule } from './navi/navi.module';\nimport { UsersModule } from './users/users.module';\nimport { CartModule } from './cart/cart.module';\nimport { ProductsModule } from './products/products.module';\nimport { FormModule } from './form/form.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { AdminModule } from './admin/admin.module';\nimport { ErrorModule } from './error/error.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\nimport { HomeComponent } from './home/home.component';\nimport { SliderModule } from './slider/slider.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { BoxDroneModule } from './box-drone/box-drone.module';\nimport { BoxMobileModule } from './box-mobile/box-mobile.module';\nimport { BoxLastProductModule } from './box-last-product/box-last-product.module';\nimport { BoxFooterModule } from './box-footer/box-footer.module';\nimport { BoxSpecialModule } from './box-special/box-special.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    NavigationBarComponent,\n    HomeComponent,\n  ],\n  imports: [\n    NgbModule,  \n    BrowserModule,\n    HttpClientModule,\n    AuthModule,\n    ProfileModule,\n    NaviModule,\n    UsersModule,\n    CartModule,\n    ProductsModule,\n    FormModule,\n    OrdersModule,\n    ValidationModule,\n    AdminModule,\n    ErrorModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    SliderModule,\n    BoxDroneModule,\n    BoxMobileModule,\n    BoxLastProductModule,\n    BoxFooterModule,\n    BoxSpecialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n\n  constructor(){}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor() { }\n\n  urlAuth = \"http://ec2-18-197-120-182.eu-central-1.compute.amazonaws.com:8090\"\n  urlApi = \"http://ec2-18-197-120-182.eu-central-1.compute.amazonaws.com:8080\"\n\n  // urlAuth = \"http://localhost:8090\"\n  // urlApi = \"http://localhost:8080\"\n\n\n}\n","import { Injectable} from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private auth:AuthService,) {\n    this.auth.state.subscribe()\n   }\n  \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(this.getAuthorizedRequest(req))\n\n  }\n\n  getAuthorizedRequest(req:HttpRequest<any>){\n\n    if(!this.auth.isAuthenticated){\n      return req.clone({\n        setHeaders:{\n          'Authorization': 'Bearer ' + this.auth.getTokenInLocalStorage()\n        }\n      })  \n    }else{\n      return req.clone({\n        setHeaders:{\n          'Authorization': 'Bearer ' + this.auth.getToken()\n        }\n      })\n    }\n    \n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\nimport { AuthInterceptorService } from './auth-interceptor.service';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthRoutingModule } from './auth.routing.module';\nimport { RegisterComponent } from './register/register.component';\nimport { ValidationModule } from '../validation/validation.module';\nimport { RemindPasswordComponent } from './remind-password/remind-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ChangeEmailComponent } from './change-email/change-email.component';\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, RemindPasswordComponent, ResetPasswordComponent, ChangePasswordComponent, ChangeEmailComponent, ConfirmAccountComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ValidationModule,\n    AuthRoutingModule\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    },\n    \n  ],\n  exports: [LoginComponent, RegisterComponent]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RemindPasswordComponent } from './remind-password/remind-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ChangeEmailComponent } from './change-email/change-email.component';\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\n\nconst routes: Routes = [\n  {\n    path: 'logowanie',\n    component: LoginComponent\n  },\n  {\n    path: 'logowanie/:options',\n    component: LoginComponent\n  },\n  {\n    path: 'rejestracja',\n    component: RegisterComponent\n  },\n  {\n    path: 'przypomnij-haslo',\n    component: RemindPasswordComponent\n  },\n  {\n    path: 'resetuj-haslo',\n    component: ResetPasswordComponent\n  },\n  {\n    path: 'zmiana-hasla',\n    component: ChangePasswordComponent\n  },\n  {\n    path: 'zmiana-email',\n    component: ChangeEmailComponent\n  },\n  {\n    path: 'potwierdzenie-rejestracji/:code/:email',\n    component: ConfirmAccountComponent\n  },\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule { }\n","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { map, tap } from 'rxjs/internal/operators';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { UserCodeEncryptService } from './user-code-encrypt.service';\nimport { PasswrodResetData } from '../model/passwordResetData';\nimport { ChangePassword } from '../model/changePasswordData';\nimport { ChangeEmail } from '../model/changeEmailData';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\n\n\ninterface Credentials{\n  user_email: String;\n  user_password: String;\n}\n\ninterface Session{\n  token: String;\n  user: User;\n  message?: String\n  status: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http:HttpClient, private userCodeEnctryptService:UserCodeEncryptService, private router: Router,\n    private appService:AppService) {\n  }\n  \n  private session = new BehaviorSubject<Session>(null)\n\n  isAuthenticated = false\n  role:string\n  name:String\n  user:User\n  status:boolean\n  \n\n  userSession:Session = {\n    token: '',\n    user: this.user,\n    status: false\n  }\n\n  state = this.session.pipe(\n    map( session => session && !!session.token),\n    tap( state => this.isAuthenticated = state)\n    )\n      \n  checkRole = this.session.pipe(\n    map(role => this.role = role.user.user_role))\n    \n    login(credentials:Credentials){\n      \n    return this.http.post(this.appService.urlAuth, credentials)\n      .subscribe((session:Session) =>{\n        this.session.next(session)\n        if(session.status){\n          this.role = session.user.user_role\n          this.name = session.user.user_firstName\n          this.status = session.status\n          this.setTokenInLocalStorage(session.token)\n          this.setUserIdInStorage(session.user.user_id)\n        }\n        \n      },error =>{\n        if(error instanceof HttpErrorResponse){\n          console.error(error.error)\n        }\n      })\n      \n    }\n\n    logout(message?:String){\n      this.session.next({\n        ...this.session.getValue(),\n        token: null,\n        message\n      })\n      \n      this.clearRole()\n      localStorage.removeItem('(O,,O)')\n      localStorage.removeItem('x-tom------>____ <o_o> ____<----x-tom')\n      // window.location.reload()\n      this.router.navigate(['/home']);      \n    }\n    \n    getCurrentUser(){\n      const session = this.session.getValue()\n      return session && session.user;\n    }\n\n    checkEmail(email:string){\n      return this.http.post<boolean>(this.appService.urlAuth+\"/check-email\", email)\n    }\n    \n    clearRole(){\n        this.role = \"\"\n    }\n        \n    getToken(){\n    const session = this.session.getValue()\n    return session && session.token;\n    }\n\n    getMessage(){\n    const session = this.session.getValue()\n    return session && session.message;\n    }\n\n  setTokenInLocalStorage(token){\n      localStorage.setItem('(O,,O)', JSON.stringify(token))\n  }\n\n  getTokenInLocalStorage(){\n    var token:string\n    if(localStorage.getItem('(O,,O)') !== null){\n         token = JSON.parse(localStorage.getItem('(O,,O)'))\n         return token\n    }  \n    \n  }\n\n  setUserIdInStorage(userId:number){\n    var code = this.userCodeEnctryptService.encryptCode(userId)\n    localStorage.setItem('x-tom------>____ <o_o> ____<----x-tom', JSON.stringify(code))\n  }\n\n\n  getUserIdInStorage(){\n    var code:string = JSON.parse(localStorage.getItem('x-tom------>____ <o_o> ____<----x-tom'))\n    var token:string = this.getTokenInLocalStorage()\n    var userId:number  = this.userCodeEnctryptService.decryptCode(code)\n    this.userSession.token = token\n\n      this.http.get<User>(this.appService.urlApi+\"/user/\"+userId).subscribe(\n        response =>{\n            this.userSession.user = response\n            this.role = response.user_role\n            this.name = response.user_firstName\n            this.session.next(this.userSession)\n        }\n      )  \n\n  }\n\npasswordResetVerifyUser(email:string){\n  return this.http.post<boolean>(this.appService.urlAuth+\"/password-reset/verify-user\", email)\n}\n\npasswordResetCheckCode(passwordResetData:PasswrodResetData){\n  return this.http.post<boolean>(this.appService.urlAuth+\"/password-reset/check-code\", passwordResetData)\n}\n\npasswordResetSetNew(passwordResetData:PasswrodResetData){\n  return this.http.post<boolean>(this.appService.urlAuth+\"/password-reset/set-new\", passwordResetData)\n}\n\nchangePassword(changePasswordData:ChangePassword){\n  return this.http.put<boolean>(this.appService.urlApi+\"/user/change-password\", changePasswordData)\n}\n\nchangeEmail(changeEmailData:ChangeEmail){\n  return this.http.put<boolean>(this.appService.urlApi+\"/user/change-email\", changeEmailData)\n}\n\nconfirmPassword(changePasswordData:ChangePassword){\n  return this.http.post<boolean>(this.appService.urlApi+\"/user/confirm-password\", changePasswordData)\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ChangeEmail } from 'src/app/model/changeEmailData';\nimport { ChangePassword } from 'src/app/model/changePasswordData';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n  styleUrls: ['./change-email.component.css']\n})\nexport class ChangeEmailComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) {\n    auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  passwordConfirm:boolean = false\n  correctPassword:boolean = true\n  correctChangeEmail:boolean = true\n  saveNewEmail:boolean = false\n  saveEmail:boolean = false;\n  valid:boolean = false\n\n  confirmPasswordData:ChangePassword = {\n    user_id: 0,\n    password: \"\",\n  }\n\n  changeEmailData:ChangeEmail = {\n    userId: 0\n,    email: ''\n  }\n\n  confirmPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required\n    ]),\n  })\n\n  changeEmailForm = this.fb.group({\n    email: this.fb.control('',[\n      Validators.required,\n      Validators.email\n    ]),\n  })\n\n  confirmPassword(){\n\n    if(this.confirmPasswordForm.valid){\n      this.valid = false;\n        this.confirmPasswordData.user_id = this.auth.getCurrentUser().user_id\n        this.confirmPasswordData.password = this.confirmPasswordForm.get('password').value\n        \n        this.auth.confirmPassword(this.confirmPasswordData).subscribe(response =>{\n\n          if(response){\n            this.passwordConfirm = response\n          }else{\n            this.correctPassword = response\n          }\n          \n        })\n    }else{\n      this.valid = true;\n    }\n  }\n\n\n  changeEmail(){\n\n    if(this.changeEmailForm.valid){\n      this.valid = false\n\n      this.changeEmailData.userId = this.auth.getCurrentUser().user_id\n      this.changeEmailData.email = this.changeEmailForm.get('email').value\n\n      this.auth.changeEmail(this.changeEmailData).subscribe(response =>{\n        if(response){\n            this.saveEmail = true\n        }else{\n          this.correctChangeEmail = false\n        }\n      })\n    }else{\n      this.valid = true\n    }\n    \n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Zmiana adresu e-mail</h3>\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <ng-container *ngIf=\"!passwordConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"confirmPasswordForm\" (submit)=\"confirmPassword()\">\n                                <ng-container *ngIf=\"valid\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Wypełnij puste pole\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!correctPassword\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Niepoprawne hasło\n                                    </div>\n                                </ng-container>\n                                <div class=\"form-group\">\n                                    <label for=\"Password\">Podaj hasło do swojego konta</label>\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                    <validation-feedback [control]=\"confirmPasswordForm.get('password')\"></validation-feedback>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-success\" value=\"Dalej\">\n                            </form>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"passwordConfirm\">\n                        <ng-container *ngIf=\"saveNewEmail\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Hasło zostało zmienione<br>\n                                <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                            </div>\n                            \n                        </ng-container>\n                        <ng-container *ngIf=\"!saveNewEmail\">\n                            <ng-container *ngIf=\"!saveEmail\">\n                                <div class=\"form\">\n                                    <form [formGroup]=\"changeEmailForm\" (submit)=\"changeEmail()\">\n                                        <ng-container *ngIf=\"valid\">\n                                            <div class=\"alert alert-danger\" role=\"alert\">\n                                                Wypełnij puste pole\n                                            </div>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!correctChangeEmail\">\n                                            <div class=\"alert alert-danger\" role=\"alert\">\n                                                Email jest już zajęty\n                                            </div>\n                                        </ng-container>\n                                        <div class=\"form-group\">\n                                            <label for=\"Password\">Podaj nowy email</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                                            <validation-feedback [control]=\"changeEmailForm.get('email')\"></validation-feedback>\n                                        </div>\n                                        <input type=\"submit\" class=\"btn btn-success\" value=\"Zapisz\">\n                                    </form>\n                                </div>\n                            </ng-container>\n                            <ng-container *ngIf=\"saveEmail\">\n                                <div class=\"alert alert-success\" role=\"alert\">\n                                    Email został zmieniony<br>\n                                    <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, ValidatorFn, FormControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ChangePassword } from 'src/app/model/changePasswordData';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) {\n    auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  passwordConfirm:boolean = false\n  correctPassword:boolean = true\n  saveNewPassword:boolean = false\n  valid:boolean = false\n\n  confirmPasswordData:ChangePassword = {\n    user_id: 0,\n    password: \"\",\n  }\n\n  changePasswordData:ChangePassword = {\n    user_id: 0\n,    password: ''\n  }\n\n  confirmPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required\n    ]),\n  })\n\n  changePasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    password_repeat: this.fb.control(''),\n\n\n\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.password !== values.password_repeat){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n\n\n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n\n  confirmPassword(){\n\n    if(this.confirmPasswordForm.valid){\n      this.valid = false;\n        this.confirmPasswordData.user_id = this.auth.getCurrentUser().user_id\n        this.confirmPasswordData.password = this.confirmPasswordForm.get('password').value\n        \n        this.auth.confirmPassword(this.confirmPasswordData).subscribe(response =>{\n\n          if(response){\n            this.passwordConfirm = response\n          }else{\n            this.correctPassword = response\n          }\n          \n        })\n    }else{\n      this.valid = true;\n    }\n  }\n\n  changePassword(){\n\n    if(this.changePasswordForm.valid){\n      this.valid = false\n\n      this.changePasswordData.user_id = this.auth.getCurrentUser().user_id\n      this.changePasswordData.password = this.changePasswordForm.get('password').value\n\n      this.auth.changePassword(this.changePasswordData).subscribe()\n      this.saveNewPassword = true\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Zmiana hasła</h3>\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <ng-container *ngIf=\"!passwordConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"confirmPasswordForm\" (submit)=\"confirmPassword()\">\n                                <ng-container *ngIf=\"valid\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Wypełnij puste pole\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!correctPassword\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Niepoprawne hasło\n                                    </div>\n                                </ng-container>\n                                <div class=\"form-group\">\n                                    <label for=\"Password\">Podaj aktualne hasło do swojego konta</label>\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                    <validation-feedback [control]=\"confirmPasswordForm.get('password')\"></validation-feedback>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-success\" value=\"Wyślij\">\n                            </form>\n                        </div>\n                    </ng-container>\n\n                     <ng-container *ngIf=\"passwordConfirm\">\n                        <ng-container *ngIf=\"saveNewPassword\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Hasło zostało zapisane.<br>\n                                <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                            </div>\n                        </ng-container>\n        \n                        <ng-container *ngIf=\"!saveNewPassword\">\n                            <div class=\"form\">\n                                <form [formGroup]=\"changePasswordForm\" (submit)=\"changePassword()\">\n                                    <ng-container *ngIf=\"valid\">\n                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                            Wypełnij poprawnie wszystkie pola\n                                        </div>\n                                    </ng-container>\n                                    <div class=\"form-group\">\n                                        <label for=\"Password\">Hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                        <validation-feedback [control]=\"changePasswordForm.get('password')\"></validation-feedback>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"Password2\">Powtórz hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"password_repeat\">\n                                        <validation-feedback [control]=\"changePasswordForm\" ></validation-feedback>\n                                    </div>\n                                    <input type=\"submit\" class=\"btn btn-success\" value=\"Zapisz\">\n                                </form>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n            </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from '../register.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-confirm-account',\n  templateUrl: './confirm-account.component.html',\n  styleUrls: ['./confirm-account.component.css']\n})\nexport class ConfirmAccountComponent implements OnInit {\n\n  constructor(private registerService:RegisterService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.route.paramMap.subscribe(params =>{\n      this.code = params.get('code'),\n      this.email = params.get('email')\n      })\n    \n    this.registerService.confirmAccount(this.code, this.email).subscribe(response =>{\n        this.accountConfirmation = response\n        this.init = true\n    })\n  }\n\ncode:string\nemail:string\ninit:boolean = false\naccountConfirmation:boolean\n\n\n}\n","<div class=\"container-fluid\">\n    <ng-container *ngIf=\"init\">\n        <ng-container *ngIf=\"accountConfirmation\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                <h4>Dziękujemy za rejestracje :)</h4>\n                <p>Możesz zalogować się na swoje konto.</p>\n                <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n           </div>\n        </ng-container>\n        \n        <ng-container *ngIf=\"!accountConfirmation\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <h4>Coś poszło nie tak :(</h4>\n                <p>Prawdopodobie link wygasł.</p>\n                <button class=\"btn btn-info\" [routerLink]=\"['/rejestracja']\">Spróbuj ponownie</button>\n           </div>\n        </ng-container>\n    </ng-container>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n    \n    this.route.paramMap.subscribe(params =>{\n      this.options = +params.get('options')\n      })\n  }\n\n  ngOnInit() {\n    this.message =  this.auth.getMessage()\n    document.scrollingElement.scrollTop = 0\n   }\n\n  message:String\n  options = 0\n  valid:boolean = false\n  correctData = true\n\n\n  loginForm = this.fb.group({\n    user_email: this.fb.control('', [\n    Validators.required,\n    Validators.email\n    ]),\n    user_password: this.fb.control('', [\n      Validators.required,\n    ]),\n  })\n  \n  login(){\n\n    if(this.loginForm.valid){\n      this.valid = false;\n      this.auth.login(this.loginForm.value)\n      if(!this.auth.status){\n        this.correctData = false\n      }\n    }else{\n      this.valid = true;\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <ng-container *ngIf=\"!auth.isAuthenticated\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h3>Mam już konto</h3>\n                <div class=\"alert alert-danger\" *ngIf=\"message\">{{message}}</div>\n                <form [formGroup]=\"loginForm\" (submit)=\"login()\">\n        \n                    <ng-container *ngIf=\"valid\"> \n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            Wpisz email i hasło\n                          </div>\n                    </ng-container>\n                    \n                    <ng-container *ngIf=\"!correctData\"> \n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            Niepoprawny login lub hasło\n                          </div>\n                    </ng-container>\n        \n                    <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"user_email\" placeholder=\"E-mail\">\n                        <validation-feedback [control]=\"loginForm.get('user_email')\"></validation-feedback>\n                    </div>\n                \n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"user_password\" placeholder=\"Hasło\">\n                    </div>\n        \n                    <input type=\"submit\" class=\"btn btn-primary mx-auto login\" value=\"Zaloguj się\">\n        \n                    <div>\n                        <a [routerLink]=\"['/przypomnij-haslo']\">Nie pamiętam hasła</a>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6\">\n                <h3>Nie mam konta</h3>\n                <ng-container *ngIf=\"options == 1\">\n                    <button [routerLink]=\"['/zamowienie']\" type=\"button\" class=\"btn btn-primary\">Kontynuuj bez logowania</button>\n                </ng-container>    \n\n                <button [routerLink]=\"['/rejestracja']\" type=\"button\" class=\"btn btn-primary\">Załóż konto</button>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"auth.isAuthenticated\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <div class=\"wraper wraper-log\">\n                        <div class=\"header\">\n                            <h4>Jesteś zalogowany</h4>\n                            <p>Przejdź do:</p>\n                        </div>\n                        <div><a [routerLink]=\"['/moje-zamowienia']\">Moje zamówienia</a></div>\n                        <div><a [routerLink]=\"['/profile']\">Moje konto</a></div>\n                        <div><a [routerLink]=\"['/products/drones']\">Drony</a></div>\n                        <div><a [routerLink]=\"['/products/laptops']\">Laptopy</a></div>\n                        <div><a [routerLink]=\"['/products/smartphones']\">Smartfony</a></div>\n                    </div>\n                </div>\n            </div>\n    </ng-container>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RegisterData } from '../model/registerData';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http:HttpClient, private appService:AppService) { }\n\n  checkEmail(email:string){\n    return this.http.post<boolean>(this.appService.urlAuth+\"/account/check-email\", email)\n  }\n\n  saveAccount(account:RegisterData){\n    return this.http.post<boolean>(this.appService.urlAuth+\"/account/save\", account)\n  }\n\n    confirmAccount(code:string, email:string){\n      return this.http.get<boolean>(this.appService.urlAuth+\"/account/confirmation\",{\n        params:{\n          code:code,\n          email:email\n        }\n      })\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, ValidatorFn, FormControl, FormGroup } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { RegisterData } from 'src/app/model/registerData';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, private registerService:RegisterService) { }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n  \n  error\n  validEmail:boolean = false\n  validPass:boolean = false\n  checkedEmail:boolean = false\n  emailExists:boolean = false\n  registerConfirm: boolean = false\n\n  account:RegisterData = {\n    account_confirmation_email: '',\n    account_confirmation_password: '',\n  }\n\n\n  emailForm = this.fb.group({\n    user_email: this.fb.control('',[\n      Validators.required,\n      Validators.email\n    ]),\n  })\n\n  passwordForm = this.fb.group({\n    user_password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    user_repeat_password: this.fb.control(''),\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.user_password !== values.user_repeat_password){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n  \n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n  \ncheckEmail(){\n  if(this.emailForm.valid){\n    this.validEmail = false;\n    var email = this.emailForm.get('user_email').value\n\n    this.registerService.checkEmail(email).subscribe(response =>{\n      if(response){\n        this.emailExists = false\n        this.checkedEmail = true\n        \n      }else{\n        this.emailExists = true\n      }\n    })\n  }else{\n    this.validEmail = true;\n  }  \n}\n\nsaveAccount(){\n\n  if(this.passwordForm.valid){\n    this.validPass = false\n    \n    this.account.account_confirmation_email = this.emailForm.get('user_email').value\n    this.account.account_confirmation_password = this.passwordForm.get('user_password').value\n\n    this.registerService.saveAccount(this.account).subscribe(response =>{\n        if(response){\n            this.registerConfirm = true\n        }else{\n\n        }\n    })\n  }else{\n    this.validPass = true\n  }\n}\n\n}\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Rejestracja</h3>\n\n                <ng-container *ngIf=\"!checkedEmail\">\n                    <div class=\"form\">\n                        <form [formGroup]=\"emailForm\" (submit)=\"checkEmail()\">\n                            <ng-container *ngIf=\"validEmail\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                    Musisz poprawnie wypełnić formularz.\n                                  </div>\n                            </ng-container>\n                \n                            <ng-container *ngIf=\"emailExists\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                    Podany email jest zajęty.\n                                  </div>\n                            </ng-container>\n                    \n                                <div class=\"form-group\">\n                                    <label class=\"label-input100\" for=\"Email\">Podaj Email</label>\n                                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"user_email\">\n                                    <validation-feedback [control]=\"emailForm.get('user_email')\"></validation-feedback>\n                                </div>\n                                \n                                <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"Dalej\">\n                    \n                        </form>\n                    </div>\n                </ng-container>\n                \n                \n                <ng-container *ngIf=\"checkedEmail\">\n                \n                    <ng-container *ngIf=\"!registerConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"passwordForm\" (submit)=\"saveAccount()\">\n                                <ng-container *ngIf=\"validPass\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Musisz poprawnie wypełnić formularz.\n                                      </div>\n                                </ng-container>\n                                     \n                                    <div class=\"form-group\">\n                                        <label for=\"Password\">Hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"user_password\">\n                                        <validation-feedback [control]=\"passwordForm.get('user_password')\"></validation-feedback>\n                                    </div>\n                            \n                                    <div class=\"form-group\">\n                                        <label for=\"Password2\">Powtórz hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"user_repeat_password\">\n                                        <validation-feedback [control]=\"passwordForm\" ></validation-feedback>\n                                    </div>\n                            \n                                    <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"załóż konto\">\n                        \n                            </form>\n                        </div>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"registerConfirm\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Na podany adres email. Wysłalismy link w celu weryfikacji konta. Link ważny 10min\n                          </div>\n                    </ng-container>\n                \n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-remind-password',\n  templateUrl: './remind-password.component.html',\n  styleUrls: ['./remind-password.component.css']\n})\nexport class RemindPasswordComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  valid:boolean = false;\n  sent:boolean = false;\n  \n  remindPasswordForm = this.fb.group({    \n    email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]), \n\n  })\n\n  resetPassword(){\n\n    if(this.remindPasswordForm.valid){\n      this.valid = false\n      this.sent = true\n      this.auth.passwordResetVerifyUser(this.remindPasswordForm.get('email').value).subscribe()\n    }else{\n      this.valid = true\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"!sent\">\n\n                    <ng-container *ngIf=\"valid\">\n                        <div class=\"alert alert-danger\" role=\"alert\">\n                        Wypełnij poprawnie wszystkie pola\n                        </div>\n                    </ng-container>\n                \n                    <form [formGroup]=\"remindPasswordForm\" (submit)=\"resetPassword()\">\n                        <h4>Resetuj hasło</h4>\n                \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Email</label>\n                \n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                \n                            <div class=\"validation-feedback\" *ngIf=\"remindPasswordForm.get('email').touched || remindPasswordForm.get('email').dirty\">\n                    \n                                <div *ngIf=\"remindPasswordForm.get('email').hasError('required')\">\n                                    Pole jest wymagane\n                                </div>\n                \n                                <div *ngIf=\"remindPasswordForm.get('email').hasError('email')\">\n                                    Niepoprawny email\n                                </div>\n                \n                            </div>\n                \n                        </div>\n                \n                        <input type=\"submit\" value=\"zresetuj hasło\" class=\"btn btn-danger\">\n                    </form>\n                </ng-container>\n                            \n                \n                <ng-container *ngIf=\"sent\">\n                    <div class=\"alert alert-success msg\" role=\"alert\">\n                        <h4>Jeśli podany użytkownik istnieje. Otrzyma link do resetu hasła.</h4>\n                        <p>Sprawdź swoją pocztę :)</p>\n                        <p>Link po <strong>10 minutach</strong> wygasa</p>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, ValidatorFn, FormControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { PasswrodResetData } from 'src/app/model/passwordResetData';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  \n  constructor(private fb:FormBuilder, public auth:AuthService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.route.queryParams.subscribe(param =>{\n      this.passwordResetData.email = param['user']\n      this.passwordResetData.code = param['code']\n      \n    })\n\n    this.auth.passwordResetCheckCode(this.passwordResetData).subscribe(response =>{\n      this.linkIsCorrect = response\n    });\n      \n  }\n\n  linkIsCorrect:boolean\n  saveNewPassword:boolean = false\n  valid:boolean = false\n  \n  passwordResetData:PasswrodResetData = {\n    email: \"\",\n    code: \"\",\n    password: '',\n  }\n\n  resetPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    password_repeat: this.fb.control(''),\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.password !== values.password_repeat){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n\n\n\n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n\n  resetPassword(){\n\n    if(this.resetPasswordForm.valid){\n      this.valid = false\n      \n      this.passwordResetData.password = this.resetPasswordForm.get('password').value\n\n      this.auth.passwordResetSetNew(this.passwordResetData).subscribe(response =>{\n        this.saveNewPassword = response\n      })\n      \n    }else{\n      this.valid = true\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wrap\">\n                <h4>Reset hasła</h4>\n\n                <ng-container *ngIf=\"saveNewPassword\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                        Hasło zostało zmienione<br>\n                        <a class=\"btn btn-secondary\" [routerLink]=\"['/logowanie']\">Zaloguj</a>  \n                      </div>\n                      \n                </ng-container>\n                \n                <ng-container *ngIf=\"linkIsCorrect && !saveNewPassword\">\n                    <div class=\"form\">\n                        <form [formGroup]=\"resetPasswordForm\" (submit)=\"resetPassword()\">\n                            <ng-container *ngIf=\"valid\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                     Wypełnij poprawnie wszystkie pola\n                                </div>\n                            </ng-container>\n                        \n                \n                            <div class=\"form-group\">\n                                <label for=\"Password\">Hasło</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"password\">\n                                <validation-feedback [control]=\"resetPasswordForm.get('password')\"></validation-feedback>\n                \n                            </div>\n                \n                            <div class=\"form-group\">\n                                <label for=\"Password2\">Powtórz hasło</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"password_repeat\">\n                                <validation-feedback [control]=\"resetPasswordForm\" ></validation-feedback>\n                            </div>\n                \n                    \n                            <input type=\"submit\" class=\"btn btn-danger input100-submit\" value=\"wyślij\">\n                        </form>\n                    </div>\n                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!linkIsCorrect\">\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        Link wygasł :( Spróbuj ponownie :)\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCodeEncryptService {\n\n  constructor() { }\n  \n  encryptCode(id:number) {\n  var idStr:string = \"\"+id\n  var idLength = idStr.length\n  var secretNumberIndex:number = 4\n  let tableLength = 35\n  let table = []\n  var code:String = \"\"\n\n    for(var i = 0; i < tableLength; i++ ){\n\n      if(i == secretNumberIndex){\n        table.push(idLength)\n        table.push((Math.floor((Math.random()* 9) +1)))\n        for(var j = 0; j < idLength; j++){\n            table.push(+idStr[j])\n        }\n       }\n      table.push(Math.floor((Math.random()* 9) +1))\n    }\n\n    for(var i = 0; i < table.length; i++){\n        code += \"\"+table[i]\n    }\n\n    return code\n  }\n\n  decryptCode(code:String){    \n    var codDez:String = code\n    var tabdez= []\n\n    for(var i = 0; i < codDez.length; i++){\n        tabdez.push(+codDez[i])\n    }\n\n    var secretNumber:number = tabdez[4] \n    var idStrDez:string = ''\n\n    for(var i = 6; i <= 6+secretNumber-1; i++){\n      idStrDez += ''+tabdez[i]\n    }\n\n    return +idStrDez;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxDroneRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxDroneComponent } from './box-drone/box-drone.component';\nimport { BoxDroneRoutingModule } from './box-drone-routing.module';\n\n@NgModule({\n  declarations: [BoxDroneComponent],\n  imports: [\n    CommonModule,\n    BoxDroneRoutingModule\n  ],\n  exports: [BoxDroneComponent]\n})\nexport class BoxDroneModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'box-drone',\n  templateUrl: './box-drone.component.html',\n  styleUrls: ['./box-drone.component.css']\n})\nexport class BoxDroneComponent implements OnInit {\n\n  constructor(private productsService:ProductsService) { }\n\n  ngOnInit(): void {\n\n    this.productsService.getByType(\"drone\").subscribe(response=>{\n\n      for(var i = 0; i <= 3; i++ ){\n        if(i == 0){\n          this.item1 = response[i]\n        }\n\n        if(i == 1){\n          this.item2 = response[i]\n        }\n\n        if(i == 2){\n          this.item3 = response[i]\n        }\n\n        if(i == 3){\n          this.item4 = response[i]\n        }\n      }\n\n    })\n\n    \n  }\n\n  item1:ProductTest\n  item2:ProductTest\n  item3:ProductTest\n  item4:ProductTest\n\n}\n","<ng-container *ngIf=\"item1\">\n    <div class=\"container-fluid\">\n        <div class=\"drone-wraper\">\n            <h4>Drony</h4>\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <a [routerLink]=\"['/product', item1.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item1.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item1.product_description}}</div>\n                            <div class=\"price\">{{item1.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item2\">\n                <a [routerLink]=\"['/product', item2.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item2.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item2.product_description}}</div>\n                            <div class=\"price\">{{item2.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item3\">\n                <a [routerLink]=\"['/product', item3.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item3.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item3.product_description}}</div>\n                            <div class=\"price\">{{item3.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item4\">\n                <a [routerLink]=\"['/product', item4.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item4.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item4.product_description}}</div>\n                            <div class=\"price\">{{item4.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n        <div class=\"link\">\n            <a [routerLink]=\"['/products/drones']\">więcej...</a>\n        </div>\n        </div>\n    </div>\n\n\n</ng-container>\n    \n    \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\nexport class BoxFooterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxFooterRoutingModule } from './box-footer-routing.module';\nimport { BoxFooterComponent } from './box-footer/box-footer.component';\n\n\n@NgModule({\n  declarations: [BoxFooterComponent],\n  imports: [\n    CommonModule,\n    BoxFooterRoutingModule\n  ],\n  exports: [BoxFooterComponent]\n})\nexport class BoxFooterModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'box-footer',\n  templateUrl: './box-footer.component.html',\n  styleUrls: ['./box-footer.component.css']\n})\nexport class BoxFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row wraper\">\n        <div class=\"col-sm-4\">\n            &copy; x-tom 2020\n        </div>\n        <div class=\"col-sm-8\">\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/inpost.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/dotpay.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/mastercard.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/ups.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/pko.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/visa.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/santander.png\" class=\"img-footer\" alt=\"\"></span>\n        </div>\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxLastProductRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxLastProductComponent } from './box-last-product/box-last-product.component';\nimport { BoxLastProductRoutingModule } from './box-last-product-routing.module';\n\n\n@NgModule({\n  declarations: [BoxLastProductComponent],\n  imports: [\n    CommonModule,\n    BoxLastProductRoutingModule\n  ],\n  exports: [BoxLastProductComponent]\n})\nexport class BoxLastProductModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'box-last-product',\n  templateUrl: './box-last-product.component.html',\n  styleUrls: ['./box-last-product.component.css']\n})\nexport class BoxLastProductComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.getLastProducts()\n\n  }\n\n  lastProductList:ProductTest[] = []\n  empty:boolean = false;\n\n  getLastProducts(){\n    var lastProduct:ProductTest[] = []\n    lastProduct = JSON.parse(localStorage.getItem('lastProduct'))\n\n    if( lastProduct == null || lastProduct.length == 0){\n      this.empty = true\n    }else{\n      this.lastProductList = lastProduct\n    }\n  }\n\n  \n\n  reload(id:number){\n    this.router.navigate(['/product', id]);\n\n    setTimeout(function(){\n      window.location.reload()\n    },300);\n  \n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"last-product-wraper\">\n        <h4>Ostatnio oglądane</h4>\n        <div class=\"row\">\n            <ng-container *ngIf=\"empty\">\n                Brak ostatnio przeglądanych produktów\n            </ng-container>\n            <div class=\"col-lg-2 item\" *ngFor=\"let p of lastProductList\">\n                <a (click)=\"reload(p.product_id)\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img  src=\"../../../assets/img/last-watched/{{p.product_mark}}-{{p.product_type}}-127-106.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{p.product_description}}</div>\n                            <div class=\"price\">{{p.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxMobileComponent } from './box-mobile/box-mobile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {MatSnackBarModule} from '@angular/material/snack-bar'\n\n\n@NgModule({\n  declarations: [BoxMobileComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n  ],\n  exports: [\n    BoxMobileComponent\n  ]\n})\nexport class BoxMobileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'box-mobile',\n  templateUrl: './box-mobile.component.html',\n  styleUrls: ['./box-mobile.component.css']\n})\nexport class BoxMobileComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, private snackbar:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  durationInSeconds = 5;\n\n  newsletterForm = this.fb.group({\n    email: this.fb.control('', [\n    Validators.required,\n    Validators.email\n    ]),\n  })\n\n  send(){\n\n    var msg = \"\"\n\n    if(this.newsletterForm.valid){\n      msg = \"Twój e-mail został zapisany.\"\n    }else{\n      msg = \"Wypełnij poprawnie formularz!!!\"\n    }\n\n    console.log(\"wysłano\")\n    this.snackbar.open(msg,'',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"newsletter\">\n                <div class=\"row\">\n                    <div class=\"col-sm-7\">\n                        <h4>Newsletter</h4>\n                        <p>Nie przegap żadnej promocji,</p>\n                        <p>zdobywaj dodatkowe rabaty.</p>\n                        <div class=\"form-box\">\n                            <form [formGroup]=\"newsletterForm\" (submit)=\"send()\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Twój e-mail\" formControlName=\"email\">\n                                <input type=\"submit\" value=\"Zapisz się\" class=\"btn btn-primary mx-auto\"> \n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-5 img\">\n                        <img src=\"../../../assets/img/box/newsletter.png\" style=\"width: 80%; height: auto;\">\n                    </div>\n                </div>\n                \n            </div>\n\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"mobile-app\">\n                <div class=\"row\">\n                    <div class=\"col-sm-7\">\n                        <h4>Aplikacja Mobilna</h4>\n                        <p>Pracujemy nad nią,</p>\n                        <p>wkrótce będzie dostępna.</p>\n                        <div class=\"img-box\">\n                            <span><img src=\"../../../assets/img/box/app-store.svg\"></span>\n                            <span><img src=\"../../../assets/img/box/android.svg\"></span>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-5 img\">\n                        <img src=\"../../../assets/img/box/mobile-box.png\" style=\"width: 80%; height: auto;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"contact-wraper\">\n                <div class=\"row\">\n                    <div class=\"col-lg-3\">\n                        <h4>Kontakt</h4>\n                        <p>Proszę o kontakt,</p>\n                        <p>może spotkamy się na rozmowie...</p>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <div class=\"phone\">\n                            <span class=\"material-icons\">call</span><a href=\"tel:880294863\">880-294-863</a> \n                        </div>\n                        <div class=\"email\">\n                            <span class=\"material-icons\">markunread</span><a href=\"mailto:tom.ociepa@gmail.com\">tom.ociepa@gmail.com</a> \n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <p>Odwiedź mnie na</p>\n                        <div class=\"contact-img-wraper\">\n                            <a href=\"https://www.linkedin.com/in/tomasz-ociepa/\">\n                                <img class=\"contact-img\" src=\"../../../assets/img/box/linkedin.png\"> \n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxSpecialRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxSpecialRoutingModule } from './box-special-routing.module';\nimport { BoxSpecialComponent } from './box-special/box-special.component';\n\n\n@NgModule({\n  declarations: [BoxSpecialComponent],\n  imports: [\n    CommonModule,\n    BoxSpecialRoutingModule\n  ],\n  exports: [\n    BoxSpecialComponent\n  ]\n})\nexport class BoxSpecialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'box-special',\n  templateUrl: './box-special.component.html',\n  styleUrls: ['./box-special.component.css']\n})\nexport class BoxSpecialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h4>Wybraliśmy dla Ciebie</h4>\n                <a [routerLink]=\"['/product', 4]\">\n                    <div class=\"img\">\n                        <img src=\"../../../assets/img/product-full/nokia-smartphone-517-433.jpg\">\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"desc\">Nokia 32GB RAM</div>\n                        <div class=\"price\">2345 zł</div>\n                    </div>\n                </a>\n\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"spec-wrap\">\n                    <div class=\"logo\">\n                        <a [routerLink]=\"['/product', 4]\">\n                            <img src=\"../../../assets/img/logo/nokia-logo.png\">\n                        </a>\n                    </div>\n                    <div class=\"header\">\n                        <h5>Specyfikacja</h5>\n                        <a [routerLink]=\"['/product', 4]\">\n                            <table class=\"table table-striped\">\n                                <tbody>\n                                  <tr>\n                                    <td>System</td>\n                                    <td>Android</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Przeątna ekranu</td>\n                                    <td>4.7\"</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Kamera</td>\n                                    <td>20 Mpix</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>126 GB</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>32 GB</td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                        </a>\n                    </div>                    \n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { CartService } from './cart.service';\nimport { CartItemLocalStorage } from '../model/cartItemLocalStorage';\n\n@Component({\n  selector: 'cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(public auth:AuthService, private cartService:CartService ,private fb:FormBuilder) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    if(localStorage.getItem('products') == null){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))  \n    }\n    \n    if(this.auth.isAuthenticated){\n      this.getMyCartWithDatabase()\n    }else{\n      this.cartLocalItemList = JSON.parse(localStorage.getItem('products'))\n    }\n    \n    this.checkCartIsEmpty()\n    this.calculatePrice()\n    this.setOrderItem()\n  }\n  \n  selectProductForm = this.fb.group({    \n    product_type: this.fb.control(''), \n  })\n\n  cartLocalItemList:CartItemLocalStorage[] = []\n\n  statusError:number\n  cartSum:number\n  isEmpty:boolean\n  error: boolean\n  pathOrder:boolean = false\n  \n  @Input(\"setPathOrder\")\n  set path(path:boolean){\n    this.pathOrder = path\n  }\n  \n  @Output('setOrderItem')\n  emiterSetItem = new EventEmitter()\n  \n  setOrderItem(){\n    this.emiterSetItem.emit(this.cartLocalItemList)\n  }\n\n  checkCartIsEmpty(){\n    if(this.cartLocalItemList.length > 0){\n      this.isEmpty = false\n    }else if(this.cartLocalItemList.length == 0){\n      this.isEmpty = true\n    }\n  }\n\n  calculatePrice(){\n    var sum:number = 0\n    this.cartLocalItemList.forEach((i)=>{\n      sum += (i.product.product_price * i.order_item_amount)\n    })\n    this.cartSum = sum\n  }\n\n  deleteCartItemInLocalStorage(id){\n    delete this.cartLocalItemList[id]\n    var newFavorit =[]\n    this.cartLocalItemList.forEach((index)=>{\n      if(id !== index){\n          newFavorit.push(index)\n      }\n    })\n    this.cartLocalItemList = newFavorit\n    if(!this.auth.isAuthenticated){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }\n    \n    this.calculatePrice()\n    this.checkCartIsEmpty()\n  }\n\n  removeCartInLocalStorage(){\n    this.cartLocalItemList = []\n    localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    this.checkCartIsEmpty()\n  }\n\n  getMyCartWithDatabase(){\n    \n    if(this.auth.getCurrentUser()){\n      this.cartService.getMyCartItems(this.auth.getCurrentUser().user_id).subscribe(\n\n        response =>{\n          \n            response.forEach((item)=>{\n              this.cartLocalItemList.push(item)    \n            })\n  \n            this.cartLocalItemList.forEach((i)=>{\n            })\n            this.checkCartIsEmpty()\n            this.calculatePrice()\n            \n        }\n      )\n    }    \n\n  }\n\n  deleteCartItemInDatabase(idInDatabase, idInList){\n    this.cartService.deleteMyCartItem(idInDatabase).subscribe(()=>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n      })\n\n      this. deleteCartItemInLocalStorage(idInList)\n  }\n\n  removeCartInDatabase(){\n    this.cartService.deleteMyCart(this.auth.getCurrentUser().user_id).subscribe(()=>{\n    },err=>{\n      this.error = err.message\n    })\n    this.cartLocalItemList = []\n    this.checkCartIsEmpty()\n  }\n\n}\n","<error-handler [errorHandler]=\"statusError\"></error-handler>\n\n<div class=\"container-fluid\">\n  <ng-container *ngIf=\"isEmpty\">\n    <h2>Koszyk jest pusty</h2>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isEmpty\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        \n        <table>\n          <tbody>\n              <tr>\n                <td><h4> Koszyk</h4></td>\n                <td>\n                  <ng-container *ngIf=\"!pathOrder\">\n                    <ng-container *ngIf=\"auth.isAuthenticated\">\n                      <a (click)=\"removeCartInDatabase()\"><span class=\"material-icons\">delete_forever</span> <span>Wyczyść koszyk</span></a>\n                    </ng-container>\n                    <ng-container *ngIf=\"!auth.isAuthenticated\">\n                      <a (click)=\"removeCartInLocalStorage()\"><span class=\"material-icons\">delete_forever</span> <span>Wyczyść koszyk</span></a>\n                    </ng-container>\n                  </ng-container>\n                  \n                </td>\n              </tr>\n              <tr *ngFor=\"let cartItem of cartLocalItemList let i = index;\">\n                  <td>\n                    <a [routerLink]=\"['/product', cartItem.product.product_id]\">\n                      <img src=\"../../assets/img/last-watched/{{cartItem.product.product_mark}}-{{cartItem.product.product_type}}-127-106.jpg\">\n                        {{cartItem.product.product_description}}\n                    </a>\n                  </td>\n                  <td>\n                    {{cartItem.product.product_price}} zł \n                    <span>{{cartItem.order_item_amount}}szt.</span>\n                    <ng-container *ngIf=\"!pathOrder\">\n                      <ng-container *ngIf=\"!auth.isAuthenticated\">\n                        <a class=\"delete-item\" (click)=\"deleteCartItemInLocalStorage(i)\"><span class=\"material-icons\">delete</span></a>\n                      </ng-container>\n              \n                      <ng-container *ngIf=\"auth.isAuthenticated\">\n                        <a class=\"delete-item\" (click)=\"deleteCartItemInDatabase(cartItem.cart_id, i)\"><span class=\"material-icons\">delete</span></a>\n                      </ng-container>\n                    </ng-container>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                    <div class=\"sum\">\n                      Łączna kwota <span>{{cartSum}} zł</span>\n                    </div>\n                    <div class=\"or-btn\">\n                      <ng-container *ngIf=\"!pathOrder\">\n                        <ng-container *ngIf=\"auth.isAuthenticated\">\n                          <button [routerLink]=\"['/zamowienie']\" class=\"btn btn-success\">\n                            Przejdź do dostawy\n                          </button>\n                        </ng-container>\n                    \n                        <ng-container *ngIf=\"!auth.isAuthenticated\">\n                          <button [routerLink]=\"['/logowanie', 1]\" class=\"btn btn-success\">\n                            Przejdź do dostawy\n                          </button>\n                        </ng-container>\n                      </ng-container>\n                    </div>\n                  </td>\n              </tr>\n          </tbody>\n        </table>\n      </div>\n  </div>\n  </ng-container>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartComponent } from './cart.component';\nimport { CartRoutingModule } from './cart.routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorModule } from '../error/error.module';\n\n@NgModule({\n  declarations: [CartComponent],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    ErrorModule,\n    CartRoutingModule,\n  ],\n  exports:[\n    CartComponent\n  ]\n})\nexport class CartModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CartComponent } from './cart.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'koszyk',\n    component: CartComponent\n  },\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\nexport class CartRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CartItemUser } from '../model/cartItemUser';\nimport { CartItemLocalStorage } from '../model/cartItemLocalStorage';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\nconstructor(private http: HttpClient, private appService:AppService) { }\n\ngetMyCartItems(id:number){\n  return this.http.get<CartItemLocalStorage[]>(this.appService.urlApi+\"/cart/\"+id)\n}\n\nsetMyCartItem(cartItem:Partial<CartItemUser>){\n  return this.http.post<CartItemUser>(this.appService.urlApi+\"/cart/create\", cartItem)\n}\n\ndeleteMyCartItem(id:number){\n  return this.http.delete(this.appService.urlApi+\"/cart/\"+id)\n}\n\ndeleteMyCart(id:number){\n  return this.http.delete(this.appService.urlApi+\"/cart/clear/\"+id)\n}\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'error-handler',\n  templateUrl: './error-handler.component.html',\n  styleUrls: ['./error-handler.component.css']\n})\n\nexport class ErrorHandlerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  @Input()\n  errorHandler\n\n\n}\n","<ng-container *ngIf=\"errorHandler === 0\">\n    <h4>Brak połączenia z serwerem</h4>\n    <p>Mamy chwilowy problem. Wróć za kilka minut</p>\n</ng-container>\n\n<ng-container *ngIf=\"errorHandler === 404\">\n    <h4>Not found 404</h4>\n    <p>Produkt jest niedostępny lub wycofany z naszej sprzedaży.</p>\n</ng-container>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorHandlerComponent } from './error-handler/error-handler.component';\n\n\n\n@NgModule({\n  declarations: [ErrorHandlerComponent,],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ErrorHandlerComponent\n  ],\n})\nexport class ErrorModule { }\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'drone-form',\n  templateUrl: './drone-form.component.html',\n  styleUrls: ['./drone-form.component.css']\n})\nexport class DroneFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  product\n  productType = \"drones\"\n  updateProduct:ProductTest\n  saved:boolean = false\n  valid:boolean = false\n\n  productForm = this.fb.group({    \n    \n    product_type: this.fb.control('drone'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_status: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_description: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(20)\n    ]), \n    product_processor: this.fb.control('brak'), \n    product_system: this.fb.control('brak'), \n    product_camera: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_disc_type: this.fb.control('brak'), \n    product_graphics_card: this.fb.control('brak'), \n    product_price: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_ram_size: this.fb.control('0'), \n    product_disc_size: this.fb.control('0'), \n    product_screen_diagonal: this.fb.control('0'), \n    product_amount_available: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_camera_resolution: this.fb.control('0'), \n    product_time_work: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_range: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]),\n  })\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n      this.valid = false\n      this.updateProduct = this.productForm.value\n      this.emiterSaveProduct.emit(this.updateProduct)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n\n  }\n  \n}\n","<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                Zapisano!!!\n              </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wszystkie pola\n              </div>\n        </ng-container>\n\n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\">Producent</label>\n                \n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_mark' formControlName=\"product_mark\">\n                        <option value=\"dji\">DJI</option>\n                        <option value=\"parrot\">Parrot</option>\n                        <option value=\"hubsan\">Hubsan</option>\n                        <option value=\"yuneec\">Yuneec</option>\n                        <option value=\"overmax\">Overmax</option>\n                        <option value=\"syma\">Syma</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"dji\">DJI</option>\n                        <option value=\"parrot\">Parrot</option>\n                        <option value=\"hubsan\">Hubsan</option>\n                        <option value=\"yuneec\">Yuneec</option>\n                        <option value=\"overmax\">Overmax</option>\n                        <option value=\"syma\">Syma</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_price' formControlName=\"product_price\">\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n          \n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_status' formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Time\">Czas pracy</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_time_work' formControlName=\"product_time_work\">\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_time_work\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_time_work')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Range\">Zasięg</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_range' formControlName=\"product_range\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_range\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_range')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Kamera\">Kamera</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_camera' formControlName=\"product_camera\" required>\n                        <option>tak</option>\n                        <option>nie</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_camera\">\n                        <option>tak</option>\n                        <option>nie</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_camera')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_amount_available' formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf='product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]='product.product_description' formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n\n            </div>\n            \n            <input *ngIf=\"!saved\" value=\"zapisz\" type=\"submit\" class=\"btn btn-success\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n    </div>\n</ng-container>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DroneFormComponent } from './drone-form/drone-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormRoutingModule } from './form.routing.module';\nimport { LaptopFormComponent } from './laptop-form/laptop-form.component';\nimport { SmartphoneFormComponent } from './smartphone-form/smartphone-form.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserRoleFormComponent } from './user-role-form/user-role-form.component';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { OrderDetailFormComponent } from './order-detail-form/order-detail-form.component';\nimport { OrderAddressFormComponent } from './order-address-form/order-address-form.component';\nimport { ValidationModule } from '../validation/validation.module';\n\n@NgModule({\n  declarations: [DroneFormComponent, LaptopFormComponent, SmartphoneFormComponent, UserFormComponent, UserRoleFormComponent, OrderFormComponent, OrderDetailFormComponent, OrderAddressFormComponent,],\n  imports: [\n    CommonModule,\n    ValidationModule,\n    ReactiveFormsModule,\n    FormRoutingModule,\n  ],\n  exports: [\n    DroneFormComponent, LaptopFormComponent, SmartphoneFormComponent, UserFormComponent, UserRoleFormComponent, OrderFormComponent\n  ]\n})\nexport class FormModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderDetailFormComponent } from './order-detail-form/order-detail-form.component';\nimport { OrderAddressFormComponent } from './order-address-form/order-address-form.component';\n\nconst routes: Routes = [\n  {\n    path: 'edit-order-detail/:order_id',\n    component: OrderDetailFormComponent\n  },\n  {\n    path: 'edit-order-address/:order_id',\n    component: OrderAddressFormComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class FormRoutingModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'laptop-form',\n  templateUrl: './laptop-form.component.html',\n  styleUrls: ['./laptop-form.component.css']\n})\nexport class LaptopFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  product\n  productType = \"laptops\"\n  saved:boolean = false\n  valid:boolean = false\n\n  updateProduct:ProductTest\n  productForm = this.fb.group({    \n    product_type: this.fb.control('laptop'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_status: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_description: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(20)\n      ]), \n    product_processor: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_system: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_camera: this.fb.control('brak'), \n    product_disc_type: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_graphics_card: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_price: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_ram_size: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_disc_size: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_screen_diagonal: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_amount_available: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_camera_resolution: this.fb.control('0'), \n    product_time_work: this.fb.control('0'), \n    product_range: this.fb.control('0'),\n  })\n\n\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n    this.changeProductMarkOnNumber()\n    this.changeProductStatusOnNumber()\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n        this.valid = false\n        this.updateProduct = this.productForm.value\n        this.changeProductMarkOnString()\n        this.changeProductStatusOnString()\n        this.emiterSaveProduct.emit(this.updateProduct)\n        this.saved = true;\n    }else{\n        this.valid = true\n    }\n\n  }\n\n  changeProductMarkOnNumber(){\n    this.product.product_mark\n\n    switch (this.product.product_mark) {\n      case \"lenovo\":\n          console.log(\"lenovo 1\");\n          this.product.product_mark = \"1\"\n          break;\n      case \"hp\":\n          console.log(\"hp 2\");\n          this.product.product_mark = \"2\"\n          break;\n      case \"dell\":\n          console.log(\"dell 3\");\n          this.product.product_mark = \"3\"\n          break;\n      case \"asus\":\n          console.log(\"asus 4\");\n          this.product.product_mark = \"4\"\n          break;\n      case \"acer\":\n          console.log(\"acer 5\");\n          this.product.product_mark = \"5\"\n          break;\n      case \"msi\":\n          console.log(\"msi 6\");\n          this.product.product_mark = \"6\"\n          break;\n      case \"apple\":\n          console.log(\"apple 7\");\n          this.product.product_mark = \"7\"\n          break;\n      case \"huawei\":\n          console.log(\"huawei 8\");\n          this.product.product_mark = \"8\"\n          break;\n      case \"microsoft\":\n          console.log(\"microsoft 9\");\n          this.product.product_mark = \"9\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductMarkOnString(){\n    this.updateProduct.product_mark\n\n    switch (this.updateProduct.product_mark) {\n      case \"1\":\n          console.log(\"lenovo\");\n          this.updateProduct.product_mark = \"lenovo\"\n          break;\n      case \"2\":\n          console.log(\"hp\");\n          this.updateProduct.product_mark = \"hp\"\n          break;\n      case \"3\":\n          console.log(\"dell\");\n          this.updateProduct.product_mark = \"dell\"\n          break;\n      case \"4\":\n          console.log(\"asus\");\n          this.updateProduct.product_mark = \"asus\"\n          break;\n      case \"5\":\n          console.log(\"acer\");\n          this.updateProduct.product_mark = \"acer\"\n          break;\n      case \"6\":\n          console.log(\"msi\");\n          this.updateProduct.product_mark = \"msi\"\n          break;\n      case \"7\":\n          console.log(\"apple\");\n          this.updateProduct.product_mark = \"apple\"\n          break;\n      case \"8\":\n          console.log(\"huawei\");\n          this.updateProduct.product_mark = \"huawei\"\n          break;\n      case \"9\":\n          console.log(\"microsoft\");\n          this.updateProduct.product_mark = \"microsoft\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductStatusOnNumber(){\n    this.product.product_status\n\n    switch (this.product.product_status) {\n      case \"promocja\":\n          console.log(\"promocja 1\");\n          this.product.product_status = \"1\"\n          break;\n      case \"wyprzedaż\":\n          console.log(\"wyprzedaż 2\");\n          this.product.product_status = \"2\"\n          break;\n      case \"nowość\":\n          console.log(\"nowość 3\");\n          this.product.product_status = \"3\"\n          break;\n      case \"polecamy\":\n          console.log(\"polecamy 4\");\n          this.product.product_status = \"4\"\n          break;\n      case \"przedłużona gwarancja\":\n          console.log(\"przedłużona gwarancja 5\");\n          this.product.product_status = \"5\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductStatusOnString(){\n    this.updateProduct.product_status\n\n    switch (this.updateProduct.product_status) {\n      case \"1\":\n          console.log(\"promocja\");\n          this.updateProduct.product_status = \"promocja\"\n          break;\n      case \"2\":\n          console.log(\"wyprzedaż\");\n          this.updateProduct.product_status = \"wyprzedaż\"\n          break;\n      case \"3\":\n          console.log(\"nowość\");\n          this.updateProduct.product_status = \"nowość\"\n          break;\n      case \"4\":\n          console.log(\"polecamy\");\n          this.updateProduct.product_status = \"polecamy\"\n          break;\n      case \"5\":\n          console.log(\"przedłużona gwarancja\");\n          this.updateProduct.product_status = \"przedłużona gwarancja\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_status = \"brak\"\n          break;\n  }\n  }\n\n\n}\n","<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saved\">\n            Zapisano!!!\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wszystkie pola\n              </div>\n        </ng-container>\n        \n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Name\">Producent</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_mark\" formControlName=\"product_mark\">\n                        <option value=\"1\">Lenovo</option>\n                        <option value=\"2\">HP</option>\n                        <option value=\"3\">Dell</option>\n                        <option value=\"4\">ASUS</option>\n                        <option value=\"5\">ACER</option>\n                        <option value=\"6\">MSI</option>\n                        <option value=\"7\">APPLE</option>\n                        <option value=\"8\">HUAWEI</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"1\">Lenovo</option>\n                        <option value=\"2\">HP</option>\n                        <option value=\"3\">Dell</option>\n                        <option value=\"4\">ASUS</option>\n                        <option value=\"5\">ACER</option>\n                        <option value=\"6\">MSI</option>\n                        <option value=\"7\">APPLE</option>\n                        <option value=\"8\">HUAWEI</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_price\" formControlName=\"product_price\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n\n            </div>\n    \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_status\" formControlName=\"product_status\">\n                        <option value=\"1\">Promocja</option>\n                        <option value=\"2\">Wyprzedaż</option>\n                        <option value=\"3\">Nowość</option>\n                        <option value=\"4\">Polecamy</option>\n                        <option value=\"5\">Przedłużona gwarancja</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_status\">\n                        <option value=\"1\">Promocja</option>\n                        <option value=\"2\">Wyprzedaż</option>\n                        <option value=\"3\">Nowość</option>\n                        <option value=\"4\">Polecamy</option>\n                        <option value=\"5\">Przedłużona gwarancja</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"System\">System operacyjny</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_system\" formControlName=\"product_system\">\n                        <option value=\"windows 10\">Windows 10</option>\n                        <option value=\"macOs\">MacOS</option>\n                        <option value=\"ubuntu\">Ubuntu</option>\n                        <option value=\"brak systemu\">Brak systemu</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_system\">\n                        <option value=\"windows 10\">Windows 10</option>\n                        <option value=\"macOs\">MacOS</option>\n                        <option value=\"ubuntu\">Ubuntu</option>\n                        <option value=\"brak systemu\">Brak systemu</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_system')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Processor\">Processor</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_processor\" formControlName=\"product_processor\">\n                        <option value=\"intel core i3\">Intel Core i3</option>\n                        <option value=\"intel core i5\">Intel Core i5</option>\n                        <option value=\"intel core i7\">Intel Core i7</option>\n                        <option value=\"intel core i9\">Intel Core i9</option>\n                        <option value=\"intel pentium\">Intel Pentium</option>\n                        <option value=\"amd ryzen 5\">AMD Ryzen 5</option>\n                        <option value=\"amd ryzen 7\">AMD Ryzen 7</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_processor\">\n                        <option value=\"intel core i3\">Intel Core i3</option>\n                        <option value=\"intel core i5\">Intel Core i5</option>\n                        <option value=\"intel core i7\">Intel Core i7</option>\n                        <option value=\"intel core i9\">Intel Core i9</option>\n                        <option value=\"intel pentium\">Intel Pentium</option>\n                        <option value=\"amd ryzen 5\">AMD Ryzen 5</option>\n                        <option value=\"amd ryzen 7\">AMD Ryzen 7</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_processor')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Ram\">Pamięć RAM</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_ram_size\" formControlName=\"product_ram_size\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_ram_size\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_ram_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskType\">Rodzaj dysku</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_disc_type\" formControlName=\"product_disc_type\">\n                        <option value=\"ssd\">SSD</option>\n                        <option value=\"hdd\">HDD</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_disc_type\">\n                        <option value=\"ssd\">SSD</option>\n                        <option value=\"hdd\">HDD</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_type')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskSize\">Rozmiar dysku</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_disc_size\" formControlName=\"product_disc_size\">\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_disc_size\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"GraphicsCard\">Karta graficzna</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_graphics_card\" formControlName=\"product_graphics_card\">\n                        <option value=\"zintegrowana intel\">Zintegrowana Intel</option>\n                        <option value=\"dedykowana nvidia geforce\">DEDYKOWANA NVIDIA Geforce</option>\n                        <option value=\"zintegrowana amd\">Zintegrowana AMD</option>\n                        <option value=\"dedykowana amd\">DEDYKOWANA AMD</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_graphics_card\">\n                        <option value=\"zintegrowana intel\">Zintegrowana Intel</option>\n                        <option value=\"dedykowana nvidia geforce\">DEDYKOWANA NVIDIA Geforce</option>\n                        <option value=\"zintegrowana amd\">Zintegrowana AMD</option>\n                        <option value=\"dedykowana amd\">DEDYKOWANA AMD</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_graphics_card')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ScreenDiagonal\">Przekątna ekranu</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_screen_diagonal\" formControlName=\"product_screen_diagonal\">\n                        <option>11.6</option>\n                        <option>12.5</option>\n                        <option>13.3</option>\n                        <option>13.9</option>\n                        <option>14.0</option>\n                        <option>14.1</option>\n                        <option>15.0</option>\n                        <option>15.4</option>\n                        <option>15.6</option>\n                        <option>16</option>\n                        <option>17</option>\n                        <option>17.3</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_screen_diagonal\">\n                        <option>11.6</option>\n                        <option>12.5</option>\n                        <option>13.3</option>\n                        <option>13.9</option>\n                        <option>14.0</option>\n                        <option>14.1</option>\n                        <option>15.0</option>\n                        <option>15.4</option>\n                        <option>15.6</option>\n                        <option>16</option>\n                        <option>17</option>\n                        <option>17.3</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_screen_diagonal')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_amount_available\" formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf=\"product\">\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]=\"product.product_description\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n\n            </div>\n    \n            <input *ngIf=\"!saved\" type=\"submit\" class=\"btn btn-success\" value=\"zapisz\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n        \n    </div>\n    \n    </ng-container>\n    \n    \n    \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from 'src/app/orders/orders.service';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'app-order-address-form',\n  templateUrl: './order-address-form.component.html',\n  styleUrls: ['./order-address-form.component.css']\n})\nexport class OrderAddressFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response;\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  error:boolean\n  saved:boolean = false\n  valid:boolean = false\n\n  orderAddressForm = this.fb.group({    \n    orders_firstName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(3)\n    ]), \n    orders_lastName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(2)\n    ]), \n    orders_email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]), \n    orders_phoneNumber: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n    orders_zipCode: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    orders_city: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    orders_street: this.fb.control('', [\n      Validators.required,\n    ]),\n  })\n\n  save(){\n\n    if(this.orderAddressForm.valid){\n      this.valid = false\n      this.ordersService.editAddress(this.orderId, this.orderAddressForm.value).subscribe( () =>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n        console.log(\"error: \"+this.error.valueOf)\n      }\n      )\n      this.saved = true\n    }else{\n      this.valid = true\n    }\n\n    \n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"order && auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form [formGroup]=\"orderAddressForm\" (submit)=\"save()\">\n                        <span class=\"contact100-form-title\">\n                            <h4>Edycja danych do wysyłki</h4>\n                        </span>\n                        <ng-container *ngIf=\"saved\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Zapisano!!!\n                              </div>\n                        </ng-container>\n                \n                        <ng-container *ngIf=\"valid\">\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                Wypełnij poprawnie wszystkie pola\n                              </div>\n                        </ng-container>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Imię</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_firstName\" formControlName=\"orders_firstName\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_firstName')\"></validation-order-address>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Lastname\">Nazwisko</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_lastName\" formControlName=\"orders_lastName\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_lastName')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_email\" formControlName=\"orders_email\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_email')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">telefon</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_phoneNumber\" formControlName=\"orders_phoneNumber\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_phoneNumber')\"></validation-order-address>\n                        </div>\n                \n                        <div class=\"form-group\">\n                            <label for=\"zipcode\">Kod pocztowy</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_zipCode\" formControlName=\"orders_zipCode\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_zipCode')\"></validation-order-address>\n                        </div>\n                \n                        <div class=\"form-group\">\n                            <label for=\"city\">Miejscowość</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_city\" formControlName=\"orders_city\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_city')\"></validation-order-address>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"street\">Ulica i numer</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_street\" formControlName=\"orders_street\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_street')\"></validation-order-address>\n                        </div>\n                \n                        <ng-container *ngIf=\"!saved\">\n                            <input type=\"submit\" value=\"Zapisz\" class=\"btn btn-success\">\n                        </ng-container>\n                        <ng-container *ngIf=\"saved\">\n                            <button class=\"btn btn-success\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: order.orders_id}\">Dalej</button>\n                        </ng-container>\n                    </form>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrdersService } from 'src/app/orders/orders.service';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'order-detail-form',\n  templateUrl: './order-detail-form.component.html',\n  styleUrls: ['./order-detail-form.component.css']\n})\nexport class OrderDetailFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response;\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  error:boolean\n  saved:boolean = false\n  valid:boolean = false\n\n  orderDetailForm = this.fb.group({    \n    orders_status: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_number_delivery_days: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_delivery_method: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_payments_method: this.fb.control('',[\n      Validators.required,\n    ]), \n  })\n\n  save(){\n\n    if(this.orderDetailForm.valid){\n      this.valid = false\n      this.ordersService.editDetail(this.orderId, this.orderDetailForm.value).subscribe( () =>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n        console.log(\"error: \"+this.error.valueOf)\n      }\n      )\n      this.saved = true\n    }else{\n      this.valid = true\n    }\n\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"order && auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form [formGroup]=\"orderDetailForm\" (submit)=\"save()\">\n                        <span class=\"contact100-form-title\">\n                            <h4>Edycja informacji o zamówieniu</h4>\n                        </span>\n                        <ng-container *ngIf=\"saved\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Zapisano!!!\n                              </div>\n                        </ng-container>\n                \n                        <ng-container *ngIf=\"valid\">\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                Wypełnij poprawnie wszystkie pola\n                              </div>\n                        </ng-container>\n                \n                        <div class=\"form-group\">\n                            <label for=\"City\">Status</label>\n                            <select class=\"form-control\" [(ngModel)]=\"order.orders_status\" formControlName=\"orders_status\">\n                                <option value=\"przyjęto do realizacji\">Przyjęto do realizacji</option>\n                                <option value=\"oczekuje na płatność\">Oczekuje na płatność</option>\n                                <option value=\"przygotowanie do wysłania\">Przygotowanie do wysłania</option>\n                                <option value=\"wysłano\">Wysłano</option>\n                                <option value=\"doręczone do klienta\">Doręczone do klienta</option>\n                                <option value=\"anulowane\">Anulowane</option>\n                            </select>\n                \n                            <validation-order-address [control]=\"orderDetailForm.get('orders_status')\"></validation-order-address>\n                \n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Przewidywany czas dostawy</label>\n                                <select class=\"form-control\" [(ngModel)]=\"order.orders_number_delivery_days\" formControlName=\"orders_number_delivery_days\">\n                                    <option value=\"1\">1 dzień</option>\n                                    <option value=\"2\">2 dni</option>\n                                    <option value=\"3\">3 dni</option>\n                                    <option value=\"4\">4 dni</option>\n                                    <option value=\"5\">5 dni</option>\n                                    <option value=\"6\">6 dni</option>\n                                    <option value=\"7\">7 dni</option>\n                                    <option value=\"8\">8 dni</option>\n                                    <option value=\"9\">9 dni</option>\n                                    <option value=\"10\">10 dni</option>\n                                    <option value=\"11\">11 dni</option>\n                                    <option value=\"12\">12 dni</option>\n                                    <option value=\"13\">13 dni</option>\n                                    <option value=\"14\">14 dni</option>\n                                </select>\n                \n                                <validation-order-address [control]=\"orderDetailForm.get('orders_number_delivery_days')\"></validation-order-address>\n                \n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">sposób dostawy</label>\n                                <select class=\"form-control\" [(ngModel)]=\"order.orders_delivery_method\" formControlName=\"orders_delivery_method\">\n                                    <option value=\"kurier\">Dostawa kurierem</option>\n                                    <option value=\"osobisty\">Odbiór osobisty</option>\n                                </select>\n                \n                                <validation-order-address [control]=\"orderDetailForm.get('orders_delivery_method')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">sposób płatności</label>\n                            <select class=\"form-control\" [(ngModel)]=\"order.orders_payments_method\" formControlName=\"orders_payments_method\">\n                                <option value=\"przy odbiorze\">Przy odbiorze</option>\n                                <option value=\"przelew gotówkowy\">Przelew gotówkowy</option>\n                            </select>\n                \n                            <validation-order-address [control]=\"orderDetailForm.get('orders_payments_method')\"></validation-order-address>\n                \n                        </div>\n                        <ng-container *ngIf=\"!saved\">\n                            <input type=\"submit\" value=\"Zapisz\" class=\"btn btn-success\">\n                        </ng-container>\n                        <ng-container *ngIf=\"saved\">\n                            <button class=\"btn btn-success\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: order.orders_id}\">Dalej</button>\n                        </ng-container>\n                    </form>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\nexport class OrderFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private router: Router) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    this.user = this.auth.getCurrentUser()\n  }\n\n  user:User\n  orderSummary:Order\n\n  addOrderForm = this.fb.group({    \n    orders_delivery_method: this.fb.control('', [\n      Validators.required,\n    ]), \n    orders_payments_method: this.fb.control('', [\n      Validators.required,\n    ]), \n    orders_firstName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(3)\n    ]), \n    orders_lastName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(2)\n    ]), \n    orders_street: this.fb.control('', [\n      Validators.required,\n    ]),\n    orders_zipCode: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    orders_city: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    orders_email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]),\n    orders_phoneNumber: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n\n  })\n\n  valid:boolean = false;\n\n  saveOrderSummary(){\n    if(this.addOrderForm.valid){\n      this.valid = false\n      this.orderSummary = this.addOrderForm.value\n      this.router.navigate(['/podsumowanie'], { queryParams: {order_data: JSON.stringify(this.orderSummary) } });\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n}\n","<div class=\"form-wraper\">\n    <ng-container *ngIf=\"valid\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n            Wypełnij poprawnie wszystkie pola\n          </div>\n    </ng-container>\n\n    <form [formGroup]=\"addOrderForm\" (submit)=\"saveOrderSummary()\">\n        <h4>Dostawa i płatność</h4>\n        <p>1.Sposób dostawy</p>\n        <div class=\"form-group \">\n            <select class=\"form-control\" formControlName=\"orders_delivery_method\">\n                <option value=\"kurier\">Dostawa kurierem</option>\n                <option value=\"osobisty\">Odbiór osobisty</option>\n            </select>\n            <validation-order-address [control]=\"addOrderForm.get('orders_delivery_method')\"></validation-order-address>\n        </div>\n\n    <p>2.Metoda płatności</p>\n        <div class=\"form-group \">\n            <select class=\"form-control\" formControlName=\"orders_payments_method\">\n                <option value=\"przy odbiorze\">Przy odbiorze</option>\n                <option value=\"przelew gotówkowy\">Przelew gotówkowy</option>\n            </select>\n            <validation-order-address [control]=\"addOrderForm.get('orders_payments_method')\"></validation-order-address>\n        </div>\n\n    <p>3.Dane odbiorcy</p>\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_firstName\" formControlName=\"orders_firstName\" placeholder=\"Imię\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_firstName\" placeholder=\"Imię\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_firstName')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_lastName\" formControlName=\"orders_lastName\" placeholder=\"Nazwisko\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_lastName\" placeholder=\"Nazwisko\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_lastName')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_street\" formControlName=\"orders_street\" placeholder=\"Ulica\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_street\" placeholder=\"Ulica\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_street')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_zipCode\" formControlName=\"orders_zipCode\" placeholder=\"Kod pocztowy [xx-xxx]\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_zipCode\" placeholder=\"Kod pocztowy [xx-xxx]\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_zipCode')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_city\" formControlName=\"orders_city\" placeholder=\"Miasto\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_city\" placeholder=\"Miasto\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_city')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_email\" formControlName=\"orders_email\" placeholder=\"E-mail\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_email\" placeholder=\"E-mail\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_email')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_phoneNumber\" formControlName=\"orders_phoneNumber\" placeholder=\"Numer telefonu\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_phoneNumber\" placeholder=\"Numer telefonu\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_phoneNumber')\"></validation-order-address>\n        </div>\n\n        <input value=\"zapisz\" type=\"submit\" value=\"kupuję i płacę\" class=\"btn btn-success\">\n    </form>\n</div>\n\n    \n\n  ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'smartphone-form',\n  templateUrl: './smartphone-form.component.html',\n  styleUrls: ['./smartphone-form.component.css']\n})\nexport class SmartphoneFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  product\n  productType = \"smartphones\"\n  updateProduct:ProductTest\n  saved:boolean = false\n  valid:boolean = false\n\n  productForm = this.fb.group({    \n    \n    product_type: this.fb.control('smartphone'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n      \n    ]), \n    product_status: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_description: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(20)\n    ]), \n    product_processor: this.fb.control('brak'), \n    product_system: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_camera: this.fb.control('brak'), \n    product_disc_type: this.fb.control('brak'), \n    product_graphics_card: this.fb.control('brak'), \n    product_price: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_ram_size: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_disc_size: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_screen_diagonal: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_amount_available: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_camera_resolution: this.fb.control('', [\n      Validators.required, \n    ]), \n    product_time_work: this.fb.control('0'), \n    product_range: this.fb.control('0'),\n  })\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n    this.changeProductMarkOnNumber()\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n      this.valid = false\n      this.updateProduct = this.productForm.value\n      this.changeProductMarkOnString()\n      this.emiterSaveProduct.emit(this.updateProduct)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n\n  changeProductMarkOnNumber(){\n    this.product.product_mark\n\n    switch (this.product.product_mark) {\n      case \"samsung\":\n          console.log(\"samsung 1\");\n          this.product.product_mark = \"1\"\n          break;\n      case \"apple\":\n          console.log(\"Apple 2\");\n          this.product.product_mark = \"2\"\n          break;\n      case \"huawei\":\n          console.log(\"Huawei 3\");\n          this.product.product_mark = \"3\"\n          break;\n      case \"sony\":\n          console.log(\"sony 4\");\n          this.product.product_mark = \"4\"\n          break;\n      case \"nokia\":\n          console.log(\"nokia 5\");\n          this.product.product_mark = \"5\"\n          break;\n      case \"xiaomi\":\n          console.log(\"xiaomi 6\");\n          this.product.product_mark = \"6\"\n          break;\n      case \"lg\":\n          console.log(\"lg 7\");\n          this.product.product_mark = \"7\"\n          break;\n      case \"htc\":\n          console.log(\"htc 8\");\n          this.product.product_mark = \"8\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductMarkOnString(){\n    this.updateProduct.product_mark\n\n    switch (this.updateProduct.product_mark) {\n      case \"1\":\n          console.log(\"samsung\");\n          this.updateProduct.product_mark = \"samsung\"\n          break;\n      case \"2\":\n          console.log(\"apple\");\n          this.updateProduct.product_mark = \"apple\"\n          break;\n      case \"3\":\n          console.log(\"huawei\");\n          this.updateProduct.product_mark = \"huawei\"\n          break;\n      case \"4\":\n          console.log(\"sony\");\n          this.updateProduct.product_mark = \"sony\"\n          break;\n      case \"5\":\n          console.log(\"nokia\");\n          this.updateProduct.product_mark = \"nokia\"\n          break;\n      case \"6\":\n          console.log(\"xiaomi\");\n          this.updateProduct.product_mark = \"xiaomi\"\n          break;\n      case \"7\":\n          console.log(\"lg\");\n          this.updateProduct.product_mark = \"lg\"\n          break;\n      case \"8\":\n          console.log(\"htc\");\n          this.updateProduct.product_mark = \"htc\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_mark = \"brak\"\n          break;\n  }\n  }\n\n}\n","\n<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n    <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saved\">\n        Zapisano!!!\n      </div>\n\n      <ng-container *ngIf=\"valid\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n            Wypełnij poprawnie wszystkie pola\n          </div>\n    </ng-container>\n\n    <div class=\"form\">\n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Name\">Producent</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_mark\" formControlName=\"product_mark\">\n                        <option value=\"1\">Samsung</option>\n                        <option value=\"2\">Apple</option>\n                        <option value=\"3\">Huawei</option>\n                        <option value=\"4\">Sony</option>\n                        <option value=\"5\">Nokia</option>\n                        <option value=\"6\">Xiaomi</option>\n                        <option value=\"7\">LG</option>\n                        <option value=\"8\">HTC</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"1\">Samsung</option>\n                        <option value=\"2\">Apple</option>\n                        <option value=\"3\">Huawei</option>\n                        <option value=\"4\">Sony</option>\n                        <option value=\"5\">Nokia</option>\n                        <option value=\"6\">Xiaomi</option>\n                        <option value=\"7\">LG</option>\n                        <option value=\"8\">HTC</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_price\" formControlName=\"product_price\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_status\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"System\">System operacyjny</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_system\" formControlName=\"product_system\">\n                        <option>Android</option>\n                        <option>iOs</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_system\">\n                        <option>Android</option>\n                        <option>iOs</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_system')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ScreenDiagonal\">Przekątna ekranu</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_screen_diagonal\" formControlName=\"product_screen_diagonal\">\n                        <option>4</option>\n                        <option>4.7</option>\n                        <option>5.7</option>\n                        <option>6</option>\n                        <option>6.7</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_screen_diagonal\">\n                        <option>4</option>\n                        <option>4.7</option>\n                        <option>5.7</option>\n                        <option>6</option>\n                        <option>6.7</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_screen_diagonal')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskSize\">Rozmiar dysku</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_disc_size\" formControlName=\"product_disc_size\">\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                        <option>64</option>\n                        <option>128</option>\n                        <option>256</option>\n                        <option>512</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_disc_size\">\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                        <option>64</option>\n                        <option>128</option>\n                        <option>256</option>\n                        <option>512</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Ram\">Pamięć RAM</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_ram_size\" formControlName=\"product_ram_size\">\n                        <option>2</option>\n                        <option>4</option>\n                        <option>6</option>\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_ram_size\">\n                        <option>2</option>\n                        <option>4</option>\n                        <option>6</option>\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_ram_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"CameraResolution\">Roździelczość kamery</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_camera_resolution\" formControlName=\"product_camera_resolution\">\n                        <option>7</option>\n                        <option>8</option>\n                        <option>13</option>\n                        <option>16</option>\n                        <option>19</option>\n                        <option>20</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_camera_resolution\">\n                        <option>7</option>\n                        <option>8</option>\n                        <option>13</option>\n                        <option>16</option>\n                        <option>19</option>\n                        <option>20</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_camera_resolution')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_amount_available\" formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf='product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]=\"product.product_description\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n            </div>\n\n            <input *ngIf=\"!saved\" type=\"submit\" class=\"btn btn-success\" value=\"zapisz\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n        \n    </div>\n\n</ng-container>\n\n\n\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  userForm = this.fb.group({\n    user_firstName: this.fb.control('', [\n      Validators.minLength(3)\n    ]),\n    user_lastName: this.fb.control('', [\n      Validators.minLength(2)\n    ]),\n    user_phoneNumber: this.fb.control('', [\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n    user_zipCode: this.fb.control('', [\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    user_city: this.fb.control('', [\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    user_street: this.fb.control(''),\n    \n  })\n  \n  user\n  updateUser:User\n  returnPath:string\n  saved:boolean = false\n  valid:boolean = false\n  \n  @Input(\"getUser\")\n  set getId(product){\n    this.user = product\n\n  }\n\n  @Input(\"getPath\")\n  set getPath(path){\n    this.returnPath = path\n\n  }\n\n  @Output('saveUser')\n  emiterSaveProduct = new EventEmitter()\n\n  saveUser(){\n\n    if(this.userForm.valid){\n      this.valid = false\n      this.updateUser = this.userForm.value\n      this.emiterSaveProduct.emit(this.updateUser)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n\n    \n  }\n\n}\n","    <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                Zapisano!!!\n              </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wymagane pola\n              </div>\n        </ng-container>\n\n        <form class=\"contact100-form\" [formGroup]=\"userForm\" (submit)=\"saveUser()\">\n            <span class=\"contact100-form-title\">\n                Edycja użytkownika\n            </span>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"FirstName\">Imię</label>\n                \n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_firstName\" formControlName=\"user_firstName\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_firstName\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_firstName').getError('minlength') as error\">\n                    Musisz podać min {{error.requiredLength}} znaki\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"LastName\">Nazwisko</label>\n                \n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_lastName\" formControlName=\"user_lastName\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_lastName\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_lastName').getError('minlength') as error\">\n                    Musisz podać min {{error.requiredLength}} znaki\n                </div>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"PhoneNumber\">Numer telefonu</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_phoneNumber\" formControlName=\"user_phoneNumber\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_phoneNumber\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_phoneNumber').hasError('pattern')\">\n                    Musisz podać liczby\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ZipCode\">Kod pocztowy</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_zipCode\" formControlName=\"user_zipCode\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_zipCode\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_zipCode').hasError('pattern')\">\n                   Kod pocztowy w formacie [nn-nnn]\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"City\">Miasto</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_city\" formControlName=\"user_city\">\n                </ng-container>\n\n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_city\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_city').hasError('pattern')\">\n                    Niepoprawny format\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Street\">Ulica i numer</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_street\" formControlName=\"user_street\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_street\">\n                </ng-container>\n\n            </div>\n            \n            <input *ngIf=\"!saved\" value=\"Zapisz\" type=\"submit\"  class=\"btn btn-success\">\n            <a *ngIf=\"saved && returnPath == 'user'\"  class=\"btn btn-secondary\" [routerLink]=\"['/user', user.user_id]\">powrót</a>\n            <a *ngIf=\"saved && returnPath == 'profile'\"  class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">powrót</a>\n        </form>\n    </div>\n\n\n\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'user-role-form',\n  templateUrl: './user-role-form.component.html',\n  styleUrls: ['./user-role-form.component.css']\n})\nexport class UserRoleFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder) { }\n\n  roleForm = this.fb.group({\n  user_role: this.fb.control(''),\n})\n\nuser\nupdateUser:User\nsaved:boolean = false\n\n\n@Input(\"getUser\")\nset getId(user){\n  this.user = user\n\n}\n\n@Output('saveUser')\nemiterSaveProduct = new EventEmitter()\n\nsaveUser(){\n  this.updateUser = this.roleForm.value\n  this.emiterSaveProduct.emit(this.updateUser)\n  this.saved = true;\n}\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"form\" *ngIf=\"user\">\n    <ng-container *ngIf=\"saved\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Zaoisano!!!\n          </div>\n    </ng-container>\n    <form [formGroup]=\"roleForm\" (submit)=\"saveUser()\">\n        <span class=\"contact100-form-title\">\n            Edycja użytkownika\n        </span>\n        <div class=\"form-group\">\n            <label class=\"label-input100\" for=\"role\">Uprawnienia</label>\n            <select class=\"form-control\" [(ngModel)]='user.user_role' formControlName=\"user_role\" required>\n                <option>ADMIN</option>\n                <option>USER</option>\n            </select>\n        </div>\n        <input *ngIf=\"!saved\" value=\"Zapisz\" type=\"submit\"  class=\"btn btn-success\">\n        <a *ngIf=\"saved\"  class=\"btn btn-success\" [routerLink]=\"['/user', user.user_id]\">Powrót</a>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from '../model/productTest';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private productsService:ProductsService) { }\n\n  productsRecomendList1:ProductTest[] = []\n  productsRecomendList2:ProductTest[] = []\n  productsRecomendList3:ProductTest[] = []\n\n  productsPromotion:ProductTest[] = []\n\n  statusError:number\n  imagesUrl\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.productsService.getByStatus(\"polecamy\").subscribe(response =>{\n      for(var i = 0; i <= response.length -1; i++){\n\n        if(i <=2){\n          this.productsRecomendList1.push(response[i])\n        }\n\n        if(i >= 3 && i <=5){\n          this.productsRecomendList2.push(response[i]) \n        } \n        \n        if(i >= 6 && i <=8){\n          this.productsRecomendList3.push(response[i])\n        }\n\n      }\n\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n    \n\n    this.productsService.getByStatus(\"promocja\").subscribe(response =>{\n      \n      for(var i = 0; i <= response.length -1; i++){\n        if(i <=1){\n          this.productsPromotion.push(response[i])\n        }  \n      }\n      \n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n  }\n\n}\n","\n  \n<error-handler [errorHandler]=\"statusError\"></error-handler>\n<div class=\"container-fluid slider\">\n        <slider></slider>  \n</div>\n    \n<div class=\"container-fluid\">\n    <div class=\"row cont-r\">\n        <div class=\"col-lg-4 promotion\">\n            <div class=\"promo-wrap\">\n                <div class=\"row promotion-header\" style=\"height: 50px;\">\n                    <h4>Promocja</h4>\n                </div>\n                <div class=\"promo-item\" *ngFor=\"let p of productsPromotion\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"row\">\n                            <img class=\"promotion-img\"  src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"promotion-desc\">\n                                {{p.product_description}}\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"promotion-price\">\n                                <span class=\"before\">{{p.product_price + 1000}} zł</span><span class=\"after\"> {{p.product_price}} zł</span>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-8 recomend\">\n            <div class=\"row recomend-header\" style=\"height: 50px;\">\n                <h4>Polecamy</h4>\n            </div>\n            <div class=\"row recomend-list1\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList1\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>\n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div class=\"row recomend-list2\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList2\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>\n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div class=\"row recomend-list3\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList3\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>        \n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    \n<box-drone></box-drone>\n<box-special></box-special>\n<box-last-product></box-last-product>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n\n  constructor(public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    \n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">x-tom</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'drones']\">Drony</a>\n          </li>\n  \n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'laptops']\">Laptopy</a>\n          </li>\n           \n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'smartphones']\">Smartfony</a>\n          </li>\n          \n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/koszyk']\">Koszyk</a>\n            </li>\n          \n          <ng-container *ngIf=\"auth.isAuthenticated\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/moje-zamowienia']\">Moje Zamówienia</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/profile']\">Twoje konto</a>\n            </li>\n          </ng-container>\n\n          <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            \n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/panel-administracyjny']\">Zarządzaj sklepem</a>\n            </li>\n            \n          </ng-container>\n\n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/logowanie']\">Zaloguj</a>\n            </li>\n\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/rejestracja']\">Załóż konto</a>\n            </li>\n          </ng-container>\n          \n        </ul>\n      </div>\n        <div class=\"navbar-text\" *ngIf=\"auth.isAuthenticated\">\n            <profile-bar></profile-bar>\n        </div>\n  </nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProfileModule } from '../profile/profile.module';\nimport { NaviRoutingModule } from './navi.routing.module';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    MenuComponent,\n  ],\n  imports: [\n    CommonModule,\n    AuthModule,\n    ProfileModule,\n    ErrorModule,\n    NaviRoutingModule,\n  ],\n  exports: [\n     PageNotFoundComponent, MenuComponent\n  ],\n})\nexport class NaviModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  \n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class NaviRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"navigation-bar-wraper\">\n    <ul class=\"nav\">\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" [routerLink]=\"['/home']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">home</mat-icon></div>\n                            <div class=\"col-6\"><span>Home</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" [routerLink]=\"['/products', 'drones']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">sports_esports</mat-icon></div>\n                            <div class=\"col-6\"><span>Drony</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">  \n                <a class=\"nav-link\" [routerLink]=\"['/products', 'laptops']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">laptop_mac</mat-icon></div>\n                            <div class=\"col-6\"><span>Laptopy</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\"[routerLink]=\"['/products', 'smartphones']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">phone_iphone</mat-icon></div>\n                            <div class=\"col-6\"><span>Smartfony</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n      </ul>\n</div>\n\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public auth:AuthService) {\n    this.auth.state.subscribe()\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav \n      #drawer\n      class=\"sidenav\" \n      \n      fixedInViewport=\"false\"\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/products', 'drones']\" (click)=\"drawer.toggle()\">Drony</a>\n      <a mat-list-item [routerLink]=\"['/products', 'laptops']\" (click)=\"drawer.toggle()\">Laptopy</a>\n      <a mat-list-item [routerLink]=\"['/products', 'smartphones']\" (click)=\"drawer.toggle()\">Smartphony</a>\n      <div class=\"log-menu\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n          <a mat-list-item [routerLink]=\"['/panel-administracyjny']\" (click)=\"drawer.toggle()\">Menedżer</a>\n        </ng-container>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/moje-zamowienia']\" (click)=\"drawer.toggle()\">Kupione</a>\n        </ng-container>\n        <a mat-list-item [routerLink]=\"['/koszyk']\" (click)=\"drawer.toggle()\">Koszyk</a>\n      </div>\n\n      <div>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/profile']\" (click)=\"drawer.toggle()\">Moje konto</a>\n        </ng-container>\n        <ng-container *ngIf=\"!auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/logowanie']\" (click)=\"drawer.toggle()\">Moje konto</a>\n        </ng-container>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item (click)=\"auth.logout()\" (click)=\"drawer.toggle()\">Wyloguj</a>\n        </ng-container>\n      </div>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        <div class=\"toogle-menu-text\">Menu</div>\n      </button>\n      <div class=\"logo\">\n        <a [routerLink]=\"['/']\">\n          <img src=\"../../assets/img/logo/logo-nav.jpg\" alt=\"logo\">\n        </a>\n      </div>\n      <span class=\"spacer\"></span>\n      <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"menu-icon-wraper hidden-menu\">\n          <a [routerLink]=\"['/panel-administracyjny']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">settings</mat-icon></div>\n            <div class=\"menu-text\"><span>Menedżer</span></div>\n            </a>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"auth.isAuthenticated\">\n        <div class=\"menu-icon-wraper hidden-menu\">\n          <a [routerLink]=\"['/moje-zamowienia']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">assignment</mat-icon></div>\n            <div class=\"menu-text\"><span>Kupione</span></div>\n            </a>\n        </div>\n      </ng-container>\n        <div class=\"menu-icon-wraper\">\n          <ng-container *ngIf=\"auth.isAuthenticated\">\n            <a [routerLink]=\"['/profile']\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">perm_identity</mat-icon></div>\n              <div class=\"menu-text\"><span>Moje konto</span></div>\n              </a>\n          </ng-container>\n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <a [routerLink]=\"['/logowanie']\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">perm_identity</mat-icon></div>\n              <div class=\"menu-text\"><span>Moje konto</span></div>\n              </a>\n          </ng-container>\n        </div>\n        <div class=\"menu-icon-wraper\">\n          <a [routerLink]=\"['/koszyk']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">shopping_cart</mat-icon></div>\n            <div class=\"menu-text\"><span>Koszyk</span></div>\n            </a>\n        </div>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <div class=\"menu-icon-wraper hidden-min\">\n            <a (click)=\"auth.logout()\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">input</mat-icon></div>\n              <div class=\"menu-text\"><span>Wyloguj</span></div>\n              </a>\n          </div>\n          \n        </ng-container>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  pathOrder:boolean = true\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <order-form></order-form>\n        </div>\n        <div class=\"col-lg-6\">\n            <cart [setPathOrder]=\"pathOrder\"></cart>\n        </div>\n    </div>\n</div>\n      \n      \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/model/order';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { OrderItem } from 'src/app/model/orderItem';\nimport { OrdersService } from '../orders.service';\nimport { CartService } from 'src/app/cart/cart.service';\n\n\n@Component({\n  selector: 'order-sumary',\n  templateUrl: './order-sumary.component.html',\n  styleUrls: ['./order-sumary.component.css']\n})\nexport class OrderSumaryComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute, public auth:AuthService, private ordersService:OrdersService, private cartService:CartService) { \n    this.auth.state.subscribe()\n\n    this.route.queryParams.subscribe(param =>{\n      this.orderData = JSON.parse(param['order_data']) \n    })\n\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  pathOrder:boolean = true\n  saved:boolean = false\n  orderItemList:OrderItem[]\n  orderData:Order\n  sumOrder:number = 0\n  \n  getOrderItemCart(item:OrderItem[]){\n    this.orderItemList = item\n  }\n\n  save(){\n   this.saveOrderItem().subscribe( (response:number)=>{\n    this.saveOrder(response)\n   })\n\n    this.saved = true\n  }\n\n  saveOrderItem(){\n    this.orderItemList.forEach(item =>{\n    this.sumOrder += (item.product.product_price * item.order_item_amount)\n\n    })\n    return this.ordersService.createOrderItem(this.orderItemList)\n\n  }\n\n  saveOrder(number:number){\n    this.orderData.orders_number = number\n    this.orderData.orders_payments_sum = this.sumOrder\n    if(this.auth.isAuthenticated){\n      this.orderData.user = this.auth.getCurrentUser()\n    }\n    this.ordersService.createOrder(this.orderData).subscribe()\n\n    if(this.auth.isAuthenticated){\n        this.cartService.deleteMyCart(this.auth.getCurrentUser().user_id).subscribe(response =>{\n        })\n    }else{\n      localStorage.removeItem('products')\n    }\n\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"sumary-wraper\">\n                <ng-container *ngIf=\"!saved\">\n                    <h4>Podsumowanie</h4>\n                    <p>Dostawa</p>\n                    <div class=\"order-method\">\n                        <p>{{orderData.orders_delivery_method}}</p>\n                    </div>\n                    <div class=\"address\">\n                        <p>Dane odbiorcy:</p>\n                        <p>{{orderData.orders_firstName}} {{ orderData.orders_lastName}}</p>\n                        <p>{{orderData.orders_street}}</p>\n                        <p>{{orderData.orders_zipCode}} {{orderData.orders_city}}</p>\n                        <p>e-mail: {{orderData.orders_email}}</p>\n                        <p>tel. {{orderData.orders_phoneNumber}}</p>\n                    </div>\n                    <p>Płatność</p>\n                    <div class=\"payment\">\n                        <p>{{orderData.orders_payments_method}}</p>\n                    </div>\n                    <div class=\"cart\">\n                        <cart [setPathOrder]=\"pathOrder\" (setOrderItem)=\"getOrderItemCart($event)\"></cart>\n                        <a class=\"btn btn-success\" (click)=\"save()\">Kupuję i płacę</a>\n                    </div>\n                </ng-container>\n                \n                <ng-container *ngIf=\"saved\">\n                    <div class=\"greetings\">\n                        <h4>Dziękuje za zakupy !!! 🥳😉</h4>\n                        <p>Jeżeli naprawdę chciałeś kupić wybrany produkt...</p>\n                        <p><span>Skontaktuj się z producentem 😁</span></p>\n                        <p>Do zobaczenia na rozmowie.</p>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/model/order';\nimport { OrdersService } from '../orders.service';\nimport { OrderItem } from 'src/app/model/orderItem';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute, private ordersService:OrdersService, public auth:AuthService) {\n    this.auth.state.subscribe()\n\n    this.route.queryParams.subscribe(param =>{\n      this.orderId = param['order_id']\n    })\n    \n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response\n\n      this.ordersService.getOrderItemByOrderNumber(response.orders_number).subscribe(items =>{\n        this.orderItem = items\n      })\n    })\n    \n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  orderItem:OrderItem[]\n}\n","<div class=\"container-fluid\">\n    <div class=\"wraper\">\n        <ng-container *ngIf=\"auth.isAuthenticated && order\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                        <h4>Zamówienie numer {{order.orders_number}}</h4>\n                        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                            <a [routerLink]=\"['/zamowienie-usuwanie', order.orders_id]\">\n                                <span _ngcontent-kjs-c190=\"\" class=\"material-icons\">delete</span>\n                                Usuń zamówienie\n                            </a>\n                        </ng-container>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <h6>Dane do wysyłki</h6>\n                    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                        <a [routerLink]=\"['/edit-order-address', order.orders_id]\">\n                            <span _ngcontent-fwr-c191=\"\" class=\"material-icons\">edit</span>\n                            Edytuj\n                        </a>\n                    </ng-container>\n                    <table class=\"table table-striped\">\n                        <tbody>\n                            <tr>\n                                <td>imię i nazwisko</td>\n                                <td><strong>{{order.orders_firstName}} {{order.orders_lastName}}</strong></td>\n                          </tr>\n                          <tr>\n                            <td>email</td>\n                            <td><strong>{{order.orders_email}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>telefon</td>\n                            <td><strong>{{order.orders_phoneNumber}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>miejscowość</td>\n                            <td><strong>{{order.orders_zipCode}} {{order.orders_city}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>ulica</td>\n                            <td><strong>{{order.orders_street}}</strong></td>\n                        </tr>\n                        </tbody>\n                      </table>\n                </div>\n                <div class=\"col-lg-6\">\n                    <h6>Informacje o zamówieniu</h6>\n                    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                        <a [routerLink]=\"['/edit-order-detail', order.orders_id]\">\n                            <span _ngcontent-fwr-c191=\"\" class=\"material-icons\">edit</span>\n                            Edytuj\n                        </a>\n                    </ng-container>\n                      <table class=\"table table-striped\">\n                        <tbody>\n                            <tr>\n                                <td>status</td>\n                                <td><strong>{{order.orders_status}}</strong></td>\n                          </tr>\n                          <tr>\n                            <td>data zamówienia</td>\n                            <td><strong>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>przewidywany czas dostawy</td>\n                            <td><strong>{{order.orders_date_time_delivery | date: 'yyyy-MM-dd HH:mm'}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>sposób dostawy</td>\n                            <td><strong>{{order.orders_delivery_method}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>sposób płatności</td>\n                            <td><strong>{{order.orders_payments_method}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>wartość zamówienia</td>\n                            <td style=\"border: 1px solid red;\"><strong>{{order.orders_payments_sum}} zł</strong></td>\n                        </tr>\n                        </tbody>\n                      </table>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <h6>Zamówione produkty</h6>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <table class=\"table table-striped\">\n                        <tbody>\n                            <tr *ngFor=\"let item of orderItem let i = index;\">\n                                <th scope=\"row\">{{i+1}}</th>\n                                <td><a [routerLink]=\"['/product',item.product.product_id]\">{{item.product.product_description}}</a></td>\n                                <td>{{item.order_item_price}} zł</td>\n                                <td>{{item.order_item_amount}} szt.</td>\n                                <td>{{item.order_item_amount * item.order_item_price}} zł</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                </div>\n            </div>    \n        </ng-container>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-orders-delete',\n  templateUrl: './orders-delete.component.html',\n  styleUrls: ['./orders-delete.component.css']\n})\nexport class OrdersDeleteComponent implements OnInit {\n\n  constructor(public auth:AuthService, private route:ActivatedRoute, private router: Router, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  remove:boolean = false\n  delete(){\n\n    this.ordersService.deleteOrder(this.orderId).subscribe(()=>{\n      console.log(\"usunięto zamówienie\")\n    })\n\n    this.remove = true\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć zamówienie?\n                        </p>\n                        \n                        <a class=\"btn btn-secondary\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: orderId}\">Nie</a>\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/zamowienia-admin']\">Dalej</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { OrdersService } from '../orders.service';\nimport { Order } from 'src/app/model/order';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders-manager',\n  templateUrl: './orders-manager.component.html',\n  styleUrls: ['./orders-manager.component.css']\n})\nexport class OrdersManagerComponent implements OnInit {\n\n  constructor(public auth:AuthService, private ordersService:OrdersService, private router: Router) {\n    this.auth.state.subscribe()\n    \n    this.ordersService.getAllOrders().subscribe(response =>{\n        this.orders = response\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orders:Order[]\n\n  goOrder(order:Order){\n    this.router.navigate(['/zamowienie-szczegoly'], { queryParams: {order_id: order.orders_id } });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"wraper\">\n              <h4>Zamówienia</h4>\n              <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                <table class=\"table table-striped\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Lp</th>\n                        <th scope=\"col\">Numer</th>\n                        <th scope=\"col\">Data</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Wartość</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let order of orders let i = index;\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>\n                          <a (click)=\"goOrder(order)\">\n                            {{order.orders_number}}\n                          </a>\n                        </td>\n                        <td>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</td>\n                        <td>{{order.orders_status}}</td>\n                        <td>{{order.orders_payments_sum}} zł</td>\n                        <td class=\"btn-hover\">\n                          <a (click)=\"goOrder(order)\">\n                            <span _ngcontent-hnf-c197=\"\" class=\"material-icons\">assignment</span>\n                            szczegóły\n                          </a>\n                        </td>        \n                      </tr>\n                    </tbody>\n                  </table>\n            </ng-container>\n          </div>\n      </div>\n    </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersRoutingModule } from './orders.routing.module';\nimport { OrdersComponent } from './orders/orders.component';\nimport { AuthModule } from '../auth/auth.module';\nimport { OrderComponent } from './order/order.component';\nimport { FormModule } from '../form/form.module';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { CartModule } from '../cart/cart.module';\nimport { OrderSumaryComponent } from './order-sumary/order-sumary.component';\nimport { OrdersManagerComponent } from './orders-manager/orders-manager.component';\nimport { OrdersDeleteComponent } from './orders-delete/orders-delete.component';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [OrdersComponent, OrderComponent, AddOrderComponent, OrderSumaryComponent, OrdersManagerComponent, OrdersDeleteComponent,],\n  imports: [\n    CommonModule,\n    AuthModule,\n    FormModule,\n    ErrorModule,\n    CartModule,\n    OrdersRoutingModule\n  ]\n})\nexport class OrdersModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersComponent } from './orders/orders.component';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { OrderSumaryComponent } from './order-sumary/order-sumary.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrdersManagerComponent } from './orders-manager/orders-manager.component';\nimport { OrdersDeleteComponent } from './orders-delete/orders-delete.component';\n\nconst routes: Routes = [\n  {\n    path:'moje-zamowienia',\n    component:  OrdersComponent\n  },\n  {\n    path:'zamowienie',\n    component:  AddOrderComponent\n  },\n  {\n    path:'podsumowanie',\n    component:  OrderSumaryComponent\n  },\n  {\n    path:'zamowienie-szczegoly',\n    component:  OrderComponent\n  },\n  {\n    path:'zamowienia-admin',\n    component:  OrdersManagerComponent\n  },\n  {\n    path: 'zamowienie-usuwanie/:order_id',\n    component: OrdersDeleteComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class OrdersRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OrderItem } from '../model/orderItem';\nimport { Order } from '../model/order';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(private http: HttpClient, private appService:AppService) { }\n\ngetAllOrders(){\n  return this.http.get<Order[]>(this.appService.urlApi+\"/orders/all\")\n}\n\ngetOrdersById(id:number){\n  return this.http.get<Order>(this.appService.urlApi+\"/orders/\"+id)\n}\n\ngetOrdersByUserId(id:number){\n  return this.http.get<Order[]>(this.appService.urlApi+\"/orders/user/\"+id)\n}\n\ngetOrderItemByOrderNumber(number:number){\n  return this.http.get<OrderItem[]>(this.appService.urlApi+\"/order/number/\"+number)\n}\n\ncreateOrderItem(item:Partial<OrderItem>[]){\n  return this.http.post<Number>(this.appService.urlAuth+\"/order/create\", item)\n}\n\ncreateOrder(order:Partial<Order>){\n  return this.http.post(this.appService.urlAuth+\"/orders/create\", order)\n}\n\neditDetail(id:number, order:Partial<Order>){\n  return this.http.put<Order>(this.appService.urlApi+\"/orders/detail/\"+id, order)// ----> remote\n}\n\neditAddress(id:number, order:Partial<Order>){\n  return this.http.put<Order>(this.appService.urlApi+\"/orders/address/\"+id, order)\n}\n\ndeleteOrder(id:number){\n  return this.http.delete(this.appService.urlApi+\"/orders/\"+id)\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { OrdersService } from '../orders.service';\nimport { Order } from 'src/app/model/order';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor(public auth:AuthService, private ordersService:OrdersService, private router: Router) { \n    this.auth.state.subscribe()\n\n    if(this.auth.isAuthenticated){\n      this.ordersService.getOrdersByUserId(this.auth.getCurrentUser().user_id).subscribe( response =>{\n        this.userOrders = response\n      }, error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      } )\n    }\n\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  statusError:number\n  userOrders:Order[]\n\n  goOrder(order:Order){\n    this.router.navigate(['/zamowienie-szczegoly'], { queryParams: {order_id: order.orders_id } });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n              <h4>Twoje zamówienia</h4>\n              <ng-container *ngIf=\"auth.isAuthenticated\">\n                  <table class=\"table table-striped\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">Lp</th>\n                          <th scope=\"col\">Numer</th>\n                          <th scope=\"col\">Data</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\">Wartość</th>\n                          <th scope=\"col\"></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr *ngFor=\"let order of userOrders let i = index;\">\n                          <th scope=\"row\">{{i+1}}</th>\n                          <td>\n                            <a (click)=\"goOrder(order)\">\n                              {{order.orders_number}}\n                            </a>\n                          </td>\n                          <td>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</td>\n                          <td>{{order.orders_status}}</td>\n                          <td>{{order.orders_payments_sum}} zł</td>\n                          <td class=\"btn-hover\"><a (click)=\"goOrder(order)\">\n                                <span class=\"material-icons\">assignment</span>\n                                szczegóły\n                              </a>\n                          </td>        \n                        </tr>\n                      </tbody>\n                    </table>\n              </ng-container>\n              \n              <error-handler [errorHandler]=\"statusError\"></error-handler>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private http:ProductsService,) {\n    this.auth.state.subscribe()\n   }\n   editedProduct:ProductTest\n   error\n\n   selectProductForm = this.fb.group({    \n    product_type: this.fb.control(''), \n  })\n\n  addProduct(product){\n    this.http.create(product)\n    .subscribe(()=>{\n      console.log(\"Success\")   \n    },err=>{\n      this.error = err.message\n    })\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form class=\"contact100-form\" [formGroup]=\"selectProductForm\">        \n                        <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                            <label class=\"label-input100\" for=\"Status\">Wybierz typ produktu, który chcesz dodać:</label>\n                            <select class=\"form-control\" ngModel formControlName=\"product_type\">\n                                <option value=\"drone\">Dron</option>\n                                <option value=\"laptop\">Laptop</option>\n                                <option value=\"smartphone\">Smartphone</option>\n                            </select>\n                        </div>\n                    </form>\n                \n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'drone'\">\n                    <p>Dodawanie drona</p>\n                    <drone-form (saveProduct)=\"addProduct($event)\"></drone-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'laptop'\">\n                    <p>Dodawanie laptopa</p>\n                    <laptop-form (saveProduct)=\"addProduct($event)\"></laptop-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'smartphone'\">\n                    <p>Dodawanie smartfona</p>\n                    <smartphone-form (saveProduct)=\"addProduct($event)\"></smartphone-form>\n                </ng-container>\n                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\n\n@Component({\n  selector: 'app-delete-product',\n  templateUrl: './delete-product.component.html',\n  styleUrls: ['./delete-product.component.css']\n})\nexport class DeleteProductComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n  }\n\n  id:number\n  error: boolean;\n\n  remove:boolean = false\n\n  delete(){\n      this.http.delete(this.id).subscribe(()=>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n      })\n\n      this.remove = true\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć wybrany product?\n                        </p>\n                        \n                        <button class=\"btn btn-secondary\" [routerLink]=\"['/product', id]\">Nie</button>\n                        <button class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/']\">Dalej</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedProduct = response\n      this.typeProduct = response.product_type\n    })\n\n   }\n\n   id:number\n   editedProduct:ProductTest\n   typeProduct:string\n   error:boolean\n\n   updateProduct(product){\n       console.log(product)\n         this.http.update(this.id, product)\n    .subscribe((response)=>{\n      console.log(\"Success \"+ response)\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error)\n    })\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"col-lg-12\">\n        <div class=\"form-wraper\">\n            <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                <ng-container *ngIf=\"typeProduct == 'drone'\">\n                    <h3>Edycja drona</h3>\n                    <drone-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></drone-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"typeProduct == 'laptop'\">\n                    <h3>Edycja laptopa</h3>\n                    <laptop-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></laptop-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"typeProduct == 'smartphone'\">\n                    <h3>Edycja smartfona</h3>\n                    <smartphone-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></smartphone-form>\n                </ng-container>\n            </ng-container>\n            \n            <ng-container *ngIf=\"!auth.isAuthenticated\">\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    <h3>Nie jesteś zalogowany</h3>\n                    <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                  </div>\n              </ng-container>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { FormBuilder } from '@angular/forms';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'drone-by-id',\n  templateUrl: './drone-by-id.component.html',\n  styleUrls: ['./drone-by-id.component.css']\n})\nexport class DroneByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n   id:number\n   product:ProductTest\n   amount:number = 1\n\n   cartItem:CartItemLocalStorage = {\n     order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n\n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n  \n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n\n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n\n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n","<ng-container *ngIf=\"product\">\n\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>      \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Kamera: <span>{{product.product_camera}}</span></p>\n                            <p>Zasięg: <span>{{product.product_range}} m</span></p>    \n                            <p>Czas pracy: <span>{{product.product_time_work}} min</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                              <tr>\n                                <td>Kamera:</td>\n                                <td>{{product.product_camera}}</td>\n                              </tr>\n                              <tr>\n                                <td>Zasięg</td>\n                                <td>{{product.product_range}} m</td>\n                              </tr>\n                              <tr>\n                                <td>Czas pracy</td>\n                                <td>{{product.product_time_work}} min</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n\n</ng-container>\n\n\n<box-last-product></box-last-product>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'laptop-by-id',\n  templateUrl: './laptop-by-id.component.html',\n  styleUrls: ['./laptop-by-id.component.css']\n})\nexport class LaptopByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n   id:number\n   product:ProductTest\n   amount:number = 1\n\n   cartItem:CartItemLocalStorage = {\n     order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n  \n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n\n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n\n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n\n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n\n\n}\n","\n<ng-container *ngIf=\"product\">\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>     \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Procesor: <span>{{product.product_processor}}</span></p>\n                            <p>Pamięć: <span>{{product.product_ram_size}}GB</span></p>    \n                            <p>Grafika: <span>{{product.product_graphics_card}}</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                                <tr>\n                                    <td>System operacyjny</td>\n                                    <td>{{product.product_system}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Procesor</td>\n                                    <td>{{product.product_processor}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>{{product.product_ram_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Rodzaj dysku</td>\n                                    <td>{{product.product_disc_type}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>{{product.product_disc_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Grafika</td>\n                                    <td>{{product.product_graphics_card}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Przekątna ekranu</td>\n                                    <td>{{product.product_screen_diagonal}}\"</td>\n                                </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n\n</ng-container>\n\n<box-last-product></box-last-product>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../products.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { CartService } from 'src/app/cart/cart.service';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { CartItemUser } from 'src/app/model/cartItemUser';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  \n  constructor(public auth:AuthService, private http:ProductsService, private cartService:CartService, private route:ActivatedRoute) {\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n    \n    this.http.getById(this.id).subscribe(response =>{\n      this.product = response\n\n      this.setLastProduct(response)\n\n      this.productType = response.product_type\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n   }\n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    if(localStorage.getItem('products') == null){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }else{\n      this.cartLocalItemList = JSON.parse(localStorage.getItem('products'))  \n    }\n\n  }\n  \n  statusError:number\n  error\n  id:number\n  product:ProductTest\n  productType:String  \n  cartLocalItemList:CartItemLocalStorage[] = []\n  lastProduct:ProductTest[] = []\n  \n\n  cartUserItem:CartItemUser = {\n    order_item_amount: 0,\n    product: this.product,\n    user: this.auth.getCurrentUser()\n  }\n\n  addtoCart(cartItem:CartItemLocalStorage){\n    \n    if(this.auth.isAuthenticated){\n      this.cartUserItem.order_item_amount = cartItem.order_item_amount\n      this.cartUserItem.product = cartItem.product\n      this.cartUserItem.user = this.auth.getCurrentUser()\n\n      this.cartService.setMyCartItem(this.cartUserItem).subscribe(()=>{\n    },err=>{\n      this.error = err.message\n    })\n    }else{\n      this.cartLocalItemList.push(cartItem)\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }\n    \n  }\n\n  setLastProduct(product:ProductTest){\n    var lastProduct:ProductTest[] = []\n    \n    if(localStorage.getItem('lastProduct') == null){\n      lastProduct.push(product)\n      localStorage.setItem('lastProduct', JSON.stringify(lastProduct))\n    }else{\n        lastProduct = JSON.parse(localStorage.getItem('lastProduct'))\n        var newList:ProductTest[] = []\n\n        newList.push(product)\n        for(var i = 0; i <= 5; i++){\n          if(lastProduct[i] != null && newList.length < 6)\n          newList[i+1] = lastProduct[i]\n        }\n          localStorage.setItem('lastProduct', JSON.stringify(newList))\n    }\n\n    \n\n  }\n\n}\n","<ng-container *ngIf=\"productType == 'drone'\">\n    <drone-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></drone-by-id>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'laptop'\">\n    <laptop-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></laptop-by-id>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'smartphone'\">\n    <smartphone-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></smartphone-by-id>\n</ng-container>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'smartphone-by-id',\n  templateUrl: './smartphone-by-id.component.html',\n  styleUrls: ['./smartphone-by-id.component.css']\n})\nexport class SmartphoneByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n  id:number\n  product:ProductTest\n  amount:number = 1\n  \n  cartItem:CartItemLocalStorage = {\n    order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n\n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n\n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n \n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n    \n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n","<ng-container *ngIf=\"product\">\n\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>   \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Ekran: <span>{{product.product_screen_diagonal}}\"</span></p>\n                            <p>System: <span>{{product.product_system}}</span></p>    \n                            <p>Pamięć: <span>{{product.product_disc_size}}GB</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                                <tr>\n                                    <td>System operacyjny</td>\n                                    <td>{{product.product_system}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Przekątna ekranu</td>\n                                    <td>{{product.product_screen_diagonal}}\"</td>\n                                </tr>\n                                <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>{{product.product_disc_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>{{product.product_ram_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Roździelczość kamery</td>\n                                    <td>{{product.product_camera_resolution}} Mpix</td>\n                                </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<box-last-product></box-last-product>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsRoutingModule } from './products.routing.module';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductComponent } from './product/product.component';\nimport { CartModule } from '../cart/cart.module';\nimport { DronesComponent } from './products/drones/drones.component';\nimport { AuthModule } from '../auth/auth.module';\n\nimport { SmartphonesComponent } from './products/smartphones/smartphones.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeleteProductComponent } from './delete-product/delete-product.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { FormModule } from '../form/form.module';\nimport { LaptopsComponent } from './products/laptops/laptops.component';\nimport { DroneByIdComponent } from './product/drone-by-id/drone-by-id.component';\nimport { LaptopByIdComponent } from './product/laptop-by-id/laptop-by-id.component';\nimport { SmartphoneByIdComponent } from './product/smartphone-by-id/smartphone-by-id.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ErrorModule } from '../error/error.module';\nimport { BoxLastProductModule } from '../box-last-product/box-last-product.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [ProductsComponent, ProductComponent, DronesComponent, LaptopsComponent,\n     SmartphonesComponent, DeleteProductComponent, EditProductComponent, DroneByIdComponent, LaptopByIdComponent, SmartphoneByIdComponent, AddProductComponent,\n    ],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    CartModule,\n    AuthModule,\n    FormModule,\n    ErrorModule,\n    MatSnackBarModule,\n    BoxLastProductModule,\n    ProductsRoutingModule\n  ]\n})\nexport class ProductsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductComponent } from './product/product.component';\nimport { DeleteProductComponent } from './delete-product/delete-product.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { AddProductComponent } from './add-product/add-product.component';\n\nconst routes: Routes = [\n  {\n    path:'products/:product_type',\n    component:  ProductsComponent\n  },\n  {\n    path: 'product/:product_id',\n    component: ProductComponent\n  },\n  {\n    path: 'add-product',\n    component: AddProductComponent\n  },\n  {\n    path: 'edit-product/:product_id',\n    component: EditProductComponent\n  },\n  {\n    path: 'delete-product/:product_id',\n    component: DeleteProductComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class ProductsRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProductTest } from '../model/productTest';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient, private appService:AppService) { }\n\n  getAll(){\n    return this.http.get<ProductTest[]>(this.appService.urlAuth+\"/product/all\")\n  }\n\n  create(product:Partial<ProductTest>){\n    return this.http.post<ProductTest>(this.appService.urlApi+\"/product/create\", product)\n  }\n\n  getById(id:number){\n    return this.http.get<ProductTest>(this.appService.urlAuth+\"/product/\"+id)\n  }\n\n  update(id:number, product:Partial<ProductTest>){\n    return this.http.put<ProductTest>(this.appService.urlApi+\"/product/\"+id, product)\n  }\n\n  delete(id:number){\n    return this.http.delete(this.appService.urlApi+\"/product/\"+id)\n  }\n\n  getByType(type:string){\n    return this.http.get<ProductTest[]>(this.appService.urlAuth+\"/product/type\",{\n      params:{\n        type:type\n      }\n    })\n  }\n  \n  getByStatus(status:string){\n    return this.http.get<ProductTest[]>(this.appService.urlAuth+\"/product/status/\",{\n      params:{\n        status:status\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n\n@Component({\n  selector: 'drones',\n  templateUrl: './drones.component.html',\n  styleUrls: ['./drones.component.css']\n})\nexport class DronesComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    this.getAllProduct()\n    document.scrollingElement.scrollTop = 0\n  }\n\n   statusError:number\n   drones:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"drone\").subscribe(response =>{\n      this.drones = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n}\n","<div class=\"container-fluid\">\n    <h4>Drony</h4> \n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let drone of drones\">\n            <div class=\"drone\">\n                <a [routerLink]=\"['/product', drone.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{drone.product_mark}}-{{drone.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"drone\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{drone.product_description}}\n                            </div>\n                            <p class=\"card-text\">kamera: {{drone.product_camera}}</p>\n                            <p class=\"card-text\">zasięg: {{drone.product_range}} m</p>\n                            <p class=\"card-text\">czas pracy: {{drone.product_time_work}} min</p>\n                            <h5 class=\"card-text\">{{drone.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'laptops',\n  templateUrl: './laptops.component.html',\n  styleUrls: ['./laptops.component.css']\n})\nexport class LaptopsComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.getAllProduct()\n  }\n\n   statusError:number\n   laptops:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"laptop\").subscribe(response =>{\n      this.laptops = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n}\n","<div class=\"container-fluid\">\n    <h4>Laptopy</h4>\n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let laptop of laptops\">\n            <div class=\"laptop\">\n                <a [routerLink]=\"['/product', laptop.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{laptop.product_mark}}-{{laptop.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"laptop\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{laptop.product_description}}\n                            </div>\n                            <p class=\"card-text\">procesor: {{laptop.product_processor}}</p>\n                            <p class=\"card-text\">pamięć: {{laptop.product_ram_size}} GB</p>\n                            <p class=\"card-text\">grafika: {{laptop.product_graphics_card}}</p>\n                            <h5 class=\"card-text\">{{laptop.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute) {\n    this.route.paramMap.subscribe(params =>{\n      this.productType = params.get('product_type')\n    })\n   }\n\n  productType:String\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<ng-container *ngIf=\"productType == 'drones'\">\n    <drones></drones>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'laptops'\">\n    <laptops></laptops>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'smartphones'\">\n    <smartphones></smartphones>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'smartphones',\n  templateUrl: './smartphones.component.html',\n  styleUrls: ['./smartphones.component.css']\n})\nexport class SmartphonesComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   } \n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.getAllProduct()\n  }\n  \n  statusError:number\n  smartphones:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"smartphone\").subscribe(response =>{\n      this.smartphones = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n\n\n\n}\n","<div class=\"container-fluid\">\n    <h4>Smartfony</h4>\n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let smartphone of smartphones\">\n            <div class=\"smartphone\">\n                <a [routerLink]=\"['/product', smartphone.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{smartphone.product_mark}}-{{smartphone.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"smartphone\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{smartphone.product_description}}\n                            </div>\n                            <p class=\"card-text\">ekran: {{smartphone.product_screen_diagonal}}\"</p>\n                            <p class=\"card-text\">system: {{smartphone.product_system}}</p>\n                            <p class=\"card-text\">pamięć: {{smartphone.product_disc_size}} GB</p>\n                            <h5 class=\"card-text\">{{smartphone.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>    \n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\nimport { UsersService } from 'src/app/users/users.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n\n  constructor( private http:UsersService, public auth:AuthService,\n     private route:ActivatedRoute) { \n\n    this.auth.state.subscribe()\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    }) \n\n    \n  }\n\n  id:number\n  editedUser:User\n  error:boolean\n  returnPath = 'profile'\n\n  updateUser(user){\n    console.log(user)\n    this.http.update(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {}\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <user-form [getPath]=\"returnPath\" [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-form>\n                </ng-container>\n                 \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'profile-bar',\n  templateUrl: './profile-bar.component.html',\n  styleUrls: ['./profile-bar.component.css']\n})\nexport class ProfileBarComponent implements OnInit {\n\n  constructor(public auth:AuthService) {}\n  \n  ngOnInit() {\n    this.name = this.auth.name\n  }\n  \n  name:String\n}\n","<ng-container *ngIf=\"auth.isAuthenticated\">\n    Witaj <strong>{{name}}</strong> :)\n    <span (click)=\"auth.logout()\"> | wyloguj</span>\n </ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProfileBarComponent } from './profile-bar/profile-bar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProfileRoutingModule } from './profile.routing.module';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormModule } from '../form/form.module';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [ProfileComponent, ProfileBarComponent, EditProfileComponent],\n  imports: [\n    CommonModule,\n    FormModule,\n    HttpClientModule,\n    ErrorModule,\n    ReactiveFormsModule,\n    ProfileRoutingModule,\n  ],\n  exports: [\n    ProfileComponent, ProfileBarComponent, \n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent,\n  },\n  {\n    path: 'edit-profile/:user_id',\n    component: EditProfileComponent,\n\n  }\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class ProfileRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { filter, map } from 'rxjs/internal/operators';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http:HttpClient, private auth:AuthService, private appService:AppService) { }\n\n  private user_request:Observable<User>\n  \n  getUserProfile(){\n\n    if(!this.user_request){ \n      this.user_request = this.auth.state\n      .pipe(\n        filter(() => this.auth.isAuthenticated),\n        map(() => this.auth.getCurrentUser()),\n      )\n    }\n    return this.user_request\n  }\n\n  clearCache(){\n    this.user_request = null\n  }\n\n  update(id:number, user:Partial<User>){\n    return this.http.put<User>(this.appService.urlApi+\"/user/\"+id, user)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AppService } from 'src/app/app.service';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public auth:AuthService, private http:HttpClient, private appService:AppService) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n\n    if(this.auth.isAuthenticated){\n      this.id = this.auth.getCurrentUser().user_id  \n\n      this.http.get<User>(this.appService.urlApi+this.id).subscribe(\n        response =>{\n          this.profile = response\n        }\n      ), error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      } \n    } \n  }\n  \n  id:number\n  profile:User\n  statusError:number\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <ng-container *ngIf=\"auth.isAuthenticated && profile\">\n                <div class=\"wraper\">\n                    <div class=\"options\">\n                        <a [routerLink]=\"['/edit-profile', profile.user_id]\">\n                            <span _ngcontent-qdj-c191=\"\" class=\"material-icons\">edit</span>   \n                            edycja\n                        </a> \n                        <a [routerLink]=\"['/zmiana-hasla']\">\n                            <span class=\"material-icons\">settings</span>\n                            zmień hasło\n                        </a>\n                        <a [routerLink]=\"['/zmiana-email']\">\n                            <span class=\"material-icons\">settings</span>\n                            zmień email\n                        </a>\n                    </div>\n                    <p>Dane konta:</p>\n                    <p>imię i nazwisko <span>{{profile.user_firstName}} </span><span>{{profile.user_lastName}}</span></p>\n                    <p>e-mail <span>{{profile.user_email}}</span></p>\n                    <p>tel. <span>{{profile.user_phoneNumber}}</span></p>\n                    <p>miasto <span>{{profile.user_zipCode}} </span><span>{{profile.user_city}}</span></p>\n                    <p>ulica <span>{{profile.user_street}}</span></p>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!auth.isAuthenticated\">\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    <h3>Nie jesteś zalogowany</h3>\n                    <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n                  </div>\n              </ng-container>\n            \n              <error-handler [errorHandler]=\"statusError\"></error-handler>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderComponent } from './slider/slider.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [SliderComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n  ],\n  exports: [\n    SliderComponent\n  ],\n  bootstrap: [SliderComponent]\n})\nexport class SliderModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n","<div class=\"carusel-wraper\">\n  <ngb-carousel>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_1.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_2.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_3.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n  </ngb-carousel>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n  }\n\n  id:number\n  error: boolean;\n\n  remove:boolean = false\n\n  delete(){\n    this.http.delete(this.id).subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n    })\n\n    this.remove = true\n}\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć wybranego użytkownika?\n                        </p>\n                        <button class=\"btn btn-secondary\" [routerLink]=\"['/user', id]\">Nie</button>\n                        <button class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/users']\">Ok</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    })\n   }\n\n   id:number\n   editedUser:User\n   error:boolean\n   returnPath = 'user'\n\n   updateUser(user){\n    console.log(user)\n    this.http.update(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <user-form [getPath]=\"returnPath\" [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-role-user',\n  templateUrl: './role-user.component.html',\n  styleUrls: ['./role-user.component.css']\n})\nexport class RoleUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    })\n   }\n\n   id:number\n   editedUser:User\n   error:boolean\n   returnPath = 'user'\n\n   updateUser(user){\n    console.log(user)\n    this.http.updateRole(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <user-role-form [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-role-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-by-id',\n  templateUrl: './user-by-id.component.html',\n  styleUrls: ['./user-by-id.component.css']\n})\nexport class UserByIdComponent implements OnInit {\n\n  \n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n   }\n\n   id:number\n\n   user = this.route.paramMap.pipe(\n    map(params => +params.get('user_id')),\n    switchMap(id => this.http.getById(id))\n  )\n  \n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <ng-container *ngIf=\"user | async as user\">\n                        <div class=\"options\">\n                            <a [routerLink]=\"['/edit-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" _ngcontent-qdj-c191=\"\" class=\"material-icons\">edit</span>\n                                Edytuj\n                            </a>\n                            <a [routerLink]=\"['/role-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" class=\"material-icons\">settings</span>\n                                Uprawnienia\n                            </a>\n                            <a [routerLink]=\"['/delete-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" class=\"material-icons\">settings</span>\n                                Usuń\n                            </a>\n                        </div>\n                        <p>Dane użytkownika</p>\n                        <p>Imię i nazwisko <span>{{user.user_firstName}} </span><span>{{user.user_lastName}}</span></p>\n                        <p>Uprawnienia <span>{{user.user_role}}</span></p>\n                        <p>E-mail <span>{{user.user_email}}</span></p>\n                        <p>Tel. <span>{{user.user_phoneNumber}}</span></p>\n                        <p>Miasto <span>{{user.user_zipCode}} </span><span>{{user.user_city}}</span></p>\n                        <p>Ulica <span>{{user.user_street}}</span></p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n    \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users/users.component';\nimport { UsersRoutingModule } from './users.routing.module';\nimport { UserByIdComponent } from './user-by-id/user-by-id.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { FormModule } from '../form/form.module';\nimport { RoleUserComponent } from './role-user/role-user.component';\n\n\n\n@NgModule({\n  declarations: [UsersComponent, UserByIdComponent, EditUserComponent, DeleteUserComponent, RoleUserComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormModule,\n    UsersRoutingModule\n  ],\n  exports: [\n    UsersComponent, \n  ]\n})\nexport class UsersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { UserByIdComponent } from './user-by-id/user-by-id.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { RoleUserComponent } from './role-user/role-user.component';\n\nconst routes: Routes = [\n  {\n    path:'users',\n    component:  UsersComponent\n  },\n  {\n    path: 'user/:user_id',\n    component: UserByIdComponent\n  },\n  {\n    path: 'edit-user/:user_id',\n    component: EditUserComponent\n  },\n  {\n    path: 'role-user/:user_id',\n    component: RoleUserComponent\n  },\n  {\n    path: 'delete-user/:user_id',\n    component: DeleteUserComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class UsersRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserList } from '../model/userList';\nimport { User } from '../model/user';\nimport { AppService } from '../app.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient, private appService:AppService) {}\n\n  getAll(){\n    return this.http.get<UserList>(this.appService.urlApi+\"/user/all\")\n  }\n\n  getById(id:number){\n    return this.http.get<User>(this.appService.urlApi+\"/user/\"+id)\n  }\n\n  update(id:number, user:Partial<User>){\n    return this.http.put<User>(this.appService.urlApi+\"/user/\"+id, user)\n  }\n\n  updateRole(id:number, user:Partial<User>){\n    return this.http.put<User>(this.appService.urlApi+\"/user/role/\"+id, user)\n  }\n\n  delete(id:number){\n    return this.http.delete(this.appService.urlApi+\"/user/\"+id)\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { UserList } from 'src/app/model/userList';\n\n@Component({\n  selector: 'users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService) {\n    this.auth.state.subscribe()    \n   }\n\n   usersList:UserList\n\n   getAllUsers(){\n    this.http.getAll().subscribe(response =>{\n      this.usersList = response;\n    })\n  }\n\n  ngOnInit() {\n    this.getAllUsers()\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div col=\"row\">\n    <div class=\"col-lg-12\">\n        <div class=\"wraper\">\n          <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Lp</th>\n                  <th scope=\"col\">Imię i nazwisko</th>\n                  <th scope=\"col\">E-mail</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of usersList let i = index;\">\n                  <th scope=\"row\">{{i+1}}</th>\n                  <td>{{user.user_firstName }} {{user.user_lastName}}</td>\n                  <td>{{user.user_email}}</td>\n                  <a [routerLink]=\"['/user', user.user_id]\">\n                    <span _ngcontent-rgj-c197=\"\" class=\"material-icons\">assignment</span>\n                      szczegóły\n                  </a>\n                </tr>\n              </tbody>\n            </table>\n          </ng-container>\n          \n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <div class=\"alert alert-warning\" role=\"alert\">\n                <h3>Nie jesteś zalogowany</h3>\n                <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n              </div>\n          </ng-container>\n        </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-feedback',\n  templateUrl: './validation-feedback.component.html',\n  styleUrls: ['./validation-feedback.component.css']\n})\nexport class ValidationFeedbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n\n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n    <div *ngIf=\"control.hasError('required')\">\n        Pole jest wymagane\n    </div>\n    \n    <div *ngIf=\"control.getError('minlength') as error\">\n        wymagane przynajmniej {{error.requiredLength}} znaków\n    </div>\n\n    <div *ngIf=\"control.hasError('email')\">\n        Niepoprawny email\n    </div>\n    <div *ngIf=\"control.hasError('invalid-username')\">\n         email zajęty\n    </div>\n\n    <div *ngIf=\"control.getError('password') as error\">\n        Hasło musi zawierać:\n        <div *ngIf=\"error.lowercase\"> - małą literę</div>\n        <div *ngIf=\"error.uppercase\"> - dużą literę</div>\n        <div *ngIf=\"error.number\"> - liczbę</div>\n        <div *ngIf=\"error.special\"> - znak specjalny</div>\n    </div>\n\n    <div *ngIf=\"control.hasError('password_match')\">\n        Hasła nie są równe. Spróbuj ponownie!!!\n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-order-address',\n  templateUrl: './validation-order-address.component.html',\n  styleUrls: ['./validation-order-address.component.css']\n})\nexport class ValidationOrderAddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n  \n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n\n    <div *ngIf=\"control.hasError('required')\">\n        Pole jest wymagane\n    </div>\n\n    <div *ngIf=\"control.getError('minlength') as error\">\n        Musisz podać min {{error.requiredLength}} znaki\n    </div>\n\n    <div *ngIf=\"control.hasError('pattern')\">\n        Niepoprawny\n    </div>\n\n    <div *ngIf=\"control.hasError('email')\">\n        Niepoprawny email\n    </div>\n\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-product',\n  templateUrl: './validation-product.component.html',\n  styleUrls: ['./validation-product.component.css']\n})\nexport class ValidationProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n\n  \n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n    \n    <div *ngIf=\"control.hasError('required')\">\n            Pole jest wymagane\n    </div>\n\n    <div *ngIf=\"control.hasError('pattern')\">\n        wymagane liczby\n    </div>\n\n    <div *ngIf=\"control.getError('minlength') as error\">\n        Pozostało jeszcze {{error.requiredLength - control.value.length}} znaków do wpisania\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidationFeedbackComponent } from './validation-feedback/validation-feedback.component';\nimport { ValidationProductComponent } from './validation-product/validation-product.component';\nimport { ValidationOrderAddressComponent } from './validation-order-address/validation-order-address.component';\n\n\n\n@NgModule({\n  declarations: [ValidationFeedbackComponent, ValidationProductComponent, ValidationOrderAddressComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ValidationFeedbackComponent, ValidationProductComponent, ValidationOrderAddressComponent]\n})\nexport class ValidationModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}