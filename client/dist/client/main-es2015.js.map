{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-product/admin-product.component.ts","./src/app/admin/admin-product/admin-product.component.html","./src/app/admin/admin.module.ts","./src/app/admin/admin.routing.module.ts","./src/app/admin/admin/admin.component.ts","./src/app/admin/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.routing.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/change-email/change-email.component.ts","./src/app/auth/change-email/change-email.component.html","./src/app/auth/change-password/change-password.component.ts","./src/app/auth/change-password/change-password.component.html","./src/app/auth/confirm-account/confirm-account.component.ts","./src/app/auth/confirm-account/confirm-account.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register.service.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/remind-password/remind-password.component.ts","./src/app/auth/remind-password/remind-password.component.html","./src/app/auth/reset-password/reset-password.component.ts","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/user-code-encrypt.service.ts","./src/app/box-drone/box-drone-routing.module.ts","./src/app/box-drone/box-drone.module.ts","./src/app/box-drone/box-drone/box-drone.component.ts","./src/app/box-drone/box-drone/box-drone.component.html","./src/app/box-footer/box-footer-routing.module.ts","./src/app/box-footer/box-footer.module.ts","./src/app/box-footer/box-footer/box-footer.component.ts","./src/app/box-footer/box-footer/box-footer.component.html","./src/app/box-last-product/box-last-product-routing.module.ts","./src/app/box-last-product/box-last-product.module.ts","./src/app/box-last-product/box-last-product/box-last-product.component.ts","./src/app/box-last-product/box-last-product/box-last-product.component.html","./src/app/box-mobile/box-mobile.module.ts","./src/app/box-mobile/box-mobile/box-mobile.component.ts","./src/app/box-mobile/box-mobile/box-mobile.component.html","./src/app/box-special/box-special-routing.module.ts","./src/app/box-special/box-special.module.ts","./src/app/box-special/box-special/box-special.component.ts","./src/app/box-special/box-special/box-special.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/cart/cart.module.ts","./src/app/cart/cart.routing.module.ts","./src/app/cart/cart.service.ts","./src/app/error/error-handler/error-handler.component.ts","./src/app/error/error-handler/error-handler.component.html","./src/app/error/error.module.ts","./src/app/form/drone-form/drone-form.component.ts","./src/app/form/drone-form/drone-form.component.html","./src/app/form/form.module.ts","./src/app/form/form.routing.module.ts","./src/app/form/laptop-form/laptop-form.component.ts","./src/app/form/laptop-form/laptop-form.component.html","./src/app/form/order-address-form/order-address-form.component.ts","./src/app/form/order-address-form/order-address-form.component.html","./src/app/form/order-detail-form/order-detail-form.component.ts","./src/app/form/order-detail-form/order-detail-form.component.html","./src/app/form/order-form/order-form.component.ts","./src/app/form/order-form/order-form.component.html","./src/app/form/smartphone-form/smartphone-form.component.ts","./src/app/form/smartphone-form/smartphone-form.component.html","./src/app/form/user-form/user-form.component.ts","./src/app/form/user-form/user-form.component.html","./src/app/form/user-role-form/user-role-form.component.ts","./src/app/form/user-role-form/user-role-form.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/navi/menu/menu.component.ts","./src/app/navi/menu/menu.component.html","./src/app/navi/navi.module.ts","./src/app/navi/navi.routing.module.ts","./src/app/navi/page-not-found/page-not-found.component.ts","./src/app/navi/page-not-found/page-not-found.component.html","./src/app/navigation-bar/navigation-bar.component.ts","./src/app/navigation-bar/navigation-bar.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/orders/add-order/add-order.component.ts","./src/app/orders/add-order/add-order.component.html","./src/app/orders/order-sumary/order-sumary.component.ts","./src/app/orders/order-sumary/order-sumary.component.html","./src/app/orders/order/order.component.ts","./src/app/orders/order/order.component.html","./src/app/orders/orders-delete/orders-delete.component.ts","./src/app/orders/orders-delete/orders-delete.component.html","./src/app/orders/orders-manager/orders-manager.component.ts","./src/app/orders/orders-manager/orders-manager.component.html","./src/app/orders/orders.module.ts","./src/app/orders/orders.routing.module.ts","./src/app/orders/orders.service.ts","./src/app/orders/orders/orders.component.ts","./src/app/orders/orders/orders.component.html","./src/app/products/add-product/add-product.component.ts","./src/app/products/add-product/add-product.component.html","./src/app/products/delete-product/delete-product.component.ts","./src/app/products/delete-product/delete-product.component.html","./src/app/products/edit-product/edit-product.component.ts","./src/app/products/edit-product/edit-product.component.html","./src/app/products/product/drone-by-id/drone-by-id.component.ts","./src/app/products/product/drone-by-id/drone-by-id.component.html","./src/app/products/product/laptop-by-id/laptop-by-id.component.ts","./src/app/products/product/laptop-by-id/laptop-by-id.component.html","./src/app/products/product/product.component.ts","./src/app/products/product/product.component.html","./src/app/products/product/smartphone-by-id/smartphone-by-id.component.ts","./src/app/products/product/smartphone-by-id/smartphone-by-id.component.html","./src/app/products/products.module.ts","./src/app/products/products.routing.module.ts","./src/app/products/products.service.ts","./src/app/products/products/drones/drones.component.ts","./src/app/products/products/drones/drones.component.html","./src/app/products/products/laptops/laptops.component.ts","./src/app/products/products/laptops/laptops.component.html","./src/app/products/products/products.component.ts","./src/app/products/products/products.component.html","./src/app/products/products/smartphones/smartphones.component.ts","./src/app/products/products/smartphones/smartphones.component.html","./src/app/profile/edit-profile/edit-profile.component.ts","./src/app/profile/edit-profile/edit-profile.component.html","./src/app/profile/profile-bar/profile-bar.component.ts","./src/app/profile/profile-bar/profile-bar.component.html","./src/app/profile/profile.module.ts","./src/app/profile/profile.routing.module.ts","./src/app/profile/profile.service.ts","./src/app/profile/profile/profile.component.ts","./src/app/profile/profile/profile.component.html","./src/app/slider/slider.module.ts","./src/app/slider/slider/slider.component.ts","./src/app/slider/slider/slider.component.html","./src/app/users/delete-user/delete-user.component.ts","./src/app/users/delete-user/delete-user.component.html","./src/app/users/edit-user/edit-user.component.ts","./src/app/users/edit-user/edit-user.component.html","./src/app/users/role-user/role-user.component.ts","./src/app/users/role-user/role-user.component.html","./src/app/users/user-by-id/user-by-id.component.ts","./src/app/users/user-by-id/user-by-id.component.html","./src/app/users/users.module.ts","./src/app/users/users.routing.module.ts","./src/app/users/users.service.ts","./src/app/users/users/users.component.ts","./src/app/users/users/users.component.html","./src/app/validation/validation-feedback/validation-feedback.component.ts","./src/app/validation/validation-feedback/validation-feedback.component.html","./src/app/validation/validation-order-address/validation-order-address.component.ts","./src/app/validation/validation-order-address/validation-order-address.component.html","./src/app/validation/validation-product/validation-product.component.ts","./src/app/validation/validation-product/validation-product.component.html","./src/app/validation/validation.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-admin-product',\n  templateUrl: './admin-product.component.html',\n  styleUrls: ['./admin-product.component.css']\n})\nexport class AdminProductComponent implements OnInit {\n\n  constructor(public auth:AuthService, private productsService:ProductsService) { \n    this.auth.state.subscribe()\n\n      this.productsService.getAll().subscribe(response =>{\n        this.product = response\n      },error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      })\n    \n\n    \n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\nstatusError:number\nproduct:ProductTest[]\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"wraper\">\n            <error-handler [errorHandler]=\"statusError\"></error-handler>\n            <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"header\">\n              <h4>Produkty</h4>\n              <a [routerLink]=\"['/add-product']\">\n                <span _ngcontent-jlm-c187=\"\" class=\"material-icons\">add_circle</span>\n                Dodaj nowy produkt\n              </a>\n            </div>\n                <table class=\"table table-striped\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Lp</th>\n                        <th scope=\"col\">Produkt</th>\n                        <th scope=\"col\">Ilość</th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let p of product let i = index;\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>{{p.product_description}}</td>\n                        <td>{{p.product_amount_available - p.product_amount_sold}} szt.</td>\n                        <td><a [routerLink]=\"['/product', p.product_id]\">\n                              <span class=\"material-icons\">chrome_reader_mode</span>\n                              podgląd\n                            </a>\n                        </td>     \n                      </tr>\n                    </tbody>\n                  </table>\n            </ng-container>\n          </div>\n      </div>\n  </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminRoutingModule } from './admin.routing.module';\nimport { AdminProductComponent } from './admin-product/admin-product.component';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [AdminComponent, AdminProductComponent],\n  imports: [\n    CommonModule,\n    ErrorModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminProductComponent } from './admin-product/admin-product.component';\n\nconst routes: Routes = [\n  {\n    path: 'panel-administracyjny',\n    component: AdminComponent\n  },\n  {\n    path: 'panel-administracyjny-produkty',\n    component: AdminProductComponent\n  },\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\n\n\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <h3>Panel administracyjny</h3>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/zamowienia-admin']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">assignment</span>\n                            Zamówienia \n                        </a>\n                    </div>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/panel-administracyjny-produkty']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">devices_other</span>\n                            Produkty \n                        </a>\n                    </div>\n                    <div class=\"option\">\n                        <a [routerLink]=\"['/users']\">\n                            <span _ngcontent-oye-c197=\"\" class=\"material-icons\">people</span>\n                            Użytkownicy \n                        </a>\n                    </div>                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated || (auth.isAuthenticated && auth.role != 'ADMIN')\">\n                    <h4>Brak uprawnień</h4>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './navi/page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {\n    path:'not-found',\n    component: PageNotFoundComponent\n  },\n  {\n    path:'home',\n    component:  HomeComponent\n  },\n  {\n    path:'',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path:'**',\n    redirectTo: 'not-found',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n    // enableTracing: true,\n    // useHash:true,\n    // errorHandler:()=>{},\n    // initialNavigation: true,\n\n  })\n],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { UserCodeEncryptService } from './auth/user-code-encrypt.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private auth:AuthService, private userSessionStorage:UserCodeEncryptService){}\n\n  ngOnInit(){\n    if(localStorage.getItem('x-tom------>____ <o_o> ____<----x-tom') !== null){\n      this.auth.getUserIdInStorage()\n    }\n  }\n  \n}\n","<div class=\"page-wraper\">\n    <navigation>\n        <navigation-bar></navigation-bar>\n        <div class=\"content-wraper\">\n            <router-outlet></router-outlet>\n            <box-mobile></box-mobile>\n            <box-footer></box-footer>\n        </div>\n    </navigation>\n</div>\n    \n    \n    \n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthModule } from './auth/auth.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { NaviModule } from './navi/navi.module';\nimport { AuthService } from './auth/auth.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UsersModule } from './users/users.module';\nimport { CartModule } from './cart/cart.module';\nimport { ProductsModule } from './products/products.module';\nimport { FormModule } from './form/form.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { AdminModule } from './admin/admin.module';\nimport { ErrorModule } from './error/error.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\nimport { HomeComponent } from './home/home.component';\nimport { SliderModule } from './slider/slider.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { BoxDroneModule } from './box-drone/box-drone.module';\nimport { BoxMobileModule } from './box-mobile/box-mobile.module';\nimport { BoxLastProductModule } from './box-last-product/box-last-product.module';\nimport { BoxFooterModule } from './box-footer/box-footer.module';\nimport { BoxSpecialModule } from './box-special/box-special.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    NavigationBarComponent,\n    HomeComponent,\n  ],\n  imports: [\n    NgbModule,  \n    BrowserModule,\n    HttpClientModule,\n    AuthModule,\n    ProfileModule,\n    NaviModule,\n    UsersModule,\n    CartModule,\n    ProductsModule,\n    FormModule,\n    OrdersModule,\n    ValidationModule,\n    AdminModule,\n    ErrorModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    SliderModule,\n    BoxDroneModule,\n    BoxMobileModule,\n    BoxLastProductModule,\n    BoxFooterModule,\n    BoxSpecialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n\n  constructor(private auth:AuthService, private router:Router){\n      this.auth.state.subscribe(state =>{\n        if(this.auth.isAuthenticated){\n          // this.router.navigate(['/'])\n        }else{\n          // this.router.navigate(['/login'])\n        }\n      })\n\n      this.router.events.subscribe(event =>{\n        if(event instanceof NavigationEnd){\n          //...\n        }\n      })\n  }\n}\n","import { Injectable, Component } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, empty } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(private auth:AuthService,) {\n    this.auth.state.subscribe()\n   }\n  \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(this.getAuthorizedRequest(req))\n\n  //  return next.handle(this.getAuthorizedRequest(req)).pipe(\n  //     catchError((err, caught)=>{\n\n  //       if(err instanceof HttpErrorResponse && err.status === 401){\n  //           this.auth.logout('Sesja wygasła! Zaloguj się ponownie!')\n  //           return empty()\n  //       }\n        \n  //       if(err instanceof HttpErrorResponse && err.status === 404){\n  //         console.error(err.error)\n  //         console.log(err.status)\n  //         return empty()\n  //     }\n\n  //       return Observable.throw(err)\n  //     })\n  //  )\n\n  }\n\n  getAuthorizedRequest(req:HttpRequest<any>){\n\n    if(!this.auth.isAuthenticated){\n      return req.clone({\n        setHeaders:{\n          'Authorization': 'Bearer ' + this.auth.getTokenInLocalStorage()\n        }\n      })  \n    }else{\n      return req.clone({\n        setHeaders:{\n          'Authorization': 'Bearer ' + this.auth.getToken()\n        }\n      })\n    }\n    \n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\nimport { AuthInterceptorService } from './auth-interceptor.service';\nimport { LoginComponent } from './login/login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthRoutingModule } from './auth.routing.module';\n// import { AuthorizedGuard } from './authorized.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { ValidationModule } from '../validation/validation.module';\nimport { RemindPasswordComponent } from './remind-password/remind-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ChangeEmailComponent } from './change-email/change-email.component';\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, RemindPasswordComponent, ResetPasswordComponent, ChangePasswordComponent, ChangeEmailComponent, ConfirmAccountComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ValidationModule,\n    AuthRoutingModule\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    },\n    // AuthorizedGuard\n  ],\n  exports: [LoginComponent, RegisterComponent]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RemindPasswordComponent } from './remind-password/remind-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ChangeEmailComponent } from './change-email/change-email.component';\nimport { ConfirmAccountComponent } from './confirm-account/confirm-account.component';\n\nconst routes: Routes = [\n  {\n    path: 'logowanie',\n    component: LoginComponent\n  },\n  {\n    path: 'logowanie/:options',\n    component: LoginComponent\n  },\n  {\n    path: 'rejestracja',\n    component: RegisterComponent\n  },\n  {\n    path: 'przypomnij-haslo',\n    component: RemindPasswordComponent\n  },\n  {\n    path: 'resetuj-haslo',\n    component: ResetPasswordComponent\n  },\n  {\n    path: 'zmiana-hasla',\n    component: ChangePasswordComponent\n  },\n  {\n    path: 'zmiana-email',\n    component: ChangeEmailComponent\n  },\n  {\n    path: 'potwierdzenie-rejestracji/:code/:email',\n    component: ConfirmAccountComponent\n  },\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule { }\n","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { map, tap } from 'rxjs/internal/operators';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { UserCodeEncryptService } from './user-code-encrypt.service';\nimport { PasswrodResetData } from '../model/passwordResetData';\nimport { ChangePassword } from '../model/changePasswordData';\nimport { ChangeEmail } from '../model/changeEmailData';\nimport { Router } from '@angular/router';\n\n\ninterface Credentials{\n  user_email: String;\n  user_password: String;\n}\n\ninterface Session{\n  token: String;\n  user: User;\n  message?: String\n  status: boolean\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http:HttpClient, private userCodeEnctryptService:UserCodeEncryptService, private router: Router) {\n  }\n  \n  private session = new BehaviorSubject<Session>(null)\n\n  // urlLocal = \"http://localhost:8090/login\"\n  // urlRemote = \"https://x-tom-auth.herokuapp.com/login\"\n  urlRemoteAWS = \"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/login\"\n  isAuthenticated = false\n  role:string\n  name:String\n  user:User\n  status:boolean\n  \n\n  userSession:Session = {\n    token: '',\n    user: this.user,\n    status: false\n  }\n\n  state = this.session.pipe(\n    map( session => session && !!session.token),\n    tap( state => this.isAuthenticated = state)\n    )\n      \n  checkRole = this.session.pipe(\n    map(role => this.role = role.user.user_role))\n    \n    login(credentials:Credentials){\n      \n    return this.http.post(this.urlRemoteAWS, credentials)\n      .subscribe((session:Session) =>{\n        this.session.next(session)\n        if(session.status){\n          this.role = session.user.user_role\n          this.name = session.user.user_firstName\n          this.status = session.status\n          this.setTokenInLocalStorage(session.token)\n          this.setUserIdInStorage(session.user.user_id)\n        }\n        \n      },error =>{\n        if(error instanceof HttpErrorResponse){\n          console.error(error.error)\n        }\n      })\n      \n    }\n\n    logout(message?:String){\n      this.session.next({\n        ...this.session.getValue(),\n        token: null,\n        message\n      })\n      \n      this.clearRole()\n      localStorage.removeItem('(O,,O)')\n      localStorage.removeItem('x-tom------>____ <o_o> ____<----x-tom')\n      // window.location.reload()\n      this.router.navigate(['/home']);      \n    }\n    \n    getCurrentUser(){\n      const session = this.session.getValue()\n      return session && session.user;\n    }\n\n    // ---> localhost\n    // checkEmail(email:string){\n    //   return this.http.post<boolean>(\"http://localhost:8090/check-email\", email)\n    // }\n\n    // ---> remote\n    // checkEmail(email:string){\n    //   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/check-email\", email)\n    // }\n    \n    // ---> remote aws\n    checkEmail(email:string){\n      return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/check-email\", email)\n    }\n    \n    clearRole(){\n        this.role = \"\"\n    }\n        \n    getToken(){\n    const session = this.session.getValue()\n    return session && session.token;\n    }\n\n    getMessage(){\n    const session = this.session.getValue()\n    return session && session.message;\n    }\n\n  setTokenInLocalStorage(token){\n      localStorage.setItem('(O,,O)', JSON.stringify(token))\n  }\n\n  getTokenInLocalStorage(){\n    var token:string\n    if(localStorage.getItem('(O,,O)') !== null){\n         token = JSON.parse(localStorage.getItem('(O,,O)'))\n         return token\n    }  \n    \n  }\n\n  setUserIdInStorage(userId:number){\n    var code = this.userCodeEnctryptService.encryptCode(userId)\n    localStorage.setItem('x-tom------>____ <o_o> ____<----x-tom', JSON.stringify(code))\n  }\n\n\n  getUserIdInStorage(){\n    var code:string = JSON.parse(localStorage.getItem('x-tom------>____ <o_o> ____<----x-tom'))\n    var token:string = this.getTokenInLocalStorage()\n    var userId:number  = this.userCodeEnctryptService.decryptCode(code)\n    this.userSession.token = token\n\n    // ---> localhost\n    // this.http.get<User>(\"http://localhost:8080/user/\"+userId).subscribe(\n    //   response =>{\n    //       this.userSession.user = response\n    //       this.role = response.user_role\n    //       this.name = response.user_firstName\n    //       this.session.next(this.userSession)\n    //   }\n    // )\n\n    // ---->remote\n    // this.http.get<User>(\"https://x-tom-api.herokuapp.com/user/\"+userId).subscribe(\n    //   response =>{\n    //       this.userSession.user = response\n    //       this.role = response.user_role\n    //       this.name = response.user_firstName\n    //       this.session.next(this.userSession)\n    //   }\n    // )\n\n      // ---->remote aws\n      this.http.get<User>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"+userId).subscribe(\n        response =>{\n            this.userSession.user = response\n            this.role = response.user_role\n            this.name = response.user_firstName\n            this.session.next(this.userSession)\n        }\n      )  \n\n  }\n\n\n  // ---> localhost\n  // passwordResetVerifyUser(email:string){\n  //   return this.http.post<boolean>(\"http://localhost:8090/password-reset/verify-user\", email)\n  // }\n\n// ---->remote\n// passwordResetVerifyUser(email:string){\n//   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/password-reset/verify-user\", email)\n// }\n\n// ---->remote aws\npasswordResetVerifyUser(email:string){\n  return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/password-reset/verify-user\", email)\n}\n\n  // ---> localhost\n  // passwordResetCheckCode(passwordResetData:PasswrodResetData){\n  //   return this.http.post<boolean>(\"http://localhost:8090/password-reset/check-code\", passwordResetData)\n  // }\n\n// ---->remote\n// passwordResetCheckCode(passwordResetData:PasswrodResetData){\n//   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/password-reset/check-code\", passwordResetData)\n// }\n\n// ---->remote aws\npasswordResetCheckCode(passwordResetData:PasswrodResetData){\n  return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/password-reset/check-code\", passwordResetData)\n}\n\n  // ---> localhost\n  // passwordResetSetNew(passwordResetData:PasswrodResetData){\n  //   return this.http.post<boolean>(\"http://localhost:8090/password-reset/set-new\", passwordResetData)\n  // }\n\n// ---->remote\n// passwordResetSetNew(passwordResetData:PasswrodResetData){\n//   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/password-reset/set-new\", passwordResetData)\n// }\n\n// ---->remote aws\npasswordResetSetNew(passwordResetData:PasswrodResetData){\n  return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/password-reset/set-new\", passwordResetData)\n}\n\n  // ---> localhost\n  // changePassword(changePasswordData:ChangePassword){\n  //   return this.http.put<boolean>(\"http://localhost:8080/user/change-password\", changePasswordData)\n  // }\n\n// ---->remote\n// changePassword(changePasswordData:ChangePassword){\n//   return this.http.put<boolean>(\"https://x-tom-api.herokuapp.com/user/change-password\", changePasswordData)\n// }\n\n// ---->remote aws\nchangePassword(changePasswordData:ChangePassword){\n  return this.http.put<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/change-password\", changePasswordData)\n}\n\n// ---> localhost\n  // changeEmail(changeEmailData:ChangeEmail){\n  //   return this.http.put<boolean>(\"http://localhost:8080/user/change-email\", changeEmailData)\n  // }\n\n// ---->remote\n// changeEmail(changeEmailData:ChangeEmail){\n//   return this.http.put<boolean>(\"https://x-tom-api.herokuapp.com/user/change-email\", changeEmailData)\n// }\n\n// ---->remote aws\nchangeEmail(changeEmailData:ChangeEmail){\n  return this.http.put<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/change-email\", changeEmailData)\n}\n\n  // ---> localhost\n  // confirmPassword(changePasswordData:ChangePassword){\n  //   return this.http.post<boolean>(\"http://localhost:8080/user/confirm-password\", changePasswordData)\n  // }\n\n  // ---->remote\n  // confirmPassword(changePasswordData:ChangePassword){\n  //   return this.http.post<boolean>(\"https://x-tom-api.herokuapp.com/user/confirm-password\", changePasswordData)\n  // }\n\n    // ---->remote aws\n    confirmPassword(changePasswordData:ChangePassword){\n      return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/confirm-password\", changePasswordData)\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ChangeEmail } from 'src/app/model/changeEmailData';\nimport { ChangePassword } from 'src/app/model/changePasswordData';\n\n@Component({\n  selector: 'app-change-email',\n  templateUrl: './change-email.component.html',\n  styleUrls: ['./change-email.component.css']\n})\nexport class ChangeEmailComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) {\n    auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  passwordConfirm:boolean = false\n  correctPassword:boolean = true\n  correctChangeEmail:boolean = true\n  saveNewEmail:boolean = false\n  saveEmail:boolean = false;\n  valid:boolean = false\n\n  confirmPasswordData:ChangePassword = {\n    user_id: 0,\n    password: \"\",\n  }\n\n  changeEmailData:ChangeEmail = {\n    userId: 0\n,    email: ''\n  }\n\n  confirmPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required\n    ]),\n  })\n\n  changeEmailForm = this.fb.group({\n    email: this.fb.control('',[\n      Validators.required,\n      Validators.email\n    ]),\n  })\n\n  confirmPassword(){\n\n    if(this.confirmPasswordForm.valid){\n      this.valid = false;\n        this.confirmPasswordData.user_id = this.auth.getCurrentUser().user_id\n        this.confirmPasswordData.password = this.confirmPasswordForm.get('password').value\n        \n        this.auth.confirmPassword(this.confirmPasswordData).subscribe(response =>{\n\n          if(response){\n            this.passwordConfirm = response\n          }else{\n            this.correctPassword = response\n          }\n          \n        })\n    }else{\n      this.valid = true;\n    }\n  }\n\n\n  changeEmail(){\n\n    if(this.changeEmailForm.valid){\n      this.valid = false\n\n      this.changeEmailData.userId = this.auth.getCurrentUser().user_id\n      this.changeEmailData.email = this.changeEmailForm.get('email').value\n\n      this.auth.changeEmail(this.changeEmailData).subscribe(response =>{\n        if(response){\n            this.saveEmail = true\n        }else{\n          this.correctChangeEmail = false\n        }\n      })\n    }else{\n      this.valid = true\n    }\n    \n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Zmiana adresu e-mail</h3>\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <ng-container *ngIf=\"!passwordConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"confirmPasswordForm\" (submit)=\"confirmPassword()\">\n                                <ng-container *ngIf=\"valid\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Wypełnij puste pole\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!correctPassword\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Niepoprawne hasło\n                                    </div>\n                                </ng-container>\n                                <div class=\"form-group\">\n                                    <label for=\"Password\">Podaj hasło do swojego konta</label>\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                    <validation-feedback [control]=\"confirmPasswordForm.get('password')\"></validation-feedback>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-success\" value=\"Dalej\">\n                            </form>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"passwordConfirm\">\n                        <ng-container *ngIf=\"saveNewEmail\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Hasło zostało zmienione<br>\n                                <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                            </div>\n                            \n                        </ng-container>\n                        <ng-container *ngIf=\"!saveNewEmail\">\n                            <ng-container *ngIf=\"!saveEmail\">\n                                <div class=\"form\">\n                                    <form [formGroup]=\"changeEmailForm\" (submit)=\"changeEmail()\">\n                                        <ng-container *ngIf=\"valid\">\n                                            <div class=\"alert alert-danger\" role=\"alert\">\n                                                Wypełnij puste pole\n                                            </div>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!correctChangeEmail\">\n                                            <div class=\"alert alert-danger\" role=\"alert\">\n                                                Email jest już zajęty\n                                            </div>\n                                        </ng-container>\n                                        <div class=\"form-group\">\n                                            <label for=\"Password\">Podaj nowy email</label>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                                            <validation-feedback [control]=\"changeEmailForm.get('email')\"></validation-feedback>\n                                        </div>\n                                        <input type=\"submit\" class=\"btn btn-success\" value=\"Zapisz\">\n                                    </form>\n                                </div>\n                            </ng-container>\n                            <ng-container *ngIf=\"saveEmail\">\n                                <div class=\"alert alert-success\" role=\"alert\">\n                                    Email został zmieniony<br>\n                                    <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                                </div>\n                            </ng-container>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, ValidatorFn, FormControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ChangePassword } from 'src/app/model/changePasswordData';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) {\n    auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  passwordConfirm:boolean = false\n  correctPassword:boolean = true\n  saveNewPassword:boolean = false\n  valid:boolean = false\n\n  confirmPasswordData:ChangePassword = {\n    user_id: 0,\n    password: \"\",\n  }\n\n  changePasswordData:ChangePassword = {\n    user_id: 0\n,    password: ''\n  }\n\n  confirmPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required\n    ]),\n  })\n\n  changePasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    password_repeat: this.fb.control(''),\n\n\n\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.password !== values.password_repeat){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n\n\n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n\n  confirmPassword(){\n\n    if(this.confirmPasswordForm.valid){\n      this.valid = false;\n        this.confirmPasswordData.user_id = this.auth.getCurrentUser().user_id\n        this.confirmPasswordData.password = this.confirmPasswordForm.get('password').value\n        \n        this.auth.confirmPassword(this.confirmPasswordData).subscribe(response =>{\n\n          if(response){\n            this.passwordConfirm = response\n          }else{\n            this.correctPassword = response\n          }\n          \n        })\n    }else{\n      this.valid = true;\n    }\n  }\n\n  changePassword(){\n\n    if(this.changePasswordForm.valid){\n      this.valid = false\n\n      this.changePasswordData.user_id = this.auth.getCurrentUser().user_id\n      this.changePasswordData.password = this.changePasswordForm.get('password').value\n\n      this.auth.changePassword(this.changePasswordData).subscribe()\n      this.saveNewPassword = true\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Zmiana hasła</h3>\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <ng-container *ngIf=\"!passwordConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"confirmPasswordForm\" (submit)=\"confirmPassword()\">\n                                <ng-container *ngIf=\"valid\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Wypełnij puste pole\n                                    </div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!correctPassword\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Niepoprawne hasło\n                                    </div>\n                                </ng-container>\n                                <div class=\"form-group\">\n                                    <label for=\"Password\">Podaj aktualne hasło do swojego konta</label>\n                                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                    <validation-feedback [control]=\"confirmPasswordForm.get('password')\"></validation-feedback>\n                                </div>\n                                <input type=\"submit\" class=\"btn btn-success\" value=\"Wyślij\">\n                            </form>\n                        </div>\n                    </ng-container>\n\n                     <ng-container *ngIf=\"passwordConfirm\">\n                        <ng-container *ngIf=\"saveNewPassword\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Hasło zostało zapisane.<br>\n                                <a class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">Dalej</a>  \n                            </div>\n                        </ng-container>\n        \n                        <ng-container *ngIf=\"!saveNewPassword\">\n                            <div class=\"form\">\n                                <form [formGroup]=\"changePasswordForm\" (submit)=\"changePassword()\">\n                                    <ng-container *ngIf=\"valid\">\n                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                            Wypełnij poprawnie wszystkie pola\n                                        </div>\n                                    </ng-container>\n                                    <div class=\"form-group\">\n                                        <label for=\"Password\">Hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                                        <validation-feedback [control]=\"changePasswordForm.get('password')\"></validation-feedback>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"Password2\">Powtórz hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"password_repeat\">\n                                        <validation-feedback [control]=\"changePasswordForm\" ></validation-feedback>\n                                    </div>\n                                    <input type=\"submit\" class=\"btn btn-success\" value=\"Zapisz\">\n                                </form>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n            </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from '../register.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-confirm-account',\n  templateUrl: './confirm-account.component.html',\n  styleUrls: ['./confirm-account.component.css']\n})\nexport class ConfirmAccountComponent implements OnInit {\n\n  constructor(private registerService:RegisterService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.route.paramMap.subscribe(params =>{\n      this.code = params.get('code'),\n      this.email = params.get('email')\n      })\n    \n    this.registerService.confirmAccount(this.code, this.email).subscribe(response =>{\n        this.accountConfirmation = response\n        this.init = true\n    })\n  }\n\ncode:string\nemail:string\ninit:boolean = false\naccountConfirmation:boolean\n\n\n}\n","<div class=\"container-fluid\">\n    <ng-container *ngIf=\"init\">\n        <ng-container *ngIf=\"accountConfirmation\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                <h4>Dziękujemy za rejestracje :)</h4>\n                <p>Możesz zalogować się na swoje konto.</p>\n                <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n           </div>\n        </ng-container>\n        \n        <ng-container *ngIf=\"!accountConfirmation\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                <h4>Coś poszło nie tak :(</h4>\n                <p>Prawdopodobie link wygasł.</p>\n                <button class=\"btn btn-info\" [routerLink]=\"['/rejestracja']\">Spróbuj ponownie</button>\n           </div>\n        </ng-container>\n    </ng-container>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n    \n    this.route.paramMap.subscribe(params =>{\n      this.options = +params.get('options')\n      })\n  }\n\n  ngOnInit() {\n    this.message =  this.auth.getMessage()\n    document.scrollingElement.scrollTop = 0\n   }\n\n  message:String\n  options = 0\n  valid:boolean = false\n  correctData = true\n\n\n  loginForm = this.fb.group({\n    user_email: this.fb.control('', [\n    Validators.required,\n    Validators.email\n    ]),\n    user_password: this.fb.control('', [\n      Validators.required,\n    ]),\n  })\n  \n  login(){\n\n    if(this.loginForm.valid){\n      this.valid = false;\n      this.auth.login(this.loginForm.value)\n      if(!this.auth.status){\n        this.correctData = false\n      }\n    }else{\n      this.valid = true;\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <ng-container *ngIf=\"!auth.isAuthenticated\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h3>Mam już konto</h3>\n                <div class=\"alert alert-danger\" *ngIf=\"message\">{{message}}</div>\n                <form [formGroup]=\"loginForm\" (submit)=\"login()\">\n        \n                    <ng-container *ngIf=\"valid\"> \n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            Wpisz email i hasło\n                          </div>\n                    </ng-container>\n                    \n                    <ng-container *ngIf=\"!correctData\"> \n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            Niepoprawny login lub hasło\n                          </div>\n                    </ng-container>\n        \n                    <div class=\"form-group\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"user_email\" placeholder=\"E-mail\">\n                        <validation-feedback [control]=\"loginForm.get('user_email')\"></validation-feedback>\n                    </div>\n                \n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"user_password\" placeholder=\"Hasło\">\n                    </div>\n        \n                    <input type=\"submit\" class=\"btn btn-primary mx-auto login\" value=\"Zaloguj się\">\n        \n                    <div>\n                        <a [routerLink]=\"['/przypomnij-haslo']\">Nie pamiętam hasła</a>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6\">\n                <h3>Nie mam konta</h3>\n                <ng-container *ngIf=\"options == 1\">\n                    <button [routerLink]=\"['/zamowienie']\" type=\"button\" class=\"btn btn-primary\">Kontynuuj bez logowania</button>\n                </ng-container>    \n\n                <button [routerLink]=\"['/rejestracja']\" type=\"button\" class=\"btn btn-primary\">Załóż konto</button>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"auth.isAuthenticated\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <div class=\"wraper wraper-log\">\n                        <div class=\"header\">\n                            <h4>Jesteś zalogowany</h4>\n                            <p>Przejdź do:</p>\n                        </div>\n                        <div><a [routerLink]=\"['/moje-zamowienia']\">Moje zamówienia</a></div>\n                        <div><a [routerLink]=\"['/profile']\">Moje konto</a></div>\n                        <div><a [routerLink]=\"['/products/drones']\">Drony</a></div>\n                        <div><a [routerLink]=\"['/products/laptops']\">Laptopy</a></div>\n                        <div><a [routerLink]=\"['/products/smartphones']\">Smartfony</a></div>\n                    </div>\n                </div>\n            </div>\n    </ng-container>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RegisterData } from '../model/registerData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http:HttpClient) { }\n\n  // ---> localhost\n  // checkEmail(email:string){\n  //   return this.http.post<boolean>(\"http://localhost:8090/account/check-email\", email)\n  // }\n\n  // ----> remote\n  // checkEmail(email:string){\n  //   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/account/check-email\", email)\n  // }\n\n  // ----> remote aws\n  checkEmail(email:string){\n    return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/account/check-email\", email)\n  }\n\n  // ---> localhost\n  // saveAccount(account:RegisterData){\n  //   return this.http.post<boolean>(\"http://localhost:8090/account/save\", account)\n  // }\n\n  // ----> remote\n  // saveAccount(account:RegisterData){\n  //   return this.http.post<boolean>(\"https://x-tom-auth.herokuapp.com/account/save\", account)\n  // }\n\n  // ----> remote aws\n  saveAccount(account:RegisterData){\n    return this.http.post<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/account/save\", account)\n  }\n\n  // ---> localhost\n  // confirmAccount(code:string, email:string){\n  //   return this.http.get<boolean>(\"http://localhost:8090/account/confirmation\",{\n  //     params:{\n  //       code:code,\n  //       email:email\n  //     }\n  //   })\n  // }\n\n  // ----> remote\n  // confirmAccount(code:string, email:string){\n  //   return this.http.get<boolean>(\"https://x-tom-auth.herokuapp.com/account/confirmation\",{\n  //     params:{\n  //       code:code,\n  //       email:email\n  //     }\n  //   })\n  // }\n\n    // ----> remote aws\n    confirmAccount(code:string, email:string){\n      return this.http.get<boolean>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/account/confirmation\",{\n        params:{\n          code:code,\n          email:email\n        }\n      })\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, ValidatorFn, FormControl, FormGroup } from '@angular/forms';\nimport { RegisterService } from '../register.service';\nimport { RegisterData } from 'src/app/model/registerData';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, private registerService:RegisterService) { }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n  \n  error\n  validEmail:boolean = false\n  validPass:boolean = false\n  checkedEmail:boolean = false\n  emailExists:boolean = false\n  registerConfirm: boolean = false\n\n  account:RegisterData = {\n    account_confirmation_email: '',\n    account_confirmation_password: '',\n  }\n\n\n  emailForm = this.fb.group({\n    user_email: this.fb.control('',[\n      Validators.required,\n      Validators.email\n    ]),\n  })\n\n  passwordForm = this.fb.group({\n    user_password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    user_repeat_password: this.fb.control(''),\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.user_password !== values.user_repeat_password){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n  \n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n  \ncheckEmail(){\n  if(this.emailForm.valid){\n    this.validEmail = false;\n    var email = this.emailForm.get('user_email').value\n\n    this.registerService.checkEmail(email).subscribe(response =>{\n      if(response){\n        this.emailExists = false\n        this.checkedEmail = true\n        \n      }else{\n        this.emailExists = true\n      }\n    })\n  }else{\n    this.validEmail = true;\n  }  \n}\n\nsaveAccount(){\n\n  if(this.passwordForm.valid){\n    this.validPass = false\n    \n    this.account.account_confirmation_email = this.emailForm.get('user_email').value\n    this.account.account_confirmation_password = this.passwordForm.get('user_password').value\n\n    this.registerService.saveAccount(this.account).subscribe(response =>{\n        if(response){\n            this.registerConfirm = true\n        }else{\n\n        }\n    })\n  }else{\n    this.validPass = true\n  }\n}\n\n}\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <h3>Rejestracja</h3>\n\n                <ng-container *ngIf=\"!checkedEmail\">\n                    <div class=\"form\">\n                        <form [formGroup]=\"emailForm\" (submit)=\"checkEmail()\">\n                            <ng-container *ngIf=\"validEmail\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                    Musisz poprawnie wypełnić formularz.\n                                  </div>\n                            </ng-container>\n                \n                            <ng-container *ngIf=\"emailExists\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                    Podany email jest zajęty.\n                                  </div>\n                            </ng-container>\n                    \n                                <div class=\"form-group\">\n                                    <label class=\"label-input100\" for=\"Email\">Podaj Email</label>\n                                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"user_email\">\n                                    <validation-feedback [control]=\"emailForm.get('user_email')\"></validation-feedback>\n                                </div>\n                                \n                                <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"Dalej\">\n                    \n                        </form>\n                    </div>\n                </ng-container>\n                \n                \n                <ng-container *ngIf=\"checkedEmail\">\n                \n                    <ng-container *ngIf=\"!registerConfirm\">\n                        <div class=\"form\">\n                            <form [formGroup]=\"passwordForm\" (submit)=\"saveAccount()\">\n                                <ng-container *ngIf=\"validPass\">\n                                    <div class=\"alert alert-danger\" role=\"alert\">\n                                        Musisz poprawnie wypełnić formularz.\n                                      </div>\n                                </ng-container>\n                                     \n                                    <div class=\"form-group\">\n                                        <label for=\"Password\">Hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"user_password\">\n                                        <validation-feedback [control]=\"passwordForm.get('user_password')\"></validation-feedback>\n                                    </div>\n                            \n                                    <div class=\"form-group\">\n                                        <label for=\"Password2\">Powtórz hasło</label>\n                                        <input type=\"password\" class=\"form-control\" formControlName=\"user_repeat_password\">\n                                        <validation-feedback [control]=\"passwordForm\" ></validation-feedback>\n                                    </div>\n                            \n                                    <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"załóż konto\">\n                        \n                            </form>\n                        </div>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"registerConfirm\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Na podany adres email. Wysłalismy link w celu weryfikacji konta. Link ważny 10min\n                          </div>\n                    </ng-container>\n                \n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <h3>Rejstracja</h3>\n\n<ng-container *ngIf=\"!checkedEmail\">\n    <div class=\"form\">\n        <form [formGroup]=\"emailForm\" (submit)=\"checkEmail()\">\n            <ng-container *ngIf=\"validEmail\">\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    Musisz poprawnie wypełnić formularz.\n                  </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"emailExists\">\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    Podany email jest zajęty.\n                  </div>\n            </ng-container>\n    \n                <div class=\"form-group\">\n                    <label class=\"label-input100\" for=\"Email\">Podaj Email</label>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"user_email\">\n                    <validation-feedback [control]=\"emailForm.get('user_email')\"></validation-feedback>\n                </div>\n                \n                <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"dalej\">\n    \n        </form>\n    </div>\n</ng-container>\n\n\n<ng-container *ngIf=\"checkedEmail\">\n\n    <ng-container *ngIf=\"!registerConfirm\">\n        <div class=\"form\">\n            <form [formGroup]=\"passwordForm\" (submit)=\"saveAccount()\">\n                <ng-container *ngIf=\"validPass\">\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        Musisz poprawnie wypełnić formularz.\n                      </div>\n                </ng-container>\n                     \n                    <div class=\"form-group\">\n                        <label for=\"Password\">Hasło</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"user_password\">\n                        <validation-feedback [control]=\"passwordForm.get('user_password')\"></validation-feedback>\n                    </div>\n            \n                    <div class=\"form-group\">\n                        <label for=\"Password2\">Powtórz hasło</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"user_repeat_password\">\n                        <validation-feedback [control]=\"passwordForm\" ></validation-feedback>\n                    </div>\n            \n                    <input type=\"submit\" class=\"btn btn-success input100-submit\" value=\"załóż konto\">\n        \n            </form>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"registerConfirm\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Na podany adres email. Wysłalismy link w celu weryfikacji konta. Link ważny 10min\n          </div>\n    </ng-container>\n\n</ng-container> -->\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-remind-password',\n  templateUrl: './remind-password.component.html',\n  styleUrls: ['./remind-password.component.css']\n})\nexport class RemindPasswordComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  valid:boolean = false;\n  sent:boolean = false;\n  \n  remindPasswordForm = this.fb.group({    \n    email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]), \n\n  })\n\n  resetPassword(){\n\n    if(this.remindPasswordForm.valid){\n      this.valid = false\n      this.sent = true\n      this.auth.passwordResetVerifyUser(this.remindPasswordForm.get('email').value).subscribe()\n    }else{\n      this.valid = true\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"!sent\">\n\n                    <ng-container *ngIf=\"valid\">\n                        <div class=\"alert alert-danger\" role=\"alert\">\n                        Wypełnij poprawnie wszystkie pola\n                        </div>\n                    </ng-container>\n                \n                    <form [formGroup]=\"remindPasswordForm\" (submit)=\"resetPassword()\">\n                        <h4>Resetuj hasło</h4>\n                \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Email</label>\n                \n                            <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n                \n                            <div class=\"validation-feedback\" *ngIf=\"remindPasswordForm.get('email').touched || remindPasswordForm.get('email').dirty\">\n                    \n                                <div *ngIf=\"remindPasswordForm.get('email').hasError('required')\">\n                                    Pole jest wymagane\n                                </div>\n                \n                                <div *ngIf=\"remindPasswordForm.get('email').hasError('email')\">\n                                    Niepoprawny email\n                                </div>\n                \n                            </div>\n                \n                        </div>\n                \n                        <input type=\"submit\" value=\"zresetuj hasło\" class=\"btn btn-danger\">\n                    </form>\n                </ng-container>\n                            \n                \n                <ng-container *ngIf=\"sent\">\n                    <div class=\"alert alert-success msg\" role=\"alert\">\n                        <h4>Jeśli podany użytkownik istnieje. Otrzyma link do resetu hasła.</h4>\n                        <p>Sprawdź swoją pocztę :)</p>\n                        <p>Link po <strong>10 minutach</strong> wygasa</p>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, ValidatorFn, FormControl } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { PasswrodResetData } from 'src/app/model/passwordResetData';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  \n  constructor(private fb:FormBuilder, public auth:AuthService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.route.queryParams.subscribe(param =>{\n      this.passwordResetData.email = param['user']\n      this.passwordResetData.code = param['code']\n      \n    })\n\n    this.auth.passwordResetCheckCode(this.passwordResetData).subscribe(response =>{\n      this.linkIsCorrect = response\n    });\n      \n  }\n\n  linkIsCorrect:boolean\n  saveNewPassword:boolean = false\n  valid:boolean = false\n  \n  passwordResetData:PasswrodResetData = {\n    email: \"\",\n    code: \"\",\n    password: '',\n  }\n\n  resetPasswordForm = this.fb.group({\n    password: this.fb.control('',[\n      Validators.required,\n      Validators.minLength(6),\n      this.validatePassword({\n        lowercase:true,\n        uppercase:true,\n        number:true,\n        special:true\n      })\n    ]),\n    password_repeat: this.fb.control(''),\n  }, {\n    validator: (control:FormGroup) =>{\n       const values = control.value\n\n      if(values.password !== values.password_repeat){\n        return {\n          password_match:true\n        }\n      }\n\n      return null\n    }\n  })\n\n\n\n  validatePassword(options:{\n    uppercase?:boolean;\n    lowercase?:boolean;\n    number?:boolean;\n    special?:boolean;\n  }):ValidatorFn{\n    \n    return (control: FormControl) =>{\n\n      const hasUppercase = control.value.match(/[A-Z]/)\n      const hasLowercase = control.value.match(/[a-z]/)\n      const hasNumber = control.value.match(/[\\d]/)\n      const hasSpecial = control.value.match(/[\\W]/)\n      \n      const errors = {}\n      let valid = true\n\n      if(options.uppercase && !hasUppercase){\n        errors['uppercase'] = true\n        valid = false\n      }\n      if(options.lowercase && !hasLowercase){\n        errors['lowercase'] = true\n        valid = false\n      }\n      if(options.number && !hasNumber){\n        errors['number'] = true\n        valid = false\n      }\n      if(options.special && !hasSpecial){\n        errors['special'] = true\n        valid = false\n      }\n\n      return valid? null : {\n        'password': errors\n      }\n    }\n\n  }\n\n  resetPassword(){\n\n    if(this.resetPasswordForm.valid){\n      this.valid = false\n      \n      this.passwordResetData.password = this.resetPasswordForm.get('password').value\n\n      this.auth.passwordResetSetNew(this.passwordResetData).subscribe(response =>{\n        this.saveNewPassword = response\n      })\n      \n    }else{\n      this.valid = true\n    }\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wrap\">\n                <h4>Reset hasła</h4>\n\n                <ng-container *ngIf=\"saveNewPassword\">\n                    <div class=\"alert alert-success\" role=\"alert\">\n                        Hasło zostało zmienione<br>\n                        <a class=\"btn btn-secondary\" [routerLink]=\"['/logowanie']\">Zaloguj</a>  \n                      </div>\n                      \n                </ng-container>\n                \n                <ng-container *ngIf=\"linkIsCorrect && !saveNewPassword\">\n                    <div class=\"form\">\n                        <form [formGroup]=\"resetPasswordForm\" (submit)=\"resetPassword()\">\n                            <ng-container *ngIf=\"valid\">\n                                <div class=\"alert alert-danger\" role=\"alert\">\n                                     Wypełnij poprawnie wszystkie pola\n                                </div>\n                            </ng-container>\n                        \n                \n                            <div class=\"form-group\">\n                                <label for=\"Password\">Hasło</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"password\">\n                                <validation-feedback [control]=\"resetPasswordForm.get('password')\"></validation-feedback>\n                \n                            </div>\n                \n                            <div class=\"form-group\">\n                                <label for=\"Password2\">Powtórz hasło</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"password_repeat\">\n                                <validation-feedback [control]=\"resetPasswordForm\" ></validation-feedback>\n                            </div>\n                \n                    \n                            <input type=\"submit\" class=\"btn btn-danger input100-submit\" value=\"wyślij\">\n                        </form>\n                    </div>\n                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!linkIsCorrect\">\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        Link wygasł :( Spróbuj ponownie :)\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCodeEncryptService {\n\n  constructor() { }\n  \n  encryptCode(id:number) {\n  var idStr:string = \"\"+id\n  var idLength = idStr.length\n  var secretNumberIndex:number = 4\n  let tableLength = 35\n  let table = []\n  var code:String = \"\"\n\n    for(var i = 0; i < tableLength; i++ ){\n\n      if(i == secretNumberIndex){\n        table.push(idLength)\n        table.push((Math.floor((Math.random()* 9) +1)))\n        for(var j = 0; j < idLength; j++){\n            table.push(+idStr[j])\n        }\n       }\n      table.push(Math.floor((Math.random()* 9) +1))\n    }\n\n    for(var i = 0; i < table.length; i++){\n        code += \"\"+table[i]\n    }\n\n    return code\n  }\n\n  decryptCode(code:String){    \n    var codDez:String = code\n    var tabdez= []\n\n    for(var i = 0; i < codDez.length; i++){\n        tabdez.push(+codDez[i])\n    }\n\n    var secretNumber:number = tabdez[4] \n    var idStrDez:string = ''\n\n    for(var i = 6; i <= 6+secretNumber-1; i++){\n      idStrDez += ''+tabdez[i]\n    }\n\n    return +idStrDez;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxDroneRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxDroneComponent } from './box-drone/box-drone.component';\nimport { BoxDroneRoutingModule } from './box-drone-routing.module';\n\n\n\n\n@NgModule({\n  declarations: [BoxDroneComponent],\n  imports: [\n    CommonModule,\n    BoxDroneRoutingModule\n  ],\n  exports: [BoxDroneComponent]\n})\nexport class BoxDroneModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'box-drone',\n  templateUrl: './box-drone.component.html',\n  styleUrls: ['./box-drone.component.css']\n})\nexport class BoxDroneComponent implements OnInit {\n\n  constructor(private productsService:ProductsService) { }\n\n  ngOnInit(): void {\n\n    this.productsService.getByType(\"drone\").subscribe(response=>{\n\n      for(var i = 0; i <= 3; i++ ){\n        if(i == 0){\n          this.item1 = response[i]\n        }\n\n        if(i == 1){\n          this.item2 = response[i]\n        }\n\n        if(i == 2){\n          this.item3 = response[i]\n        }\n\n        if(i == 3){\n          this.item4 = response[i]\n        }\n      }\n\n    })\n\n    \n  }\n\n  item1:ProductTest\n  item2:ProductTest\n  item3:ProductTest\n  item4:ProductTest\n\n}\n","<ng-container *ngIf=\"item1\">\n    <div class=\"container-fluid\">\n        <div class=\"drone-wraper\">\n            <h4>Drony</h4>\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <a [routerLink]=\"['/product', item1.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item1.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item1.product_description}}</div>\n                            <div class=\"price\">{{item1.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item2\">\n                <a [routerLink]=\"['/product', item2.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item2.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item2.product_description}}</div>\n                            <div class=\"price\">{{item2.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item3\">\n                <a [routerLink]=\"['/product', item3.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item3.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item3.product_description}}</div>\n                            <div class=\"price\">{{item3.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n            <div class=\"col-md-3 item4\">\n                <a [routerLink]=\"['/product', item4.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img src=\"../../../assets/img/promotion/{{item4.product_mark}}-drone-221-221.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{item4.product_description}}</div>\n                            <div class=\"price\">{{item4.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n        <div class=\"link\">\n            <a [routerLink]=\"['/products/drones']\">więcej...</a>\n        </div>\n        </div>\n    </div>\n\n\n</ng-container>\n    \n    \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\nexport class BoxFooterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxFooterRoutingModule } from './box-footer-routing.module';\nimport { BoxFooterComponent } from './box-footer/box-footer.component';\n\n\n\n@NgModule({\n  declarations: [BoxFooterComponent],\n  imports: [\n    CommonModule,\n    BoxFooterRoutingModule\n  ],\n  exports: [BoxFooterComponent]\n})\nexport class BoxFooterModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'box-footer',\n  templateUrl: './box-footer.component.html',\n  styleUrls: ['./box-footer.component.css']\n})\nexport class BoxFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row wraper\">\n        <div class=\"col-sm-4\">\n            &copy; x-tom 2020\n        </div>\n        <div class=\"col-sm-8\">\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/inpost.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/dotpay.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/mastercard.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/ups.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/pko.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/visa.png\" class=\"img-footer\" alt=\"\"></span>\n            <span class=\"img-wr\"> <img src=\"../../../assets/img/footer/santander.png\" class=\"img-footer\" alt=\"\"></span>\n        </div>\n    </div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxLastProductRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxLastProductComponent } from './box-last-product/box-last-product.component';\nimport { BoxLastProductRoutingModule } from './box-last-product-routing.module';\n\n\n\n@NgModule({\n  declarations: [BoxLastProductComponent],\n  imports: [\n    CommonModule,\n    BoxLastProductRoutingModule\n  ],\n  exports: [BoxLastProductComponent]\n})\nexport class BoxLastProductModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'box-last-product',\n  templateUrl: './box-last-product.component.html',\n  styleUrls: ['./box-last-product.component.css']\n})\nexport class BoxLastProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.getLastProducts()\n\n  }\n\n  lastProductList:ProductTest[] = []\n  empty:boolean = false;\n\n  getLastProducts(){\n    var lastProduct:ProductTest[] = []\n    lastProduct = JSON.parse(localStorage.getItem('lastProduct'))\n\n    if( lastProduct == null || lastProduct.length == 0){\n      this.empty = true\n    }else{\n      this.lastProductList = lastProduct\n    }\n    \n\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"last-product-wraper\">\n        <h4>Ostatnio oglądane</h4>\n        <div class=\"row\">\n            <ng-container *ngIf=\"empty\">\n                Brak ostatnio przeglądanych produktów\n            </ng-container>\n            <div class=\"col-lg-2 item\" *ngFor=\"let p of lastProductList\">\n                <a [routerLink]=\"['/product', p.product_id]\">\n                    <div class=\"wraper\">\n                        <div class=\"img\">\n                            <img  src=\"../../../assets/img/last-watched/{{p.product_mark}}-{{p.product_type}}-127-106.jpg\">\n                        </div>\n                        <div class=\"content\">\n                            <div class=\"description\">{{p.product_description}}</div>\n                            <div class=\"price\">{{p.product_price}} zł</div>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxMobileComponent } from './box-mobile/box-mobile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {MatSnackBarModule} from '@angular/material/snack-bar'\n\n\n@NgModule({\n  declarations: [BoxMobileComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n  ],\n  exports: [\n    BoxMobileComponent\n  ]\n})\nexport class BoxMobileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'box-mobile',\n  templateUrl: './box-mobile.component.html',\n  styleUrls: ['./box-mobile.component.css']\n})\nexport class BoxMobileComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, private snackbar:MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  durationInSeconds = 5;\n\n  newsletterForm = this.fb.group({\n    email: this.fb.control('', [\n    Validators.required,\n    Validators.email\n    ]),\n  })\n\n  send(){\n\n    var msg = \"\"\n\n    if(this.newsletterForm.valid){\n      msg = \"Twój e-mail został zapisany.\"\n    }else{\n      msg = \"Wypełnij poprawnie formularz!!!\"\n    }\n\n    console.log(\"wysłano\")\n    this.snackbar.open(msg,'',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n\n\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <div class=\"newsletter\">\n                <div class=\"row\">\n                    <div class=\"col-sm-7\">\n                        <h4>Newsletter</h4>\n                        <p>Nie przegap żadnej promocji,</p>\n                        <p>zdobywaj dodatkowe rabaty.</p>\n                        <div class=\"form-box\">\n                            <form [formGroup]=\"newsletterForm\" (submit)=\"send()\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Twój e-mail\" formControlName=\"email\">\n                                <input type=\"submit\" value=\"Zapisz się\" class=\"btn btn-primary mx-auto\"> \n                            </form>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-5 img\">\n                        <img src=\"../../../assets/img/box/newsletter.png\" style=\"width: 80%; height: auto;\">\n                    </div>\n                </div>\n                \n            </div>\n\n        </div>\n        <div class=\"col-lg-6\">\n            <div class=\"mobile-app\">\n                <div class=\"row\">\n                    <div class=\"col-sm-7\">\n                        <h4>Aplikacja Mobilna</h4>\n                        <p>Pracujemy nad nią,</p>\n                        <p>wkrótce będzie dostępna.</p>\n                        <div class=\"img-box\">\n                            <span><img src=\"../../../assets/img/box/app-store.svg\"></span>\n                            <span><img src=\"../../../assets/img/box/android.svg\"></span>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-5 img\">\n                        <img src=\"../../../assets/img/box/mobile-box.png\" style=\"width: 80%; height: auto;\">\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"contact-wraper\">\n                <div class=\"row\">\n                    <div class=\"col-lg-3\">\n                        <h4>Kontakt</h4>\n                        <p>Proszę o kontakt,</p>\n                        <p>może spotkamy się na rozmowie...</p>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <div class=\"phone\">\n                            <span class=\"material-icons\">call</span><a href=\"tel:880294863\">880-294-863</a> \n                        </div>\n                        <div class=\"email\">\n                            <span class=\"material-icons\">markunread</span><a href=\"mailto:tom.ociepa@gmail.com\">tom.ociepa@gmail.com</a> \n                        </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                        <p>Odwiedź mnie na</p>\n                        <div class=\"contact-img-wraper\">\n                            <a href=\"https://www.linkedin.com/in/tomasz-ociepa/\">\n                                <img class=\"contact-img\" src=\"../../../assets/img/box/linkedin.png\"> \n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class BoxSpecialRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BoxSpecialRoutingModule } from './box-special-routing.module';\nimport { BoxSpecialComponent } from './box-special/box-special.component';\n\n\n@NgModule({\n  declarations: [BoxSpecialComponent],\n  imports: [\n    CommonModule,\n    BoxSpecialRoutingModule\n  ],\n  exports: [\n    BoxSpecialComponent\n  ]\n})\nexport class BoxSpecialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'box-special',\n  templateUrl: './box-special.component.html',\n  styleUrls: ['./box-special.component.css']\n})\nexport class BoxSpecialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h4>Wybraliśmy dla Ciebie</h4>\n                <a [routerLink]=\"['/product', 4]\">\n                    <div class=\"img\">\n                        <img src=\"../../../assets/img/product-full/nokia-smartphone-517-433.jpg\">\n                    </div>\n                    <div class=\"content\">\n                        <div class=\"desc\">Nokia 32GB RAM</div>\n                        <div class=\"price\">2345 zł</div>\n                    </div>\n                </a>\n\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"spec-wrap\">\n                    <div class=\"logo\">\n                        <a [routerLink]=\"['/product', 4]\">\n                            <img src=\"../../../assets/img/logo/nokia-logo.png\">\n                        </a>\n                    </div>\n                    <div class=\"header\">\n                        <h5>Specyfikacja</h5>\n                        <a [routerLink]=\"['/product', 4]\">\n                            <table class=\"table table-striped\">\n                                <tbody>\n                                  <tr>\n                                    <td>System</td>\n                                    <td>Android</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Przeątna ekranu</td>\n                                    <td>4.7\"</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Kamera</td>\n                                    <td>20 Mpix</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>126 GB</td>\n                                  </tr>\n                                  <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>32 GB</td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                        </a>\n                    </div>                    \n                </div>\n            </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\nimport { CartService } from './cart.service';\nimport { CartItemLocalStorage } from '../model/cartItemLocalStorage';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(public auth:AuthService, private cartService:CartService ,private fb:FormBuilder) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    if(localStorage.getItem('products') == null){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))  \n    }\n    \n    if(this.auth.isAuthenticated){\n      this.getMyCartWithDatabase()\n    }else{\n      this.cartLocalItemList = JSON.parse(localStorage.getItem('products'))\n    }\n    \n    this.checkCartIsEmpty()\n    this.calculatePrice()\n    this.setOrderItem()\n  }\n  \n  selectProductForm = this.fb.group({    \n    product_type: this.fb.control(''), \n  })\n\n  cartLocalItemList:CartItemLocalStorage[] = []\n\n  statusError:number\n  cartSum:number\n  isEmpty:boolean\n  error: boolean\n  pathOrder:boolean = false\n  \n  @Input(\"setPathOrder\")\n  set path(path:boolean){\n    this.pathOrder = path\n  }\n  \n  @Output('setOrderItem')\n  emiterSetItem = new EventEmitter()\n  \n  setOrderItem(){\n    this.emiterSetItem.emit(this.cartLocalItemList)\n  }\n\n  checkCartIsEmpty(){\n    if(this.cartLocalItemList.length > 0){\n      this.isEmpty = false\n    }else if(this.cartLocalItemList.length == 0){\n      this.isEmpty = true\n    }\n  }\n\n  calculatePrice(){\n    var sum:number = 0\n    this.cartLocalItemList.forEach((i)=>{\n      sum += (i.product.product_price * i.order_item_amount)\n    })\n    this.cartSum = sum\n  }\n\n  deleteCartItemInLocalStorage(id){\n    delete this.cartLocalItemList[id]\n    var newFavorit =[]\n    this.cartLocalItemList.forEach((index)=>{\n      if(id !== index){\n          newFavorit.push(index)\n      }\n    })\n    this.cartLocalItemList = newFavorit\n    if(!this.auth.isAuthenticated){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }\n    \n    this.calculatePrice()\n    this.checkCartIsEmpty()\n  }\n\n  removeCartInLocalStorage(){\n    this.cartLocalItemList = []\n    localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    this.checkCartIsEmpty()\n  }\n\n  getMyCartWithDatabase(){\n    \n    if(this.auth.getCurrentUser()){\n      this.cartService.getMyCartItems(this.auth.getCurrentUser().user_id).subscribe(\n\n        response =>{\n          \n            response.forEach((item)=>{\n              this.cartLocalItemList.push(item)    \n            })\n  \n            this.cartLocalItemList.forEach((i)=>{\n            })\n            this.checkCartIsEmpty()\n            this.calculatePrice()\n            \n        }\n        // ,error =>{\n        //   if(error instanceof HttpErrorResponse){\n        //     this.statusError = error.status\n            \n        //   }\n        // } \n      )\n    }    \n\n  }\n\n  deleteCartItemInDatabase(idInDatabase, idInList){\n    this.cartService.deleteMyCartItem(idInDatabase).subscribe(()=>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n      })\n\n      this. deleteCartItemInLocalStorage(idInList)\n  }\n\n  removeCartInDatabase(){\n    this.cartService.deleteMyCart(this.auth.getCurrentUser().user_id).subscribe(()=>{\n    },err=>{\n      this.error = err.message\n    })\n    this.cartLocalItemList = []\n    this.checkCartIsEmpty()\n  }\n\n}\n","<error-handler [errorHandler]=\"statusError\"></error-handler>\n\n<div class=\"container-fluid\">\n  <ng-container *ngIf=\"isEmpty\">\n    <h2>Koszyk jest pusty</h2>\n  </ng-container>\n\n  <ng-container *ngIf=\"!isEmpty\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        \n        <table>\n          <tbody>\n              <tr>\n                <td><h4> Koszyk</h4></td>\n                <td>\n                  <ng-container *ngIf=\"!pathOrder\">\n                    <ng-container *ngIf=\"auth.isAuthenticated\">\n                      <a (click)=\"removeCartInDatabase()\"><span class=\"material-icons\">delete_forever</span> <span>Wyczyść koszyk</span></a>\n                    </ng-container>\n                    <ng-container *ngIf=\"!auth.isAuthenticated\">\n                      <a (click)=\"removeCartInLocalStorage()\"><span class=\"material-icons\">delete_forever</span> <span>Wyczyść koszyk</span></a>\n                    </ng-container>\n                  </ng-container>\n                  \n                </td>\n              </tr>\n              <tr *ngFor=\"let cartItem of cartLocalItemList let i = index;\">\n                  <td>\n                    <a [routerLink]=\"['/product', cartItem.product.product_id]\">\n                      <img src=\"../../assets/img/last-watched/{{cartItem.product.product_mark}}-{{cartItem.product.product_type}}-127-106.jpg\">\n                        {{cartItem.product.product_description}}\n                    </a>\n                  </td>\n                  <td>\n                    {{cartItem.product.product_price}} zł \n                    <span>{{cartItem.order_item_amount}}szt.</span>\n                    <ng-container *ngIf=\"!pathOrder\">\n                      <ng-container *ngIf=\"!auth.isAuthenticated\">\n                        <a class=\"delete-item\" (click)=\"deleteCartItemInLocalStorage(i)\"><span class=\"material-icons\">delete</span></a>\n                      </ng-container>\n              \n                      <ng-container *ngIf=\"auth.isAuthenticated\">\n                        <a class=\"delete-item\" (click)=\"deleteCartItemInDatabase(cartItem.cart_id, i)\"><span class=\"material-icons\">delete</span></a>\n                      </ng-container>\n                    </ng-container>\n                  </td>\n              </tr>\n              <tr>\n                  <td>\n                    <div class=\"sum\">\n                      Łączna kwota <span>{{cartSum}} zł</span>\n                    </div>\n                    <div class=\"or-btn\">\n                      <ng-container *ngIf=\"!pathOrder\">\n                        <ng-container *ngIf=\"auth.isAuthenticated\">\n                          <button [routerLink]=\"['/zamowienie']\" class=\"btn btn-success\">\n                            Przejdź do dostawy\n                          </button>\n                        </ng-container>\n                    \n                        <ng-container *ngIf=\"!auth.isAuthenticated\">\n                          <button [routerLink]=\"['/logowanie', 1]\" class=\"btn btn-success\">\n                            Przejdź do dostawy\n                          </button>\n                        </ng-container>\n                      </ng-container>\n                    </div>\n                  </td>\n              </tr>\n          </tbody>\n        </table>\n      </div>\n  </div>\n  </ng-container>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartComponent } from './cart.component';\nimport { CartRoutingModule } from './cart.routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorModule } from '../error/error.module';\n\n@NgModule({\n  declarations: [CartComponent],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    ErrorModule,\n    CartRoutingModule,\n  ],\n  exports:[\n    CartComponent\n  ]\n})\nexport class CartModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CartComponent } from './cart.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'koszyk',\n    component: CartComponent\n  },\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\nexport class CartRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CartItemUser } from '../model/cartItemUser';\nimport { CartItemLocalStorage } from '../model/cartItemLocalStorage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private http: HttpClient) { }\n\n  // ---> localhost\n  // getMyCartItems(id:number){\n  //   return this.http.get<CartItemLocalStorage[]>(\"http://localhost:8080/cart/\"+id)\n  // }\n\n  // ----> remote\n  // getMyCartItems(id:number){\n  //   return this.http.get<CartItemLocalStorage[]>(\"https://x-tom-api.herokuapp.com/cart/\"+id)\n  // }\n\n    // ----> remote aws\n    getMyCartItems(id:number){\n      return this.http.get<CartItemLocalStorage[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/cart/\"+id)\n    }\n\n  // ---> localhost\n  // setMyCartItem(cartItem:Partial<CartItemUser>){\n  //   return this.http.post<CartItemUser>(\"http://localhost:8080/cart/create\", cartItem)\n  // }\n\n  // ----> remote\n  // setMyCartItem(cartItem:Partial<CartItemUser>){\n  //   return this.http.post<CartItemUser>(\"https://x-tom-api.herokuapp.com/cart/create\", cartItem)\n  // }\n\n// ----> remote aws\nsetMyCartItem(cartItem:Partial<CartItemUser>){\n  return this.http.post<CartItemUser>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/cart/create\", cartItem)\n}\n\n  // ---> localhost\n  // deleteMyCartItem(id:number){\n  //   return this.http.delete(\"http://localhost:8080/cart/\"+id)\n  // }\n\n  // ----> remote\n  // deleteMyCartItem(id:number){\n  //   return this.http.delete(\"https://x-tom-api.herokuapp.com/cart/\"+id)\n  // }\n\n  // ----> remote aws\n  deleteMyCartItem(id:number){\n    return this.http.delete(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/cart/\"+id)\n  }\n\n  // ---> localhost\n  // deleteMyCart(id:number){\n  //   return this.http.delete(\"http://localhost:8080/cart/clear/\"+id)\n  // }\n\n  // ----> remote\n  // deleteMyCart(id:number){\n  //   return this.http.delete(\"https://x-tom-api.herokuapp.com/cart/clear/\"+id)\n  // }\n\n// ----> remote aws\ndeleteMyCart(id:number){\n  return this.http.delete(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/cart/clear/\"+id)\n}\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'error-handler',\n  templateUrl: './error-handler.component.html',\n  styleUrls: ['./error-handler.component.css']\n})\n\nexport class ErrorHandlerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {}\n\n  @Input()\n  errorHandler\n\n\n}\n","<ng-container *ngIf=\"errorHandler === 0\">\n    <h4>Brak połączenia z serwerem</h4>\n    <p>Mamy chwilowy problem. Wróć za kilka minut</p>\n</ng-container>\n\n<ng-container *ngIf=\"errorHandler === 404\">\n    <h4>Not found 404</h4>\n    <p>Produkt jest niedostępny lub wycofany z naszej sprzedaży.</p>\n</ng-container>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorHandlerComponent } from './error-handler/error-handler.component';\n\n\n\n@NgModule({\n  declarations: [ErrorHandlerComponent,],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ErrorHandlerComponent\n  ],\n})\nexport class ErrorModule { }\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'drone-form',\n  templateUrl: './drone-form.component.html',\n  styleUrls: ['./drone-form.component.css']\n})\nexport class DroneFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  product\n  productType = \"drones\"\n  updateProduct:ProductTest\n  saved:boolean = false\n  valid:boolean = false\n\n  productForm = this.fb.group({    \n    \n    product_type: this.fb.control('drone'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_status: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_description: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(20)\n    ]), \n    product_processor: this.fb.control('brak'), \n    product_system: this.fb.control('brak'), \n    product_camera: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_disc_type: this.fb.control('brak'), \n    product_graphics_card: this.fb.control('brak'), \n    product_price: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_ram_size: this.fb.control('0'), \n    product_disc_size: this.fb.control('0'), \n    product_screen_diagonal: this.fb.control('0'), \n    product_amount_available: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_camera_resolution: this.fb.control('0'), \n    product_time_work: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_range: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]),\n  })\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n      this.valid = false\n      this.updateProduct = this.productForm.value\n      this.emiterSaveProduct.emit(this.updateProduct)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n\n  }\n  \n}\n","<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                Zapisano!!!\n              </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wszystkie pola\n              </div>\n        </ng-container>\n\n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\">Producent</label>\n                \n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_mark' formControlName=\"product_mark\">\n                        <option value=\"dji\">DJI</option>\n                        <option value=\"parrot\">Parrot</option>\n                        <option value=\"hubsan\">Hubsan</option>\n                        <option value=\"yuneec\">Yuneec</option>\n                        <option value=\"overmax\">Overmax</option>\n                        <option value=\"syma\">Syma</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"dji\">DJI</option>\n                        <option value=\"parrot\">Parrot</option>\n                        <option value=\"hubsan\">Hubsan</option>\n                        <option value=\"yuneec\">Yuneec</option>\n                        <option value=\"overmax\">Overmax</option>\n                        <option value=\"syma\">Syma</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_price' formControlName=\"product_price\">\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n          \n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_status' formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Time\">Czas pracy</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_time_work' formControlName=\"product_time_work\">\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_time_work\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_time_work')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Range\">Zasięg</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_range' formControlName=\"product_range\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_range\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_range')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Kamera\">Kamera</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"form-control\" [(ngModel)]='product.product_camera' formControlName=\"product_camera\" required>\n                        <option>tak</option>\n                        <option>nie</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"form-control\" formControlName=\"product_camera\">\n                        <option>tak</option>\n                        <option>nie</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_camera')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]='product.product_amount_available' formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf='product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]='product.product_description' formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n\n            </div>\n            \n            <input *ngIf=\"!saved\" value=\"zapisz\" type=\"submit\" class=\"btn btn-success\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n    </div>\n</ng-container>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DroneFormComponent } from './drone-form/drone-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormRoutingModule } from './form.routing.module';\nimport { LaptopFormComponent } from './laptop-form/laptop-form.component';\nimport { SmartphoneFormComponent } from './smartphone-form/smartphone-form.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { UserRoleFormComponent } from './user-role-form/user-role-form.component';\nimport { OrderFormComponent } from './order-form/order-form.component';\nimport { OrderDetailFormComponent } from './order-detail-form/order-detail-form.component';\nimport { OrderAddressFormComponent } from './order-address-form/order-address-form.component';\nimport { ValidationModule } from '../validation/validation.module';\n\n@NgModule({\n  declarations: [DroneFormComponent, LaptopFormComponent, SmartphoneFormComponent, UserFormComponent, UserRoleFormComponent, OrderFormComponent, OrderDetailFormComponent, OrderAddressFormComponent,],\n  imports: [\n    CommonModule,\n    ValidationModule,\n    ReactiveFormsModule,\n    FormRoutingModule,\n  ],\n  exports: [\n    DroneFormComponent, LaptopFormComponent, SmartphoneFormComponent, UserFormComponent, UserRoleFormComponent, OrderFormComponent\n  ]\n})\nexport class FormModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderDetailFormComponent } from './order-detail-form/order-detail-form.component';\nimport { OrderAddressFormComponent } from './order-address-form/order-address-form.component';\n\nconst routes: Routes = [\n  {\n    path: 'edit-order-detail/:order_id',\n    component: OrderDetailFormComponent\n  },\n  {\n    path: 'edit-order-address/:order_id',\n    component: OrderAddressFormComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n})\n\nexport class FormRoutingModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'laptop-form',\n  templateUrl: './laptop-form.component.html',\n  styleUrls: ['./laptop-form.component.css']\n})\nexport class LaptopFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  product\n  productType = \"laptops\"\n  saved:boolean = false\n  valid:boolean = false\n\n  updateProduct:ProductTest\n  productForm = this.fb.group({    \n    product_type: this.fb.control('laptop'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_status: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_description: this.fb.control('', [\n        Validators.required,\n        Validators.minLength(20)\n      ]), \n    product_processor: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_system: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_camera: this.fb.control('brak'), \n    product_disc_type: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_graphics_card: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_price: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_ram_size: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_disc_size: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_screen_diagonal: this.fb.control('', [\n        Validators.required,\n      ]), \n    product_amount_available: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(/^[0-9]+$/),\n      ]), \n    product_camera_resolution: this.fb.control('0'), \n    product_time_work: this.fb.control('0'), \n    product_range: this.fb.control('0'),\n  })\n\n\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n    this.changeProductMarkOnNumber()\n    this.changeProductStatusOnNumber()\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n        this.valid = false\n        this.updateProduct = this.productForm.value\n        this.changeProductMarkOnString()\n        this.changeProductStatusOnString()\n        this.emiterSaveProduct.emit(this.updateProduct)\n        this.saved = true;\n    }else{\n        this.valid = true\n    }\n\n  }\n\n  changeProductMarkOnNumber(){\n    this.product.product_mark\n\n    switch (this.product.product_mark) {\n      case \"lenovo\":\n          console.log(\"lenovo 1\");\n          this.product.product_mark = \"1\"\n          break;\n      case \"hp\":\n          console.log(\"hp 2\");\n          this.product.product_mark = \"2\"\n          break;\n      case \"dell\":\n          console.log(\"dell 3\");\n          this.product.product_mark = \"3\"\n          break;\n      case \"asus\":\n          console.log(\"asus 4\");\n          this.product.product_mark = \"4\"\n          break;\n      case \"acer\":\n          console.log(\"acer 5\");\n          this.product.product_mark = \"5\"\n          break;\n      case \"msi\":\n          console.log(\"msi 6\");\n          this.product.product_mark = \"6\"\n          break;\n      case \"apple\":\n          console.log(\"apple 7\");\n          this.product.product_mark = \"7\"\n          break;\n      case \"huawei\":\n          console.log(\"huawei 8\");\n          this.product.product_mark = \"8\"\n          break;\n      case \"microsoft\":\n          console.log(\"microsoft 9\");\n          this.product.product_mark = \"9\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductMarkOnString(){\n    this.updateProduct.product_mark\n\n    switch (this.updateProduct.product_mark) {\n      case \"1\":\n          console.log(\"lenovo\");\n          this.updateProduct.product_mark = \"lenovo\"\n          break;\n      case \"2\":\n          console.log(\"hp\");\n          this.updateProduct.product_mark = \"hp\"\n          break;\n      case \"3\":\n          console.log(\"dell\");\n          this.updateProduct.product_mark = \"dell\"\n          break;\n      case \"4\":\n          console.log(\"asus\");\n          this.updateProduct.product_mark = \"asus\"\n          break;\n      case \"5\":\n          console.log(\"acer\");\n          this.updateProduct.product_mark = \"acer\"\n          break;\n      case \"6\":\n          console.log(\"msi\");\n          this.updateProduct.product_mark = \"msi\"\n          break;\n      case \"7\":\n          console.log(\"apple\");\n          this.updateProduct.product_mark = \"apple\"\n          break;\n      case \"8\":\n          console.log(\"huawei\");\n          this.updateProduct.product_mark = \"huawei\"\n          break;\n      case \"9\":\n          console.log(\"microsoft\");\n          this.updateProduct.product_mark = \"microsoft\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductStatusOnNumber(){\n    this.product.product_status\n\n    switch (this.product.product_status) {\n      case \"promocja\":\n          console.log(\"promocja 1\");\n          this.product.product_status = \"1\"\n          break;\n      case \"wyprzedaż\":\n          console.log(\"wyprzedaż 2\");\n          this.product.product_status = \"2\"\n          break;\n      case \"nowość\":\n          console.log(\"nowość 3\");\n          this.product.product_status = \"3\"\n          break;\n      case \"polecamy\":\n          console.log(\"polecamy 4\");\n          this.product.product_status = \"4\"\n          break;\n      case \"przedłużona gwarancja\":\n          console.log(\"przedłużona gwarancja 5\");\n          this.product.product_status = \"5\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductStatusOnString(){\n    this.updateProduct.product_status\n\n    switch (this.updateProduct.product_status) {\n      case \"1\":\n          console.log(\"promocja\");\n          this.updateProduct.product_status = \"promocja\"\n          break;\n      case \"2\":\n          console.log(\"wyprzedaż\");\n          this.updateProduct.product_status = \"wyprzedaż\"\n          break;\n      case \"3\":\n          console.log(\"nowość\");\n          this.updateProduct.product_status = \"nowość\"\n          break;\n      case \"4\":\n          console.log(\"polecamy\");\n          this.updateProduct.product_status = \"polecamy\"\n          break;\n      case \"5\":\n          console.log(\"przedłużona gwarancja\");\n          this.updateProduct.product_status = \"przedłużona gwarancja\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_status = \"brak\"\n          break;\n  }\n  }\n\n\n}\n","<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n        <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saved\">\n            Zapisano!!!\n          </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wszystkie pola\n              </div>\n        </ng-container>\n        \n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Name\">Producent</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_mark\" formControlName=\"product_mark\">\n                        <option value=\"1\">Lenovo</option>\n                        <option value=\"2\">HP</option>\n                        <option value=\"3\">Dell</option>\n                        <option value=\"4\">ASUS</option>\n                        <option value=\"5\">ACER</option>\n                        <option value=\"6\">MSI</option>\n                        <option value=\"7\">APPLE</option>\n                        <option value=\"8\">HUAWEI</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"1\">Lenovo</option>\n                        <option value=\"2\">HP</option>\n                        <option value=\"3\">Dell</option>\n                        <option value=\"4\">ASUS</option>\n                        <option value=\"5\">ACER</option>\n                        <option value=\"6\">MSI</option>\n                        <option value=\"7\">APPLE</option>\n                        <option value=\"8\">HUAWEI</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_price\" formControlName=\"product_price\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n\n            </div>\n    \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_status\" formControlName=\"product_status\">\n                        <option value=\"1\">Promocja</option>\n                        <option value=\"2\">Wyprzedaż</option>\n                        <option value=\"3\">Nowość</option>\n                        <option value=\"4\">Polecamy</option>\n                        <option value=\"5\">Przedłużona gwarancja</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_status\">\n                        <option value=\"1\">Promocja</option>\n                        <option value=\"2\">Wyprzedaż</option>\n                        <option value=\"3\">Nowość</option>\n                        <option value=\"4\">Polecamy</option>\n                        <option value=\"5\">Przedłużona gwarancja</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"System\">System operacyjny</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_system\" formControlName=\"product_system\">\n                        <option value=\"windows 10\">Windows 10</option>\n                        <option value=\"macOs\">MacOS</option>\n                        <option value=\"ubuntu\">Ubuntu</option>\n                        <option value=\"brak systemu\">Brak systemu</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_system\">\n                        <option value=\"windows 10\">Windows 10</option>\n                        <option value=\"macOs\">MacOS</option>\n                        <option value=\"ubuntu\">Ubuntu</option>\n                        <option value=\"brak systemu\">Brak systemu</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_system')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Processor\">Processor</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_processor\" formControlName=\"product_processor\">\n                        <option value=\"intel core i3\">Intel Core i3</option>\n                        <option value=\"intel core i5\">Intel Core i5</option>\n                        <option value=\"intel core i7\">Intel Core i7</option>\n                        <option value=\"intel core i9\">Intel Core i9</option>\n                        <option value=\"intel pentium\">Intel Pentium</option>\n                        <option value=\"amd ryzen 5\">AMD Ryzen 5</option>\n                        <option value=\"amd ryzen 7\">AMD Ryzen 7</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_processor\">\n                        <option value=\"intel core i3\">Intel Core i3</option>\n                        <option value=\"intel core i5\">Intel Core i5</option>\n                        <option value=\"intel core i7\">Intel Core i7</option>\n                        <option value=\"intel core i9\">Intel Core i9</option>\n                        <option value=\"intel pentium\">Intel Pentium</option>\n                        <option value=\"amd ryzen 5\">AMD Ryzen 5</option>\n                        <option value=\"amd ryzen 7\">AMD Ryzen 7</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_processor')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Ram\">Pamięć RAM</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_ram_size\" formControlName=\"product_ram_size\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_ram_size\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_ram_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskType\">Rodzaj dysku</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_disc_type\" formControlName=\"product_disc_type\">\n                        <option value=\"ssd\">SSD</option>\n                        <option value=\"hdd\">HDD</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_disc_type\">\n                        <option value=\"ssd\">SSD</option>\n                        <option value=\"hdd\">HDD</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_type')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskSize\">Rozmiar dysku</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_disc_size\" formControlName=\"product_disc_size\">\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_disc_size\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"GraphicsCard\">Karta graficzna</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_graphics_card\" formControlName=\"product_graphics_card\">\n                        <option value=\"zintegrowana intel\">Zintegrowana Intel</option>\n                        <option value=\"dedykowana nvidia geforce\">DEDYKOWANA NVIDIA Geforce</option>\n                        <option value=\"zintegrowana amd\">Zintegrowana AMD</option>\n                        <option value=\"dedykowana amd\">DEDYKOWANA AMD</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_graphics_card\">\n                        <option value=\"zintegrowana intel\">Zintegrowana Intel</option>\n                        <option value=\"dedykowana nvidia geforce\">DEDYKOWANA NVIDIA Geforce</option>\n                        <option value=\"zintegrowana amd\">Zintegrowana AMD</option>\n                        <option value=\"dedykowana amd\">DEDYKOWANA AMD</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_graphics_card')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ScreenDiagonal\">Przekątna ekranu</label>\n\n                <ng-container *ngIf=\"product\">\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_screen_diagonal\" formControlName=\"product_screen_diagonal\">\n                        <option>11.6</option>\n                        <option>12.5</option>\n                        <option>13.3</option>\n                        <option>13.9</option>\n                        <option>14.0</option>\n                        <option>14.1</option>\n                        <option>15.0</option>\n                        <option>15.4</option>\n                        <option>15.6</option>\n                        <option>16</option>\n                        <option>17</option>\n                        <option>17.3</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf=\"!product\">\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_screen_diagonal\">\n                        <option>11.6</option>\n                        <option>12.5</option>\n                        <option>13.3</option>\n                        <option>13.9</option>\n                        <option>14.0</option>\n                        <option>14.1</option>\n                        <option>15.0</option>\n                        <option>15.4</option>\n                        <option>15.6</option>\n                        <option>16</option>\n                        <option>17</option>\n                        <option>17.3</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_screen_diagonal')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf=\"product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_amount_available\" formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf=\"product\">\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]=\"product.product_description\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!product\">\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n\n            </div>\n    \n            <input *ngIf=\"!saved\" type=\"submit\" class=\"btn btn-success\" value=\"zapisz\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n        \n    </div>\n    \n    </ng-container>\n    \n    \n    \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrdersService } from 'src/app/orders/orders.service';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'app-order-address-form',\n  templateUrl: './order-address-form.component.html',\n  styleUrls: ['./order-address-form.component.css']\n})\nexport class OrderAddressFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response;\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  error:boolean\n  saved:boolean = false\n  valid:boolean = false\n\n  orderAddressForm = this.fb.group({    \n    orders_firstName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(3)\n    ]), \n    orders_lastName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(2)\n    ]), \n    orders_email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]), \n    orders_phoneNumber: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n    orders_zipCode: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    orders_city: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    orders_street: this.fb.control('', [\n      Validators.required,\n    ]),\n  })\n\n  save(){\n\n    if(this.orderAddressForm.valid){\n      this.valid = false\n      this.ordersService.editAddress(this.orderId, this.orderAddressForm.value).subscribe( () =>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n        console.log(\"error: \"+this.error.valueOf)\n      }\n      )\n      this.saved = true\n    }else{\n      this.valid = true\n    }\n\n    \n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"order && auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form [formGroup]=\"orderAddressForm\" (submit)=\"save()\">\n                        <span class=\"contact100-form-title\">\n                            <h4>Edycja danych do wysyłki</h4>\n                        </span>\n                        <ng-container *ngIf=\"saved\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Zapisano!!!\n                              </div>\n                        </ng-container>\n                \n                        <ng-container *ngIf=\"valid\">\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                Wypełnij poprawnie wszystkie pola\n                              </div>\n                        </ng-container>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Imię</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_firstName\" formControlName=\"orders_firstName\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_firstName')\"></validation-order-address>\n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Lastname\">Nazwisko</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_lastName\" formControlName=\"orders_lastName\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_lastName')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"email\">Email</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_email\" formControlName=\"orders_email\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_email')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">telefon</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_phoneNumber\" formControlName=\"orders_phoneNumber\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_phoneNumber')\"></validation-order-address>\n                        </div>\n                \n                        <div class=\"form-group\">\n                            <label for=\"zipcode\">Kod pocztowy</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_zipCode\" formControlName=\"orders_zipCode\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_zipCode')\"></validation-order-address>\n                        </div>\n                \n                        <div class=\"form-group\">\n                            <label for=\"city\">Miejscowość</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_city\" formControlName=\"orders_city\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_city')\"></validation-order-address>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"street\">Ulica i numer</label>\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"order.orders_street\" formControlName=\"orders_street\">\n                            <validation-order-address [control]=\"orderAddressForm.get('orders_street')\"></validation-order-address>\n                        </div>\n                \n                        <ng-container *ngIf=\"!saved\">\n                            <input type=\"submit\" value=\"Zapisz\" class=\"btn btn-success\">\n                        </ng-container>\n                        <ng-container *ngIf=\"saved\">\n                            <button class=\"btn btn-success\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: order.orders_id}\">Dalej</button>\n                        </ng-container>\n                    </form>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { OrdersService } from 'src/app/orders/orders.service';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'order-detail-form',\n  templateUrl: './order-detail-form.component.html',\n  styleUrls: ['./order-detail-form.component.css']\n})\nexport class OrderDetailFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private route:ActivatedRoute, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response;\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  error:boolean\n  saved:boolean = false\n  valid:boolean = false\n\n  orderDetailForm = this.fb.group({    \n    orders_status: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_number_delivery_days: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_delivery_method: this.fb.control('',[\n      Validators.required,\n    ]), \n    orders_payments_method: this.fb.control('',[\n      Validators.required,\n    ]), \n  })\n\n  save(){\n\n    if(this.orderDetailForm.valid){\n      this.valid = false\n      this.ordersService.editDetail(this.orderId, this.orderDetailForm.value).subscribe( () =>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n        console.log(\"error: \"+this.error.valueOf)\n      }\n      )\n      this.saved = true\n    }else{\n      this.valid = true\n    }\n\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"order && auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form [formGroup]=\"orderDetailForm\" (submit)=\"save()\">\n                        <span class=\"contact100-form-title\">\n                            <h4>Edycja informacji o zamówieniu</h4>\n                        </span>\n                        <ng-container *ngIf=\"saved\">\n                            <div class=\"alert alert-success\" role=\"alert\">\n                                Zapisano!!!\n                              </div>\n                        </ng-container>\n                \n                        <ng-container *ngIf=\"valid\">\n                            <div class=\"alert alert-danger\" role=\"alert\">\n                                Wypełnij poprawnie wszystkie pola\n                              </div>\n                        </ng-container>\n                \n                        <div class=\"form-group\">\n                            <label for=\"City\">Status</label>\n                            <select class=\"form-control\" [(ngModel)]=\"order.orders_status\" formControlName=\"orders_status\">\n                                <option value=\"przyjęto do realizacji\">Przyjęto do realizacji</option>\n                                <option value=\"oczekuje na płatność\">Oczekuje na płatność</option>\n                                <option value=\"przygotowanie do wysłania\">Przygotowanie do wysłania</option>\n                                <option value=\"wysłano\">Wysłano</option>\n                                <option value=\"doręczone do klienta\">Doręczone do klienta</option>\n                                <option value=\"anulowane\">Anulowane</option>\n                            </select>\n                \n                            <validation-order-address [control]=\"orderDetailForm.get('orders_status')\"></validation-order-address>\n                \n                        </div>\n                        \n                        <div class=\"form-group\">\n                            <label for=\"Name\">Przewidywany czas dostawy</label>\n                                <select class=\"form-control\" [(ngModel)]=\"order.orders_number_delivery_days\" formControlName=\"orders_number_delivery_days\">\n                                    <option value=\"1\">1 dzień</option>\n                                    <option value=\"2\">2 dni</option>\n                                    <option value=\"3\">3 dni</option>\n                                    <option value=\"4\">4 dni</option>\n                                    <option value=\"5\">5 dni</option>\n                                    <option value=\"6\">6 dni</option>\n                                    <option value=\"7\">7 dni</option>\n                                    <option value=\"8\">8 dni</option>\n                                    <option value=\"9\">9 dni</option>\n                                    <option value=\"10\">10 dni</option>\n                                    <option value=\"11\">11 dni</option>\n                                    <option value=\"12\">12 dni</option>\n                                    <option value=\"13\">13 dni</option>\n                                    <option value=\"14\">14 dni</option>\n                                </select>\n                \n                                <validation-order-address [control]=\"orderDetailForm.get('orders_number_delivery_days')\"></validation-order-address>\n                \n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">sposób dostawy</label>\n                                <select class=\"form-control\" [(ngModel)]=\"order.orders_delivery_method\" formControlName=\"orders_delivery_method\">\n                                    <option value=\"kurier\">Dostawa kurierem</option>\n                                    <option value=\"osobisty\">Odbiór osobisty</option>\n                                </select>\n                \n                                <validation-order-address [control]=\"orderDetailForm.get('orders_delivery_method')\"></validation-order-address>\n                        </div>\n                    \n                        <div class=\"form-group\">\n                            <label for=\"PhoneNumber\">sposób płatności</label>\n                            <select class=\"form-control\" [(ngModel)]=\"order.orders_payments_method\" formControlName=\"orders_payments_method\">\n                                <option value=\"przy odbiorze\">Przy odbiorze</option>\n                                <option value=\"przelew gotówkowy\">Przelew gotówkowy</option>\n                            </select>\n                \n                            <validation-order-address [control]=\"orderDetailForm.get('orders_payments_method')\"></validation-order-address>\n                \n                        </div>\n                        <ng-container *ngIf=\"!saved\">\n                            <input type=\"submit\" value=\"Zapisz\" class=\"btn btn-success\">\n                        </ng-container>\n                        <ng-container *ngIf=\"saved\">\n                            <button class=\"btn btn-success\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: order.orders_id}\">Dalej</button>\n                        </ng-container>\n                    </form>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/model/order';\n\n@Component({\n  selector: 'order-form',\n  templateUrl: './order-form.component.html',\n  styleUrls: ['./order-form.component.css']\n})\nexport class OrderFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private router: Router) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    this.user = this.auth.getCurrentUser()\n  }\n\n  user:User\n  orderSummary:Order\n\n  addOrderForm = this.fb.group({    \n    orders_delivery_method: this.fb.control('', [\n      Validators.required,\n    ]), \n    orders_payments_method: this.fb.control('', [\n      Validators.required,\n    ]), \n    orders_firstName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(3)\n    ]), \n    orders_lastName: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(2)\n    ]), \n    orders_street: this.fb.control('', [\n      Validators.required,\n    ]),\n    orders_zipCode: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    orders_city: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    orders_email: this.fb.control('', [\n      Validators.required,\n      Validators.email\n    ]),\n    orders_phoneNumber: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n\n  })\n\n  valid:boolean = false;\n\n  saveOrderSummary(){\n    if(this.addOrderForm.valid){\n      this.valid = false\n      this.orderSummary = this.addOrderForm.value\n      this.router.navigate(['/podsumowanie'], { queryParams: {order_data: JSON.stringify(this.orderSummary) } });\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n}\n","<div class=\"form-wraper\">\n    <ng-container *ngIf=\"valid\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n            Wypełnij poprawnie wszystkie pola\n          </div>\n    </ng-container>\n\n    <form [formGroup]=\"addOrderForm\" (submit)=\"saveOrderSummary()\">\n        <h4>Dostawa i płatność</h4>\n        <p>1.Sposób dostawy</p>\n        <div class=\"form-group \">\n            <select class=\"form-control\" formControlName=\"orders_delivery_method\">\n                <option value=\"kurier\">Dostawa kurierem</option>\n                <option value=\"osobisty\">Odbiór osobisty</option>\n            </select>\n            <validation-order-address [control]=\"addOrderForm.get('orders_delivery_method')\"></validation-order-address>\n        </div>\n\n    <p>2.Metoda płatności</p>\n        <div class=\"form-group \">\n            <select class=\"form-control\" formControlName=\"orders_payments_method\">\n                <option value=\"przy odbiorze\">Przy odbiorze</option>\n                <option value=\"przelew gotówkowy\">Przelew gotówkowy</option>\n            </select>\n            <validation-order-address [control]=\"addOrderForm.get('orders_payments_method')\"></validation-order-address>\n        </div>\n\n    <p>3.Dane odbiorcy</p>\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_firstName\" formControlName=\"orders_firstName\" placeholder=\"Imię\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_firstName\" placeholder=\"Imię\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_firstName')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_lastName\" formControlName=\"orders_lastName\" placeholder=\"Nazwisko\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_lastName\" placeholder=\"Nazwisko\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_lastName')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_street\" formControlName=\"orders_street\" placeholder=\"Ulica\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_street\" placeholder=\"Ulica\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_street')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_zipCode\" formControlName=\"orders_zipCode\" placeholder=\"Kod pocztowy [xx-xxx]\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_zipCode\" placeholder=\"Kod pocztowy [xx-xxx]\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_zipCode')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_city\" formControlName=\"orders_city\" placeholder=\"Miasto\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_city\" placeholder=\"Miasto\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_city')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_email\" formControlName=\"orders_email\" placeholder=\"E-mail\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_email\" placeholder=\"E-mail\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_email')\"></validation-order-address>\n        </div>\n\n        <div class=\"form-group\">\n            <ng-container *ngIf=\"user\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_phoneNumber\" formControlName=\"orders_phoneNumber\" placeholder=\"Numer telefonu\">\n            </ng-container>\n            <ng-container *ngIf=\"!user\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"orders_phoneNumber\" placeholder=\"Numer telefonu\">\n            </ng-container>\n            <validation-order-address [control]=\"addOrderForm.get('orders_phoneNumber')\"></validation-order-address>\n        </div>\n\n        <input value=\"zapisz\" type=\"submit\" value=\"kupuję i płacę\" class=\"btn btn-success\">\n    </form>\n</div>\n\n    \n\n  ","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'smartphone-form',\n  templateUrl: './smartphone-form.component.html',\n  styleUrls: ['./smartphone-form.component.css']\n})\nexport class SmartphoneFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, public auth:AuthService) { \n    this.auth.state.subscribe()\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  product\n  productType = \"smartphones\"\n  updateProduct:ProductTest\n  saved:boolean = false\n  valid:boolean = false\n\n  productForm = this.fb.group({    \n    \n    product_type: this.fb.control('smartphone'), \n    product_mark: this.fb.control('', [\n      Validators.required,\n      \n    ]), \n    product_status: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_description: this.fb.control('', [\n      Validators.required,\n      Validators.minLength(20)\n    ]), \n    product_processor: this.fb.control('brak'), \n    product_system: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_camera: this.fb.control('brak'), \n    product_disc_type: this.fb.control('brak'), \n    product_graphics_card: this.fb.control('brak'), \n    product_price: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_ram_size: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_disc_size: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_screen_diagonal: this.fb.control('', [\n      Validators.required,\n    ]), \n    product_amount_available: this.fb.control('', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/),\n    ]), \n    product_camera_resolution: this.fb.control('', [\n      Validators.required, \n    ]), \n    product_time_work: this.fb.control('0'), \n    product_range: this.fb.control('0'),\n  })\n\n  @Input(\"getProduct\")\n  set getId(product){\n    this.product = product\n    this.changeProductMarkOnNumber()\n  }\n\n  @Output('saveProduct')\n  emiterSaveProduct = new EventEmitter()\n\n  saveProduct(){\n\n    if(this.productForm.valid){\n      this.valid = false\n      this.updateProduct = this.productForm.value\n      this.changeProductMarkOnString()\n      this.emiterSaveProduct.emit(this.updateProduct)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n    \n  }\n\n\n  changeProductMarkOnNumber(){\n    this.product.product_mark\n\n    switch (this.product.product_mark) {\n      case \"samsung\":\n          console.log(\"samsung 1\");\n          this.product.product_mark = \"1\"\n          break;\n      case \"apple\":\n          console.log(\"Apple 2\");\n          this.product.product_mark = \"2\"\n          break;\n      case \"huawei\":\n          console.log(\"Huawei 3\");\n          this.product.product_mark = \"3\"\n          break;\n      case \"sony\":\n          console.log(\"sony 4\");\n          this.product.product_mark = \"4\"\n          break;\n      case \"nokia\":\n          console.log(\"nokia 5\");\n          this.product.product_mark = \"5\"\n          break;\n      case \"xiaomi\":\n          console.log(\"xiaomi 6\");\n          this.product.product_mark = \"6\"\n          break;\n      case \"lg\":\n          console.log(\"lg 7\");\n          this.product.product_mark = \"7\"\n          break;\n      case \"htc\":\n          console.log(\"htc 8\");\n          this.product.product_mark = \"8\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.product.product_mark = \"brak\"\n          break;\n  }\n  }\n\n  changeProductMarkOnString(){\n    this.updateProduct.product_mark\n\n    switch (this.updateProduct.product_mark) {\n      case \"1\":\n          console.log(\"samsung\");\n          this.updateProduct.product_mark = \"samsung\"\n          break;\n      case \"2\":\n          console.log(\"apple\");\n          this.updateProduct.product_mark = \"apple\"\n          break;\n      case \"3\":\n          console.log(\"huawei\");\n          this.updateProduct.product_mark = \"huawei\"\n          break;\n      case \"4\":\n          console.log(\"sony\");\n          this.updateProduct.product_mark = \"sony\"\n          break;\n      case \"5\":\n          console.log(\"nokia\");\n          this.updateProduct.product_mark = \"nokia\"\n          break;\n      case \"6\":\n          console.log(\"xiaomi\");\n          this.updateProduct.product_mark = \"xiaomi\"\n          break;\n      case \"7\":\n          console.log(\"lg\");\n          this.updateProduct.product_mark = \"lg\"\n          break;\n      case \"8\":\n          console.log(\"htc\");\n          this.updateProduct.product_mark = \"htc\"\n          break;\n      default:\n          console.log(\"brak\");\n          this.updateProduct.product_mark = \"brak\"\n          break;\n  }\n  }\n\n}\n","\n<ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n    <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"saved\">\n        Zapisano!!!\n      </div>\n\n      <ng-container *ngIf=\"valid\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n            Wypełnij poprawnie wszystkie pola\n          </div>\n    </ng-container>\n\n    <div class=\"form\">\n        <form class=\"contact100-form\" [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Name\">Producent</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_mark\" formControlName=\"product_mark\">\n                        <option value=\"1\">Samsung</option>\n                        <option value=\"2\">Apple</option>\n                        <option value=\"3\">Huawei</option>\n                        <option value=\"4\">Sony</option>\n                        <option value=\"5\">Nokia</option>\n                        <option value=\"6\">Xiaomi</option>\n                        <option value=\"7\">LG</option>\n                        <option value=\"8\">HTC</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_mark\">\n                        <option value=\"1\">Samsung</option>\n                        <option value=\"2\">Apple</option>\n                        <option value=\"3\">Huawei</option>\n                        <option value=\"4\">Sony</option>\n                        <option value=\"5\">Nokia</option>\n                        <option value=\"6\">Xiaomi</option>\n                        <option value=\"7\">LG</option>\n                        <option value=\"8\">HTC</option>\n                        <option>brak</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_mark')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Price\">Cena</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_price\" formControlName=\"product_price\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_price\">\n                </ng-container>\n\n\n                <validation-product [control]=\"productForm.get('product_price')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Status\">Status</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_status\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_status\">\n                        <option>promocja</option>\n                        <option>wyprzedaż</option>\n                        <option>nowość</option>\n                        <option>polecamy</option>\n                        <option>przedłużona gwarancja</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_status')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"System\">System operacyjny</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_system\" formControlName=\"product_system\">\n                        <option>Android</option>\n                        <option>iOs</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_system\">\n                        <option>Android</option>\n                        <option>iOs</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_system')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ScreenDiagonal\">Przekątna ekranu</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_screen_diagonal\" formControlName=\"product_screen_diagonal\">\n                        <option>4</option>\n                        <option>4.7</option>\n                        <option>5.7</option>\n                        <option>6</option>\n                        <option>6.7</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_screen_diagonal\">\n                        <option>4</option>\n                        <option>4.7</option>\n                        <option>5.7</option>\n                        <option>6</option>\n                        <option>6.7</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_screen_diagonal')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"DyskSize\">Rozmiar dysku</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_disc_size\" formControlName=\"product_disc_size\">\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                        <option>64</option>\n                        <option>128</option>\n                        <option>256</option>\n                        <option>512</option>\n                    </select>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_disc_size\">\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                        <option>64</option>\n                        <option>128</option>\n                        <option>256</option>\n                        <option>512</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_disc_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Ram\">Pamięć RAM</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_ram_size\" formControlName=\"product_ram_size\">\n                        <option>2</option>\n                        <option>4</option>\n                        <option>6</option>\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_ram_size\">\n                        <option>2</option>\n                        <option>4</option>\n                        <option>6</option>\n                        <option>8</option>\n                        <option>16</option>\n                        <option>32</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_ram_size')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"CameraResolution\">Roździelczość kamery</label>\n\n                <ng-container *ngIf='product'>\n                    <select class=\"input100\" class=\"form-control\" [(ngModel)]=\"product.product_camera_resolution\" formControlName=\"product_camera_resolution\">\n                        <option>7</option>\n                        <option>8</option>\n                        <option>13</option>\n                        <option>16</option>\n                        <option>19</option>\n                        <option>20</option>\n                    </select>\n                </ng-container>\n\n                <ng-container *ngIf='!product'>\n                    <select class=\"input100\" class=\"form-control\" formControlName=\"product_camera_resolution\">\n                        <option>7</option>\n                        <option>8</option>\n                        <option>13</option>\n                        <option>16</option>\n                        <option>19</option>\n                        <option>20</option>\n                    </select>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_camera_resolution')\"></validation-product>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Amount\">Dostępna ilość</label>\n\n                <ng-container *ngIf='product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" [(ngModel)]=\"product.product_amount_available\" formControlName=\"product_amount_available\">\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <input class=\"input100\" type=\"text\" class=\"form-control\" formControlName=\"product_amount_available\">\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_amount_available')\"></validation-product>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100\">\n                <label class=\"label-input100\" for=\"Descripton\">Opis</label>\n\n                <ng-container *ngIf='product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" [(ngModel)]=\"product.product_description\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n                \n                <ng-container *ngIf='!product'>\n                    <textarea class=\"input100\" rows=\"4\" cols=\"50\" class=\"form-control\" formControlName=\"product_description\"> </textarea>\n                </ng-container>\n\n                <validation-product [control]=\"productForm.get('product_description')\"></validation-product>\n            </div>\n\n            <input *ngIf=\"!saved\" type=\"submit\" class=\"btn btn-success\" value=\"zapisz\">\n            <a *ngIf=\"saved && product\" class=\"btn btn-secondary\" [routerLink]=\"['/product', product.product_id]\">powrót</a>\n            <a *ngIf=\"saved && !product\" class=\"btn btn-secondary\" [routerLink]=\"['/products', productType]\">powrót</a>\n        </form>\n        \n    </div>\n\n</ng-container>\n\n\n\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder) { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  userForm = this.fb.group({\n    user_firstName: this.fb.control('', [\n      Validators.minLength(3)\n    ]),\n    user_lastName: this.fb.control('', [\n      Validators.minLength(2)\n    ]),\n    user_phoneNumber: this.fb.control('', [\n      Validators.pattern(/^[0-9]+$/)\n    ]),\n    user_zipCode: this.fb.control('', [\n      Validators.pattern(/^\\d{2}-\\d{3}$/)\n    ]),\n    user_city: this.fb.control('', [\n      Validators.pattern(/[a-zA-Z]+(?:[ '-][a-zA-Z]+)*/)\n    ]),\n    user_street: this.fb.control(''),\n    \n  })\n  \n  user\n  updateUser:User\n  returnPath:string\n  saved:boolean = false\n  valid:boolean = false\n  \n  @Input(\"getUser\")\n  set getId(product){\n    this.user = product\n\n  }\n\n  @Input(\"getPath\")\n  set getPath(path){\n    this.returnPath = path\n\n  }\n\n  @Output('saveUser')\n  emiterSaveProduct = new EventEmitter()\n\n  saveUser(){\n\n    if(this.userForm.valid){\n      this.valid = false\n      this.updateUser = this.userForm.value\n      this.emiterSaveProduct.emit(this.updateUser)\n      this.saved = true;\n    }else{\n      this.valid = true\n    }\n\n    \n  }\n\n}\n","    <div class=\"form\">\n        <ng-container *ngIf=\"saved\">\n            <div class=\"alert alert-success\" role=\"alert\">\n                Zapisano!!!\n              </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"valid\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                Wypełnij poprawnie wymagane pola\n              </div>\n        </ng-container>\n\n        <form class=\"contact100-form\" [formGroup]=\"userForm\" (submit)=\"saveUser()\">\n            <span class=\"contact100-form-title\">\n                Edycja użytkownika\n            </span>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"FirstName\">Imię</label>\n                \n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_firstName\" formControlName=\"user_firstName\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_firstName\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_firstName').getError('minlength') as error\">\n                    Musisz podać min {{error.requiredLength}} znaki\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"LastName\">Nazwisko</label>\n                \n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_lastName\" formControlName=\"user_lastName\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_lastName\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_lastName').getError('minlength') as error\">\n                    Musisz podać min {{error.requiredLength}} znaki\n                </div>\n\n            </div>\n            \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"PhoneNumber\">Numer telefonu</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_phoneNumber\" formControlName=\"user_phoneNumber\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_phoneNumber\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_phoneNumber').hasError('pattern')\">\n                    Musisz podać liczby\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"ZipCode\">Kod pocztowy</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_zipCode\" formControlName=\"user_zipCode\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_zipCode\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_zipCode').hasError('pattern')\">\n                   Kod pocztowy w formacie [nn-nnn]\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"City\">Miasto</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_city\" formControlName=\"user_city\">\n                </ng-container>\n\n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_city\">\n                </ng-container>\n\n                <div class=\"validation-feedback\" *ngIf=\"userForm.get('user_city').hasError('pattern')\">\n                    Niepoprawny format\n                </div>\n\n            </div>\n        \n            <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                <label class=\"label-input100\" for=\"Street\">Ulica i numer</label>\n\n                <ng-container *ngIf=\"user\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.user_street\" formControlName=\"user_street\">\n                </ng-container>\n                \n                <ng-container *ngIf=\"!user\">\n                    <input type=\"text\" class=\"form-control\" formControlName=\"user_street\">\n                </ng-container>\n\n            </div>\n            \n            <input *ngIf=\"!saved\" value=\"Zapisz\" type=\"submit\"  class=\"btn btn-success\">\n            <a *ngIf=\"saved && returnPath == 'user'\"  class=\"btn btn-secondary\" [routerLink]=\"['/user', user.user_id]\">powrót</a>\n            <a *ngIf=\"saved && returnPath == 'profile'\"  class=\"btn btn-secondary\" [routerLink]=\"['/profile']\">powrót</a>\n        </form>\n    </div>\n\n\n\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'user-role-form',\n  templateUrl: './user-role-form.component.html',\n  styleUrls: ['./user-role-form.component.css']\n})\nexport class UserRoleFormComponent implements OnInit {\n\n  constructor(private fb:FormBuilder) { }\n\n  roleForm = this.fb.group({\n  user_role: this.fb.control(''),\n})\n\nuser\nupdateUser:User\nsaved:boolean = false\n\n\n@Input(\"getUser\")\nset getId(user){\n  this.user = user\n\n}\n\n@Output('saveUser')\nemiterSaveProduct = new EventEmitter()\n\nsaveUser(){\n  this.updateUser = this.roleForm.value\n  this.emiterSaveProduct.emit(this.updateUser)\n  this.saved = true;\n}\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"form\" *ngIf=\"user\">\n    <ng-container *ngIf=\"saved\">\n        <div class=\"alert alert-success\" role=\"alert\">\n            Zaoisano!!!\n          </div>\n    </ng-container>\n    <form [formGroup]=\"roleForm\" (submit)=\"saveUser()\">\n        <span class=\"contact100-form-title\">\n            Edycja użytkownika\n        </span>\n        <div class=\"form-group\">\n            <label class=\"label-input100\" for=\"role\">Uprawnienia</label>\n            <select class=\"form-control\" [(ngModel)]='user.user_role' formControlName=\"user_role\" required>\n                <option>ADMIN</option>\n                <option>USER</option>\n            </select>\n        </div>\n        <input *ngIf=\"!saved\" value=\"Zapisz\" type=\"submit\"  class=\"btn btn-success\">\n        <a *ngIf=\"saved\"  class=\"btn btn-success\" [routerLink]=\"['/user', user.user_id]\">Powrót</a>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from '../model/productTest';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private productsService:ProductsService) { }\n\n  productsRecomendList1:ProductTest[] = []\n  productsRecomendList2:ProductTest[] = []\n  productsRecomendList3:ProductTest[] = []\n\n  productsPromotion:ProductTest[] = []\n\n  statusError:number\n  imagesUrl\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.productsService.getByStatus(\"polecamy\").subscribe(response =>{\n      for(var i = 0; i <= response.length -1; i++){\n\n        if(i <=2){\n          this.productsRecomendList1.push(response[i])\n        }\n\n        if(i >= 3 && i <=5){\n          this.productsRecomendList2.push(response[i]) \n        } \n        \n        if(i >= 6 && i <=8){\n          this.productsRecomendList3.push(response[i])\n        }\n\n      }\n\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n    \n\n    this.productsService.getByStatus(\"promocja\").subscribe(response =>{\n      \n      for(var i = 0; i <= response.length -1; i++){\n        if(i <=1){\n          this.productsPromotion.push(response[i])\n        }  \n      }\n      \n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n  }\n\n}\n","\n  \n<error-handler [errorHandler]=\"statusError\"></error-handler>\n<div class=\"container-fluid slider\">\n        <slider></slider>  \n</div>\n    \n<div class=\"container-fluid\">\n    <div class=\"row cont-r\">\n        <div class=\"col-lg-4 promotion\">\n            <div class=\"promo-wrap\">\n                <div class=\"row promotion-header\" style=\"height: 50px;\">\n                    <h4>Promocja</h4>\n                </div>\n                <div class=\"promo-item\" *ngFor=\"let p of productsPromotion\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"row\">\n                            <img class=\"promotion-img\"  src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"promotion-desc\">\n                                {{p.product_description}}\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"promotion-price\">\n                                <span class=\"before\">{{p.product_price + 1000}} zł</span><span class=\"after\"> {{p.product_price}} zł</span>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-8 recomend\">\n            <div class=\"row recomend-header\" style=\"height: 50px;\">\n                <h4>Polecamy</h4>\n            </div>\n            <div class=\"row recomend-list1\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList1\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>\n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div class=\"row recomend-list2\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList2\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>\n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n            <div class=\"row recomend-list3\">\n                <div class=\"col-sm-4 wrap\" style=\"height: 240px;\" *ngFor=\"let p of productsRecomendList3\">\n                    <a [routerLink]=\"['/product', p.product_id]\">\n                        <div class=\"wraper\">\n                                <div class=\"img\">\n                                    <img src=\"../../assets/img/promotion/{{p.product_mark}}-{{p.product_type}}-221-221.jpg\" alt=\"product\">\n                                </div>        \n                            <div class=\"content\">\n                                <div class=\"recomend-description\">{{p.product_description}}</div>\n                                <div class=\"recomend-price\">{{p.product_price}} zł</div>\n                            </div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    \n<box-drone></box-drone>\n<box-special></box-special>\n<box-last-product></box-last-product>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n\n  constructor(public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    \n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">x-tom</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'drones']\">Drony</a>\n          </li>\n  \n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'laptops']\">Laptopy</a>\n          </li>\n           \n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" [routerLink]=\"['/products', 'smartphones']\">Smartfony</a>\n          </li>\n          \n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/koszyk']\">Koszyk</a>\n            </li>\n          \n          <ng-container *ngIf=\"auth.isAuthenticated\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/moje-zamowienia']\">Moje Zamówienia</a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/profile']\">Twoje konto</a>\n            </li>\n          </ng-container>\n\n          <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            \n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/panel-administracyjny']\">Zarządzaj sklepem</a>\n            </li>\n            \n          </ng-container>\n\n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/logowanie']\">Zaloguj</a>\n            </li>\n\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n              <a class=\"nav-link\" [routerLink]=\"['/rejestracja']\">Załóż konto</a>\n            </li>\n          </ng-container>\n          \n        </ul>\n      </div>\n        <div class=\"navbar-text\" *ngIf=\"auth.isAuthenticated\">\n            <profile-bar></profile-bar>\n        </div>\n  </nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AuthModule } from '../auth/auth.module';\nimport { ProfileModule } from '../profile/profile.module';\nimport { NaviRoutingModule } from './navi.routing.module';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent,\n    MenuComponent,\n  ],\n  imports: [\n    CommonModule,\n    AuthModule,\n    ProfileModule,\n    ErrorModule,\n    NaviRoutingModule,\n  ],\n  exports: [\n     PageNotFoundComponent, MenuComponent\n  ],\n})\nexport class NaviModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  \n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class NaviRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"navigation-bar-wraper\">\n    <ul class=\"nav\">\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" [routerLink]=\"['/home']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">home</mat-icon></div>\n                            <div class=\"col-6\"><span>Home</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" [routerLink]=\"['/products', 'drones']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">sports_esports</mat-icon></div>\n                            <div class=\"col-6\"><span>Drony</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">  \n                <a class=\"nav-link\" [routerLink]=\"['/products', 'laptops']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">laptop_mac</mat-icon></div>\n                            <div class=\"col-6\"><span>Laptopy</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n        <div class=\"navigation-bar-menu\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\"[routerLink]=\"['/products', 'smartphones']\">\n                    <div class=\"navigation-bar-item\">\n                        <div class=\"row\">\n                            <div class=\"col-6\"><mat-icon aria-label=\"Side nav toggle icon\">phone_iphone</mat-icon></div>\n                            <div class=\"col-6\"><span>Smartfony</span></div>\n                        </div>\n                    </div>\n                </a>\n            </li>\n        </div>\n      </ul>\n</div>\n\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public auth:AuthService) {\n    this.auth.state.subscribe()\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav \n      #drawer\n      class=\"sidenav\" \n      \n      fixedInViewport=\"false\"\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/products', 'drones']\" (click)=\"drawer.toggle()\">Drony</a>\n      <a mat-list-item [routerLink]=\"['/products', 'laptops']\" (click)=\"drawer.toggle()\">Laptopy</a>\n      <a mat-list-item [routerLink]=\"['/products', 'smartphones']\" (click)=\"drawer.toggle()\">Smartphony</a>\n      <div class=\"log-menu\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n          <a mat-list-item [routerLink]=\"['/panel-administracyjny']\" (click)=\"drawer.toggle()\">Menedżer</a>\n        </ng-container>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/moje-zamowienia']\" (click)=\"drawer.toggle()\">Kupione</a>\n        </ng-container>\n        <a mat-list-item [routerLink]=\"['/koszyk']\" (click)=\"drawer.toggle()\">Koszyk</a>\n      </div>\n\n      <div>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/profile']\" (click)=\"drawer.toggle()\">Moje konto</a>\n        </ng-container>\n        <ng-container *ngIf=\"!auth.isAuthenticated\">\n          <a mat-list-item [routerLink]=\"['/logowanie']\" (click)=\"drawer.toggle()\">Moje konto</a>\n        </ng-container>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <a mat-list-item (click)=\"auth.logout()\" (click)=\"drawer.toggle()\">Wyloguj</a>\n        </ng-container>\n      </div>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        <div class=\"toogle-menu-text\">Menu</div>\n      </button>\n      <div class=\"logo\">\n        <a [routerLink]=\"['/']\">\n          <img src=\"../../assets/img/logo/logo-nav.jpg\" alt=\"logo\">\n        </a>\n      </div>\n      <span class=\"spacer\"></span>\n      <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <div class=\"menu-icon-wraper hidden-menu\">\n          <a [routerLink]=\"['/panel-administracyjny']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">settings</mat-icon></div>\n            <div class=\"menu-text\"><span>Menedżer</span></div>\n            </a>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"auth.isAuthenticated\">\n        <div class=\"menu-icon-wraper hidden-menu\">\n          <a [routerLink]=\"['/moje-zamowienia']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">assignment</mat-icon></div>\n            <div class=\"menu-text\"><span>Kupione</span></div>\n            </a>\n        </div>\n      </ng-container>\n        <div class=\"menu-icon-wraper\">\n          <ng-container *ngIf=\"auth.isAuthenticated\">\n            <a [routerLink]=\"['/profile']\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">perm_identity</mat-icon></div>\n              <div class=\"menu-text\"><span>Moje konto</span></div>\n              </a>\n          </ng-container>\n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <a [routerLink]=\"['/logowanie']\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">perm_identity</mat-icon></div>\n              <div class=\"menu-text\"><span>Moje konto</span></div>\n              </a>\n          </ng-container>\n        </div>\n        <div class=\"menu-icon-wraper\">\n          <a [routerLink]=\"['/koszyk']\">\n            <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">shopping_cart</mat-icon></div>\n            <div class=\"menu-text\"><span>Koszyk</span></div>\n            </a>\n        </div>\n        <ng-container *ngIf=\"auth.isAuthenticated\">\n          <div class=\"menu-icon-wraper hidden-min\">\n            <a (click)=\"auth.logout()\">\n              <div class=\"menu-icon\"><mat-icon aria-label=\"Side nav toggle icon\">input</mat-icon></div>\n              <div class=\"menu-text\"><span>Wyloguj</span></div>\n              </a>\n          </div>\n          \n        </ng-container>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  pathOrder:boolean = true\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-6\">\n            <order-form></order-form>\n        </div>\n        <div class=\"col-lg-6\">\n            <cart [setPathOrder]=\"pathOrder\"></cart>\n        </div>\n    </div>\n</div>\n      \n      \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/model/order';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { OrderItem } from 'src/app/model/orderItem';\nimport { OrdersService } from '../orders.service';\nimport { CartService } from 'src/app/cart/cart.service';\n\n\n@Component({\n  selector: 'order-sumary',\n  templateUrl: './order-sumary.component.html',\n  styleUrls: ['./order-sumary.component.css']\n})\nexport class OrderSumaryComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute, public auth:AuthService, private ordersService:OrdersService, private cartService:CartService) { \n    this.auth.state.subscribe()\n\n    this.route.queryParams.subscribe(param =>{\n      this.orderData = JSON.parse(param['order_data']) \n    })\n\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n  \n  pathOrder:boolean = true\n  saved:boolean = false\n  orderItemList:OrderItem[]\n  orderData:Order\n  sumOrder:number = 0\n  \n  getOrderItemCart(item:OrderItem[]){\n    this.orderItemList = item\n  }\n\n  save(){\n   this.saveOrderItem().subscribe( (response:number)=>{\n    this.saveOrder(response)\n   })\n\n    this.saved = true\n  }\n\n  saveOrderItem(){\n    this.orderItemList.forEach(item =>{\n    this.sumOrder += (item.product.product_price * item.order_item_amount)\n\n    })\n    return this.ordersService.createOrderItem(this.orderItemList)\n\n  }\n\n  saveOrder(number:number){\n    this.orderData.orders_number = number\n    this.orderData.orders_payments_sum = this.sumOrder\n    if(this.auth.isAuthenticated){\n      this.orderData.user = this.auth.getCurrentUser()\n    }\n    this.ordersService.createOrder(this.orderData).subscribe()\n\n    if(this.auth.isAuthenticated){\n        this.cartService.deleteMyCart(this.auth.getCurrentUser().user_id).subscribe(response =>{\n        })\n    }else{\n      localStorage.removeItem('products')\n    }\n\n  }\n\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"sumary-wraper\">\n                <ng-container *ngIf=\"!saved\">\n                    <h4>Podsumowanie</h4>\n                    <p>Dostawa</p>\n                    <div class=\"order-method\">\n                        <p>{{orderData.orders_delivery_method}}</p>\n                    </div>\n                    <div class=\"address\">\n                        <p>Dane odbiorcy:</p>\n                        <p>{{orderData.orders_firstName}} {{ orderData.orders_lastName}}</p>\n                        <p>{{orderData.orders_street}}</p>\n                        <p>{{orderData.orders_zipCode}} {{orderData.orders_city}}</p>\n                        <p>e-mail: {{orderData.orders_email}}</p>\n                        <p>tel. {{orderData.orders_phoneNumber}}</p>\n                    </div>\n                    <p>Płatność</p>\n                    <div class=\"payment\">\n                        <p>{{orderData.orders_payments_method}}</p>\n                    </div>\n                    <div class=\"cart\">\n                        <cart [setPathOrder]=\"pathOrder\" (setOrderItem)=\"getOrderItemCart($event)\"></cart>\n                        <a class=\"btn btn-success\" (click)=\"save()\">Kupuję i płacę</a>\n                    </div>\n                </ng-container>\n                \n                <ng-container *ngIf=\"saved\">\n                    <div class=\"greetings\">\n                        <h4>Dziękuje za zakupy !!! 🥳😉</h4>\n                        <p>Jeżeli naprawdę chciałeś kupić wybrany produkt...</p>\n                        <p><span>Skontaktuj się z producentem 😁</span></p>\n                        <p>Do zobaczenia na rozmowie.</p>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Order } from 'src/app/model/order';\nimport { OrdersService } from '../orders.service';\nimport { OrderItem } from 'src/app/model/orderItem';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute, private ordersService:OrdersService, public auth:AuthService) {\n    this.auth.state.subscribe()\n\n    this.route.queryParams.subscribe(param =>{\n      this.orderId = param['order_id']\n    })\n    \n    this.ordersService.getOrdersById(this.orderId).subscribe(response =>{\n      this.order = response\n\n      this.ordersService.getOrderItemByOrderNumber(response.orders_number).subscribe(items =>{\n        this.orderItem = items\n      })\n    })\n    \n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  order:Order\n  orderItem:OrderItem[]\n}\n","<div class=\"container-fluid\">\n    <div class=\"wraper\">\n        <ng-container *ngIf=\"auth.isAuthenticated && order\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                        <h4>Zamówienie numer {{order.orders_number}}</h4>\n                        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                            <a [routerLink]=\"['/zamowienie-usuwanie', order.orders_id]\">\n                                <span _ngcontent-kjs-c190=\"\" class=\"material-icons\">delete</span>\n                                Usuń zamówienie\n                            </a>\n                        </ng-container>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-6\">\n                    <h6>Dane do wysyłki</h6>\n                    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                        <a [routerLink]=\"['/edit-order-address', order.orders_id]\">\n                            <span _ngcontent-fwr-c191=\"\" class=\"material-icons\">edit</span>\n                            Edytuj\n                        </a>\n                    </ng-container>\n                    <table class=\"table table-striped\">\n                        <tbody>\n                            <tr>\n                                <td>imię i nazwisko</td>\n                                <td><strong>{{order.orders_firstName}} {{order.orders_lastName}}</strong></td>\n                          </tr>\n                          <tr>\n                            <td>email</td>\n                            <td><strong>{{order.orders_email}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>telefon</td>\n                            <td><strong>{{order.orders_phoneNumber}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>miejscowość</td>\n                            <td><strong>{{order.orders_zipCode}} {{order.orders_city}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>ulica</td>\n                            <td><strong>{{order.orders_street}}</strong></td>\n                        </tr>\n                        </tbody>\n                      </table>\n                </div>\n                <div class=\"col-lg-6\">\n                    <h6>Informacje o zamówieniu</h6>\n                    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                        <a [routerLink]=\"['/edit-order-detail', order.orders_id]\">\n                            <span _ngcontent-fwr-c191=\"\" class=\"material-icons\">edit</span>\n                            Edytuj\n                        </a>\n                    </ng-container>\n                      <table class=\"table table-striped\">\n                        <tbody>\n                            <tr>\n                                <td>status</td>\n                                <td><strong>{{order.orders_status}}</strong></td>\n                          </tr>\n                          <tr>\n                            <td>data zamówienia</td>\n                            <td><strong>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>przewidywany czas dostawy</td>\n                            <td><strong>{{order.orders_date_time_delivery | date: 'yyyy-MM-dd HH:mm'}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>sposób dostawy</td>\n                            <td><strong>{{order.orders_delivery_method}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>sposób płatności</td>\n                            <td><strong>{{order.orders_payments_method}}</strong></td>\n                        </tr>\n                        <tr>\n                            <td>wartość zamówienia</td>\n                            <td style=\"border: 1px solid red;\"><strong>{{order.orders_payments_sum}} zł</strong></td>\n                        </tr>\n                        </tbody>\n                      </table>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <h6>Zamówione produkty</h6>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <table class=\"table table-striped\">\n                        <tbody>\n                            <tr *ngFor=\"let item of orderItem let i = index;\">\n                                <th scope=\"row\">{{i+1}}</th>\n                                <td><a [routerLink]=\"['/product',item.product.product_id]\">{{item.product.product_description}}</a></td>\n                                <td>{{item.order_item_price}} zł</td>\n                                <td>{{item.order_item_amount}} szt.</td>\n                                <td>{{item.order_item_amount * item.order_item_price}} zł</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                </div>\n            </div>    \n        </ng-container>\n    </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-orders-delete',\n  templateUrl: './orders-delete.component.html',\n  styleUrls: ['./orders-delete.component.css']\n})\nexport class OrdersDeleteComponent implements OnInit {\n\n  constructor(public auth:AuthService, private route:ActivatedRoute, private router: Router, private ordersService:OrdersService) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.orderId = +params.get('order_id')\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orderId:number\n  remove:boolean = false\n  delete(){\n\n    this.ordersService.deleteOrder(this.orderId).subscribe(()=>{\n      console.log(\"usunięto zamówienie\")\n    })\n\n    this.remove = true\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć zamówienie?\n                        </p>\n                        \n                        <a class=\"btn btn-secondary\" [routerLink]=\"['/zamowienie-szczegoly']\" [queryParams]=\"{ order_id: orderId}\">Nie</a>\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/zamowienia-admin']\">Dalej</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { OrdersService } from '../orders.service';\nimport { Order } from 'src/app/model/order';\nimport { ThrowStmt } from '@angular/compiler';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders-manager',\n  templateUrl: './orders-manager.component.html',\n  styleUrls: ['./orders-manager.component.css']\n})\nexport class OrdersManagerComponent implements OnInit {\n\n  constructor(public auth:AuthService, private ordersService:OrdersService, private router: Router) {\n    this.auth.state.subscribe()\n    \n    this.ordersService.getAllOrders().subscribe(response =>{\n        this.orders = response\n    })\n\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  orders:Order[]\n\n  goOrder(order:Order){\n    this.router.navigate(['/zamowienie-szczegoly'], { queryParams: {order_id: order.orders_id } });\n  }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n          <div class=\"wraper\">\n              <h4>Zamówienia</h4>\n              <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                <table class=\"table table-striped\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Lp</th>\n                        <th scope=\"col\">Numer</th>\n                        <th scope=\"col\">Data</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Wartość</th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr *ngFor=\"let order of orders let i = index;\">\n                        <th scope=\"row\">{{i+1}}</th>\n                        <td>\n                          <a (click)=\"goOrder(order)\">\n                            {{order.orders_number}}\n                          </a>\n                        </td>\n                        <td>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</td>\n                        <td>{{order.orders_status}}</td>\n                        <td>{{order.orders_payments_sum}} zł</td>\n                        <td class=\"btn-hover\">\n                          <a (click)=\"goOrder(order)\">\n                            <span _ngcontent-hnf-c197=\"\" class=\"material-icons\">assignment</span>\n                            szczegóły\n                          </a>\n                        </td>        \n                      </tr>\n                    </tbody>\n                  </table>\n            </ng-container>\n          </div>\n      </div>\n    </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersRoutingModule } from './orders.routing.module';\nimport { OrdersComponent } from './orders/orders.component';\nimport { AuthModule } from '../auth/auth.module';\nimport { OrderComponent } from './order/order.component';\nimport { FormModule } from '../form/form.module';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { CartModule } from '../cart/cart.module';\nimport { OrderSumaryComponent } from './order-sumary/order-sumary.component';\nimport { OrdersManagerComponent } from './orders-manager/orders-manager.component';\nimport { OrdersDeleteComponent } from './orders-delete/orders-delete.component';\nimport { ErrorModule } from '../error/error.module';\n\n\n\n\n\n@NgModule({\n  declarations: [OrdersComponent, OrderComponent, AddOrderComponent, OrderSumaryComponent, OrdersManagerComponent, OrdersDeleteComponent,],\n  imports: [\n    CommonModule,\n    AuthModule,\n    FormModule,\n    ErrorModule,\n    CartModule,\n    OrdersRoutingModule\n  ]\n})\nexport class OrdersModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersComponent } from './orders/orders.component';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { OrderSumaryComponent } from './order-sumary/order-sumary.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrdersManagerComponent } from './orders-manager/orders-manager.component';\nimport { OrdersDeleteComponent } from './orders-delete/orders-delete.component';\n\nconst routes: Routes = [\n  {\n    path:'moje-zamowienia',\n    component:  OrdersComponent\n  },\n  {\n    path:'zamowienie',\n    component:  AddOrderComponent\n  },\n  {\n    path:'podsumowanie',\n    component:  OrderSumaryComponent\n  },\n  {\n    path:'zamowienie-szczegoly',\n    component:  OrderComponent\n  },\n  {\n    path:'zamowienia-admin',\n    component:  OrdersManagerComponent\n  },\n  {\n    path: 'zamowienie-usuwanie/:order_id',\n    component: OrdersDeleteComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class OrdersRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { OrderItem } from '../model/orderItem';\nimport { Order } from '../model/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(private http: HttpClient) { }\n\n  // ---> localhost\n  // getAllOrders(){\n  //   return this.http.get<Order[]>(\"http://localhost:8080/orders/all\")\n  // }\n\n// ----> remote\n// getAllOrders(){\n//   return this.http.get<Order[]>(\"https://x-tom-api.herokuapp.com/orders/all\")\n// }\n \n// ----> remote aws\ngetAllOrders(){\n  return this.http.get<Order[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/all\")\n}\n\n  // ---> localhost\n  // getOrdersById(id:number){\n  //   return this.http.get<Order>(\"http://localhost:8080/orders/\"+id)\n  // }\n\n// ----> remote\n// getOrdersById(id:number){\n//   return this.http.get<Order>(\"https://x-tom-api.herokuapp.com/orders/\"+id)\n// }\n\n// ----> remote aws\ngetOrdersById(id:number){\n  return this.http.get<Order>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/\"+id)\n}\n\n  // ---> localhost\n  // getOrdersByUserId(id:number){\n  //   return this.http.get<Order[]>(\"http://localhost:8080/orders/user/\"+id)\n  // }\n\n// ----> remote\n// getOrdersByUserId(id:number){\n//   return this.http.get<Order[]>(\"https://x-tom-api.herokuapp.com:8080/orders/user/\"+id)\n// }\n\n// ----> remote aws\ngetOrdersByUserId(id:number){\n  return this.http.get<Order[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/user/\"+id)\n}\n\n  // ---> localhost\n  // getOrderItemByOrderNumber(number:number){\n  //   return this.http.get<OrderItem[]>(\"http://localhost:8080/order/number/\"+number)\n  // }\n\n// ----> remote\n// getOrderItemByOrderNumber(number:number){\n//   return this.http.get<OrderItem[]>(\"https://x-tom-api.herokuapp.com/order/number/\"+number)\n// }\n\n// ----> remote aws\ngetOrderItemByOrderNumber(number:number){\n  return this.http.get<OrderItem[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/order/number/\"+number)\n}\n\n  // ---> localhost\n  // createOrderItem(item:Partial<OrderItem>[]){\n  //   return this.http.post<Number>(\"http://localhost:8090/order/create\", item)\n  // }\n\n// ----> remote\n// createOrderItem(item:Partial<OrderItem>[]){\n//   return this.http.post<Number>(\"https://x-tom-auth.herokuapp.com/order/create\", item)\n// }\n\n// ----> remote aws\ncreateOrderItem(item:Partial<OrderItem>[]){\n  return this.http.post<Number>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/order/create\", item)\n}\n\n  // ---> localhost\n  // createOrder(order:Partial<Order>){\n  //   return this.http.post(\"http://localhost:8090/orders/create\", order)\n  // }\n\n// ----> remote\n// createOrder(order:Partial<Order>){\n//   return this.http.post(\"https://x-tom-auth.herokuapp.com/orders/create\", order)\n// }\n\n// ----> remote aws\ncreateOrder(order:Partial<Order>){\n  return this.http.post(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/orders/create\", order)\n}\n\n  // ---> localhost\n  // editDetail(id:number, order:Partial<Order>){\n  //   return this.http.put<Order>(\"http://localhost:8080/orders/detail/\"+id, order)// ----> remote\n  // }\n\n// ----> remote\n// editDetail(id:number, order:Partial<Order>){\n//   return this.http.put<Order>(\"https://x-tom-api.herokuapp.com/orders/detail/\"+id, order)// ----> remote\n// }\n\n// ----> remote aws\neditDetail(id:number, order:Partial<Order>){\n  return this.http.put<Order>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/detail/\"+id, order)// ----> remote\n}\n\n  // ---> localhost\n  // editAddress(id:number, order:Partial<Order>){\n  //   return this.http.put<Order>(\"http://localhost:8080/orders/address/\"+id, order)\n  // }\n\n// ----> remote\n// editAddress(id:number, order:Partial<Order>){\n//   return this.http.put<Order>(\"https://x-tom-api.herokuapp.com/orders/address/\"+id, order)\n// }\n\n// ----> remote aws\neditAddress(id:number, order:Partial<Order>){\n  return this.http.put<Order>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/address/\"+id, order)\n}\n\n  // ---> localhost\n  // deleteOrder(id:number){\n  //   return this.http.delete(\"http://localhost:8080/orders/\"+id)\n  // }\n\n  // ----> remote\n  // deleteOrder(id:number){\n  //   return this.http.delete(\"https://x-tom-api.herokuapp.com/orders/\"+id)\n  // }\n\n// ----> remote aws\ndeleteOrder(id:number){\n  return this.http.delete(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/orders/\"+id)\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { OrdersService } from '../orders.service';\nimport { Order } from 'src/app/model/order';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  constructor(public auth:AuthService, private ordersService:OrdersService, private router: Router) { \n    this.auth.state.subscribe()\n\n    if(this.auth.isAuthenticated){\n      this.ordersService.getOrdersByUserId(this.auth.getCurrentUser().user_id).subscribe( response =>{\n        this.userOrders = response\n      }, error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      } )\n    }\n\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n  statusError:number\n  userOrders:Order[]\n\n  goOrder(order:Order){\n    this.router.navigate(['/zamowienie-szczegoly'], { queryParams: {order_id: order.orders_id } });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n              <h4>Twoje zamówienia</h4>\n              <ng-container *ngIf=\"auth.isAuthenticated\">\n                  <table class=\"table table-striped\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">Lp</th>\n                          <th scope=\"col\">Numer</th>\n                          <th scope=\"col\">Data</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\">Wartość</th>\n                          <th scope=\"col\"></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr *ngFor=\"let order of userOrders let i = index;\">\n                          <th scope=\"row\">{{i+1}}</th>\n                          <td>\n                            <a (click)=\"goOrder(order)\">\n                              {{order.orders_number}}\n                            </a>\n                          </td>\n                          <td>{{order.orders_date_time | date: 'yyyy-MM-dd HH:mm'}}</td>\n                          <td>{{order.orders_status}}</td>\n                          <td>{{order.orders_payments_sum}} zł</td>\n                          <td class=\"btn-hover\"><a (click)=\"goOrder(order)\">\n                                <span class=\"material-icons\">assignment</span>\n                                szczegóły\n                              </a>\n                          </td>        \n                        </tr>\n                      </tbody>\n                    </table>\n              </ng-container>\n              \n              <error-handler [errorHandler]=\"statusError\"></error-handler>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ProductType } from 'src/app/model/productType';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { ProductsService } from '../products.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n\n  constructor(private fb:FormBuilder, public auth:AuthService, private http:ProductsService,) {\n    this.auth.state.subscribe()\n   }\n   editedProduct:ProductTest\n   error\n\n   selectProductForm = this.fb.group({    \n    product_type: this.fb.control(''), \n  })\n\n  addProduct(product){\n    this.http.create(product)\n    .subscribe(()=>{\n      console.log(\"Success\")   \n    },err=>{\n      this.error = err.message\n    })\n  }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <form class=\"contact100-form\" [formGroup]=\"selectProductForm\">        \n                        <div class=\"form-group wrap-input100 rs1-wrap-input100\">\n                            <label class=\"label-input100\" for=\"Status\">Wybierz typ produktu, który chcesz dodać:</label>\n                            <select class=\"form-control\" ngModel formControlName=\"product_type\">\n                                <option value=\"drone\">Dron</option>\n                                <option value=\"laptop\">Laptop</option>\n                                <option value=\"smartphone\">Smartphone</option>\n                            </select>\n                        </div>\n                    </form>\n                \n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'drone'\">\n                    <p>Dodawanie drona</p>\n                    <drone-form (saveProduct)=\"addProduct($event)\"></drone-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'laptop'\">\n                    <p>Dodawanie laptopa</p>\n                    <laptop-form (saveProduct)=\"addProduct($event)\"></laptop-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"selectProductForm.value.product_type == 'smartphone'\">\n                    <p>Dodawanie smartfona</p>\n                    <smartphone-form (saveProduct)=\"addProduct($event)\"></smartphone-form>\n                </ng-container>\n                \n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\n\n@Component({\n  selector: 'app-delete-product',\n  templateUrl: './delete-product.component.html',\n  styleUrls: ['./delete-product.component.css']\n})\nexport class DeleteProductComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n  }\n\n  id:number\n  error: boolean;\n\n  remove:boolean = false\n\n  delete(){\n      this.http.delete(this.id).subscribe(()=>{\n        console.log(\"Success\")\n      },err=>{\n        this.error = err.message\n      })\n\n      this.remove = true\n  }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć wybrany product?\n                        </p>\n                        \n                        <button class=\"btn btn-secondary\" [routerLink]=\"['/product', id]\">Nie</button>\n                        <button class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/']\">Dalej</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedProduct = response\n      this.typeProduct = response.product_type\n    })\n\n   }\n\n   id:number\n   editedProduct:ProductTest\n   typeProduct:string\n   error:boolean\n\n   updateProduct(product){\n       console.log(product)\n         this.http.update(this.id, product)\n    .subscribe((response)=>{\n      console.log(\"Success \"+ response)\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error)\n    })\n   }\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"col-lg-12\">\n        <div class=\"form-wraper\">\n            <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                <ng-container *ngIf=\"typeProduct == 'drone'\">\n                    <h3>Edycja drona</h3>\n                    <drone-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></drone-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"typeProduct == 'laptop'\">\n                    <h3>Edycja laptopa</h3>\n                    <laptop-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></laptop-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"typeProduct == 'smartphone'\">\n                    <h3>Edycja smartfona</h3>\n                    <smartphone-form [getProduct]=\"editedProduct\" (saveProduct)=\"updateProduct($event)\"></smartphone-form>\n                </ng-container>\n            </ng-container>\n            \n            <ng-container *ngIf=\"!auth.isAuthenticated\">\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    <h3>Nie jesteś zalogowany</h3>\n                    <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                  </div>\n              </ng-container>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { FormBuilder } from '@angular/forms';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'drone-by-id',\n  templateUrl: './drone-by-id.component.html',\n  styleUrls: ['./drone-by-id.component.css']\n})\nexport class DroneByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n   id:number\n   product:ProductTest\n   amount:number = 1\n\n   cartItem:CartItemLocalStorage = {\n     order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n\n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n  \n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n\n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n\n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n","<ng-container *ngIf=\"product\">\n\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>      \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Kamera: <span>{{product.product_camera}}</span></p>\n                            <p>Zasięg: <span>{{product.product_range}} m</span></p>    \n                            <p>Czas pracy: <span>{{product.product_time_work}} min</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                              <tr>\n                                <td>Kamera:</td>\n                                <td>{{product.product_camera}}</td>\n                              </tr>\n                              <tr>\n                                <td>Zasięg</td>\n                                <td>{{product.product_range}} m</td>\n                              </tr>\n                              <tr>\n                                <td>Czas pracy</td>\n                                <td>{{product.product_time_work}} min</td>\n                              </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n\n</ng-container>\n\n\n<box-last-product></box-last-product>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'laptop-by-id',\n  templateUrl: './laptop-by-id.component.html',\n  styleUrls: ['./laptop-by-id.component.css']\n})\nexport class LaptopByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n   id:number\n   product:ProductTest\n   amount:number = 1\n\n   cartItem:CartItemLocalStorage = {\n     order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n  \n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n\n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n\n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n\n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n\n\n}\n","\n<ng-container *ngIf=\"product\">\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>     \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Procesor: <span>{{product.product_processor}}</span></p>\n                            <p>Pamięć: <span>{{product.product_ram_size}}GB</span></p>    \n                            <p>Grafika: <span>{{product.product_graphics_card}}</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                                <tr>\n                                    <td>System operacyjny</td>\n                                    <td>{{product.product_system}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Procesor</td>\n                                    <td>{{product.product_processor}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>{{product.product_ram_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Rodzaj dysku</td>\n                                    <td>{{product.product_disc_type}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>{{product.product_disc_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Grafika</td>\n                                    <td>{{product.product_graphics_card}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Przekątna ekranu</td>\n                                    <td>{{product.product_screen_diagonal}}\"</td>\n                                </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n\n</ng-container>\n\n<box-last-product></box-last-product>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from '../products.service';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { CartService } from 'src/app/cart/cart.service';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { CartItemUser } from 'src/app/model/cartItemUser';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  \n  constructor(public auth:AuthService, private http:ProductsService, private cartService:CartService, private route:ActivatedRoute) {\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('product_id')\n    })\n    \n    this.http.getById(this.id).subscribe(response =>{\n      this.product = response\n\n      this.setLastProduct(response)\n\n      this.productType = response.product_type\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n\n   }\n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    if(localStorage.getItem('products') == null){\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }else{\n      this.cartLocalItemList = JSON.parse(localStorage.getItem('products'))  \n    }\n\n  }\n  \n  statusError:number\n  error\n  id:number\n  product:ProductTest\n  productType:String  \n  cartLocalItemList:CartItemLocalStorage[] = []\n  lastProduct:ProductTest[] = []\n  \n\n  cartUserItem:CartItemUser = {\n    order_item_amount: 0,\n    product: this.product,\n    user: this.auth.getCurrentUser()\n  }\n\n  addtoCart(cartItem:CartItemLocalStorage){\n    \n    if(this.auth.isAuthenticated){\n      this.cartUserItem.order_item_amount = cartItem.order_item_amount\n      this.cartUserItem.product = cartItem.product\n      this.cartUserItem.user = this.auth.getCurrentUser()\n\n      this.cartService.setMyCartItem(this.cartUserItem).subscribe(()=>{\n    },err=>{\n      this.error = err.message\n    })\n    }else{\n      this.cartLocalItemList.push(cartItem)\n      localStorage.setItem('products', JSON.stringify(this.cartLocalItemList))\n    }\n    \n  }\n\n  setLastProduct(product:ProductTest){\n    var lastProduct:ProductTest[] = []\n    \n    if(localStorage.getItem('lastProduct') == null){\n      lastProduct.push(product)\n      localStorage.setItem('lastProduct', JSON.stringify(lastProduct))\n    }else{\n        lastProduct = JSON.parse(localStorage.getItem('lastProduct'))\n        var newList:ProductTest[] = []\n\n        newList.push(product)\n        for(var i = 0; i <= 5; i++){\n          if(lastProduct[i] != null && newList.length < 6)\n          newList[i+1] = lastProduct[i]\n        }\n          localStorage.setItem('lastProduct', JSON.stringify(newList))\n    }\n\n    \n\n  }\n\n}\n","<ng-container *ngIf=\"productType == 'drone'\">\n    <drone-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></drone-by-id>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'laptop'\">\n    <laptop-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></laptop-by-id>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'smartphone'\">\n    <smartphone-by-id [getProduct]=\"product\" (addToCart)=\"addtoCart($event)\"></smartphone-by-id>\n</ng-container>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { FormBuilder } from '@angular/forms';\nimport { ProductTest } from 'src/app/model/productTest';\nimport { CartItemLocalStorage } from 'src/app/model/cartItemLocalStorage';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'smartphone-by-id',\n  templateUrl: './smartphone-by-id.component.html',\n  styleUrls: ['./smartphone-by-id.component.css']\n})\nexport class SmartphoneByIdComponent implements OnInit {\n\n  constructor(public auth:AuthService, private fb:FormBuilder, private snackbar:MatSnackBar) {\n    this.auth.state.subscribe()\n   }\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n   }\n\n  id:number\n  product:ProductTest\n  amount:number = 1\n  \n  cartItem:CartItemLocalStorage = {\n    order_item_id: 0,\n    product: this.product,\n    order_item_amount: 1  \n  }\n\n  addProductForm = this.fb.group({    \n    amount: this.fb.control('')\n  })\n\n   @Input(\"getProduct\")\n   set getId(product){\n     this.product = product\n   }\n\n  @Output('addToCart')\n  emiterSetProduct = new EventEmitter()\n \n  addToCart(product:ProductTest){\n    this.cartItem.product = product\n    this.cartItem.order_item_amount = this.amount\n    this.emiterSetProduct.emit(this.cartItem)\n    \n    this.snackbar.open('Dodano do koszyka','',{\n      duration: 4000,\n      verticalPosition:'top'\n    })\n  }\n\n}\n","<ng-container *ngIf=\"product\">\n\n    <div class=\"container-fluid\">\n        <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <div class=\"options\">\n                <a [routerLink]=\"['/edit-product', product.product_id]\">\n                    <span class=\"material-icons\">edit</span>\n                    Edytuj\n                </a>\n                <a [routerLink]=\"['/delete-product', product.product_id]\">\n                    <span class=\"material-icons\">delete</span>\n                    Usuń\n                </a>\n            </div>  \n        </ng-container>   \n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"img\">\n                    <img src=\"../../../../assets/img/product-full/{{product.product_mark}}-{{product.product_type}}-517-433.jpg\" alt=\"product\">\n                </div>\n            </div>\n            <div class=\"col-lg-8\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"description\">\n                            {{product.product_description}}\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"spec-short\">\n                            <p>Ekran: <span>{{product.product_screen_diagonal}}\"</span></p>\n                            <p>System: <span>{{product.product_system}}</span></p>    \n                            <p>Pamięć: <span>{{product.product_disc_size}}GB</span></p>    \n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"cart-box\">\n                            <div class=\"price\">\n                                <p>{{product.product_price}} zł</p>\n                            </div>\n                            <div class=\"form\">\n                                 <form [formGroup]=\"addProductForm\">        \n                                     <div class=\"form-group select-btn\">\n                                         <label>Ilość:</label>\n                                         <select class=\"form-control\" [(ngModel)]=\"amount\" formControlName=\"amount\">\n                                             <option value=\"1\">1</option>\n                                             <option value=\"2\">2</option>\n                                             <option value=\"3\">3</option>\n                                             <option value=\"4\">4</option>\n                                             <option value=\"5\">5</option>\n                                             <option value=\"6\">6</option>\n                                         </select>\n                                     </div>\n                                        <a  type=\"button\" class=\"btn btn-success\" (click)='addToCart(product)'>\n                                            <span class=\"material-icons\">add_shopping_cart</span> \n                                            Dodaj do koszyka\n                                        </a>\n                                 </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row spec-wraper\">\n            <div class=\"col-lg-5\">\n                <div class=\"spec\">\n                    <h5>Specyfikacja</h5>\n                        <table class=\"table table-striped\">\n                            <tbody>\n                                <tr>\n                                    <td>System operacyjny</td>\n                                    <td>{{product.product_system}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Przekątna ekranu</td>\n                                    <td>{{product.product_screen_diagonal}}\"</td>\n                                </tr>\n                                <tr>\n                                    <td>Rozmiar dysku</td>\n                                    <td>{{product.product_disc_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Pamięć RAM</td>\n                                    <td>{{product.product_ram_size}}GB</td>\n                                </tr>\n                                <tr>\n                                    <td>Roździelczość kamery</td>\n                                    <td>{{product.product_camera_resolution}} Mpix</td>\n                                </tr>\n                            </tbody>\n                          </table>\n                </div>  \n            </div>\n            <div class=\"col-lg-7\">\n                <div class=\"logo\">\n                    <img src=\"../../../../assets/img/logo/{{product.product_mark}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n<box-last-product></box-last-product>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsRoutingModule } from './products.routing.module';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductComponent } from './product/product.component';\nimport { CartModule } from '../cart/cart.module';\nimport { DronesComponent } from './products/drones/drones.component';\nimport { AuthModule } from '../auth/auth.module';\n\nimport { SmartphonesComponent } from './products/smartphones/smartphones.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeleteProductComponent } from './delete-product/delete-product.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { FormModule } from '../form/form.module';\nimport { LaptopsComponent } from './products/laptops/laptops.component';\nimport { DroneByIdComponent } from './product/drone-by-id/drone-by-id.component';\nimport { LaptopByIdComponent } from './product/laptop-by-id/laptop-by-id.component';\nimport { SmartphoneByIdComponent } from './product/smartphone-by-id/smartphone-by-id.component';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ErrorModule } from '../error/error.module';\nimport { BoxLastProductModule } from '../box-last-product/box-last-product.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [ProductsComponent, ProductComponent, DronesComponent, LaptopsComponent,\n     SmartphonesComponent, DeleteProductComponent, EditProductComponent, DroneByIdComponent, LaptopByIdComponent, SmartphoneByIdComponent, AddProductComponent,\n    ],\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    CartModule,\n    AuthModule,\n    FormModule,\n    ErrorModule,\n    MatSnackBarModule,\n    BoxLastProductModule,\n    ProductsRoutingModule\n  ]\n})\nexport class ProductsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductComponent } from './product/product.component';\nimport { DeleteProductComponent } from './delete-product/delete-product.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { AddProductComponent } from './add-product/add-product.component';\n\nconst routes: Routes = [\n  {\n    path:'products/:product_type',\n    component:  ProductsComponent\n  },\n  {\n    path: 'product/:product_id',\n    component: ProductComponent\n  },\n  {\n    path: 'add-product',\n    component: AddProductComponent\n  },\n  {\n    path: 'edit-product/:product_id',\n    component: EditProductComponent\n  },\n  {\n    path: 'delete-product/:product_id',\n    component: DeleteProductComponent\n  },\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class ProductsRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ProductTestList } from '../model/productTestList';\nimport { ProductTest } from '../model/productTest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  // ---> localhost\n  // getAll(){\n  //   return this.http.get<ProductTest[]>(\"http://localhost:8090/product/all\")\n  // }\n\n  // ----> remote\n  // getAll(){\n  //   return this.http.get<ProductTest[]>(\"https://x-tom-auth.herokuapp.com/product/all\")\n  // }\n\n    // ----> remote aws\n    getAll(){\n      return this.http.get<ProductTest[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/product/all\")\n    }\n\n  // ---> localhost\n  // create(product:Partial<ProductTest>){\n  //   return this.http.post<ProductTest>(\"http://localhost:8080/product/create\", product)\n  // }\n\n  // ----> remote\n  // create(product:Partial<ProductTest>){\n  //   return this.http.post<ProductTest>(\"https://x-tom-api.herokuapp.com/product/create\", product)\n  // }\n  \n  // ----> remote aws\n  create(product:Partial<ProductTest>){\n    return this.http.post<ProductTest>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/product/create\", product)\n  }\n\n    // ---> localhost\n  // getById(id:number){\n  //   return this.http.get<ProductTest>(\"http://localhost:8090/product/\"+id)\n  // }\n\n  // ----> remote\n  // getById(id:number){\n  //   return this.http.get<ProductTest>(\"https://x-tom-auth.herokuapp.com/product/\"+id)\n  // }\n\n  // ----> remote aws\n  getById(id:number){\n    return this.http.get<ProductTest>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/product/\"+id)\n  }\n\n   // ---> localhost\n  // update(id:number, product:Partial<ProductTest>){\n  //   return this.http.put<ProductTest>(\"http://localhost:8080/product/\"+id, product)\n  // }\n\n  // ----> remote\n  // update(id:number, product:Partial<ProductTest>){\n  //   return this.http.put<ProductTest>(\"https://x-tom-api.herokuapp.com/product/\"+id, product)\n  // }\n\n  // ----> remote aws\n  update(id:number, product:Partial<ProductTest>){\n    return this.http.put<ProductTest>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/product/\"+id, product)\n  }\n\n   // ---> localhost\n  // delete(id:number){\n  //   return this.http.delete(\"http://localhost:8080/product/\"+id)\n  // }\n\n  // ----> remote\n  // delete(id:number){\n  //   return this.http.delete(\"https://x-tom-api.herokuapp.com/product/\"+id)\n  // }\n\n  // ----> remote aws\n  delete(id:number){\n    return this.http.delete(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/product/\"+id)\n  }\n\n  // ---> localhost\n  // getByType(type:string){\n  //   return this.http.get<ProductTest[]>(\"http://localhost:8090/product/type\",{\n  //     params:{\n  //       type:type\n  //     }\n  //   })\n  // }\n\n  // ---> remote\n  // getByType(type:string){\n  //   return this.http.get<ProductTest[]>(\"https://x-tom-auth.herokuapp.com/product/type\",{\n  //     params:{\n  //       type:type\n  //     }\n  //   })\n  // }\n\n// ---> remote aws\ngetByType(type:string){\n  return this.http.get<ProductTest[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/product/type\",{\n    params:{\n      type:type\n    }\n  })\n}\n\n  // ---> localhost\n  // getByStatus(status:string){\n  //   return this.http.get<ProductTest[]>(\"http://localhost:8090/product/status/\",{\n  //     params:{\n  //       status:status\n  //     }\n  //   })\n  // }\n\n  // ----> remote\n  // getByStatus(status:string){\n  //   return this.http.get<ProductTest[]>(\"https://x-tom-auth.herokuapp.com/product/status/\",{\n  //     params:{\n  //       status:status\n  //     }\n  //   })\n  // }\n\n  // ----> remote aws\n  getByStatus(status:string){\n    return this.http.get<ProductTest[]>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8090/product/status/\",{\n      params:{\n        status:status\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n\n@Component({\n  selector: 'drones',\n  templateUrl: './drones.component.html',\n  styleUrls: ['./drones.component.css']\n})\nexport class DronesComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n\n  ngOnInit() {\n    this.getAllProduct()\n    document.scrollingElement.scrollTop = 0\n  }\n\n   statusError:number\n   drones:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"drone\").subscribe(response =>{\n      this.drones = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n}\n","<div class=\"container-fluid\">\n    <h4>Drony</h4> \n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let drone of drones\">\n            <div class=\"drone\">\n                <a [routerLink]=\"['/product', drone.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{drone.product_mark}}-{{drone.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"drone\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{drone.product_description}}\n                            </div>\n                            <p class=\"card-text\">kamera: {{drone.product_camera}}</p>\n                            <p class=\"card-text\">zasięg: {{drone.product_range}} m</p>\n                            <p class=\"card-text\">czas pracy: {{drone.product_time_work}} min</p>\n                            <h5 class=\"card-text\">{{drone.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { ProductTestList } from 'src/app/model/productTestList';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'laptops',\n  templateUrl: './laptops.component.html',\n  styleUrls: ['./laptops.component.css']\n})\nexport class LaptopsComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   }\n  \n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.getAllProduct()\n  }\n\n   statusError:number\n   laptops:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"laptop\").subscribe(response =>{\n      this.laptops = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n}\n","<div class=\"container-fluid\">\n    <h4>Laptopy</h4>\n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let laptop of laptops\">\n            <div class=\"laptop\">\n                <a [routerLink]=\"['/product', laptop.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{laptop.product_mark}}-{{laptop.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"laptop\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{laptop.product_description}}\n                            </div>\n                            <p class=\"card-text\">procesor: {{laptop.product_processor}}</p>\n                            <p class=\"card-text\">pamięć: {{laptop.product_ram_size}} GB</p>\n                            <p class=\"card-text\">grafika: {{laptop.product_graphics_card}}</p>\n                            <h5 class=\"card-text\">{{laptop.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute) {\n    this.route.paramMap.subscribe(params =>{\n      this.productType = params.get('product_type')\n    })\n   }\n\n  productType:String\n\n  ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n  }\n\n}\n","<ng-container *ngIf=\"productType == 'drones'\">\n    <drones></drones>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'laptops'\">\n    <laptops></laptops>\n</ng-container>\n\n<ng-container *ngIf=\"productType == 'smartphones'\">\n    <smartphones></smartphones>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/products/products.service';\nimport { ProductTestList } from 'src/app/model/productTestList';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ProductTest } from 'src/app/model/productTest';\n\n@Component({\n  selector: 'smartphones',\n  templateUrl: './smartphones.component.html',\n  styleUrls: ['./smartphones.component.css']\n})\nexport class SmartphonesComponent implements OnInit {\n\n  constructor(private http:ProductsService, public auth:AuthService) {\n    this.auth.state.subscribe()\n   } \n\n   ngOnInit() {\n    document.scrollingElement.scrollTop = 0\n    \n    this.getAllProduct()\n  }\n  \n  statusError:number\n  smartphones:ProductTest[]\n\n   getAllProduct(){\n    this.http.getByType(\"smartphone\").subscribe(response =>{\n      this.smartphones = response;\n    },error =>{\n      if(error instanceof HttpErrorResponse){\n        this.statusError = error.status\n        console.error(error.error)\n      }\n    })\n   }\n\n\n\n\n}\n","<div class=\"container-fluid\">\n    <h4>Smartfony</h4>\n    <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <a [routerLink]=\"['/add-product']\">\n            <span class=\"material-icons\">add_circle</span>\n            Dodaj produkt\n        </a>\n    </ng-container>\n    <div class=\"row\">\n        <div class=\"col-ms-3\" *ngFor=\"let smartphone of smartphones\">\n            <div class=\"smartphone\">\n                <a [routerLink]=\"['/product', smartphone.product_id]\">\n                    <div class=\"card\" style=\"width: 12rem;\">\n                        <img src=\"../../../../assets/img/recomend/{{smartphone.product_mark}}-{{smartphone.product_type}}-142-116.jpg\" class=\"card-img-top\" alt=\"smartphone\">\n                        <div class=\"card-body my-card-body\">\n                            <div class=\"description\">\n                                {{smartphone.product_description}}\n                            </div>\n                            <p class=\"card-text\">ekran: {{smartphone.product_screen_diagonal}}\"</p>\n                            <p class=\"card-text\">system: {{smartphone.product_system}}</p>\n                            <p class=\"card-text\">pamięć: {{smartphone.product_disc_size}} GB</p>\n                            <h5 class=\"card-text\">{{smartphone.product_price}} zł</h5>\n                        </div>\n                    </div>\n                </a>\n            </div>\n        </div>\n    </div>    \n</div>\n\n<box-last-product></box-last-product>\n\n<error-handler [errorHandler]=\"statusError\"></error-handler>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\nimport { UsersService } from 'src/app/users/users.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n\n  constructor( private http:UsersService, public auth:AuthService,\n     private route:ActivatedRoute) { \n\n    this.auth.state.subscribe()\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    }) \n\n    \n  }\n\n  id:number\n  editedUser:User\n  error:boolean\n  returnPath = 'profile'\n\n  updateUser(user){\n    console.log(user)\n    this.http.update(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {}\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"form-wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated\">\n                    <user-form [getPath]=\"returnPath\" [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-form>\n                </ng-container>\n                 \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'profile-bar',\n  templateUrl: './profile-bar.component.html',\n  styleUrls: ['./profile-bar.component.css']\n})\nexport class ProfileBarComponent implements OnInit {\n\n  constructor(public auth:AuthService) {}\n  \n  ngOnInit() {\n    this.name = this.auth.name\n  }\n  \n  name:String\n}\n","<ng-container *ngIf=\"auth.isAuthenticated\">\n    Witaj <strong>{{name}}</strong> :)\n    <span (click)=\"auth.logout()\"> | wyloguj</span>\n </ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ProfileBarComponent } from './profile-bar/profile-bar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProfileRoutingModule } from './profile.routing.module';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormModule } from '../form/form.module';\nimport { ErrorModule } from '../error/error.module';\n\n\n@NgModule({\n  declarations: [ProfileComponent, ProfileBarComponent, EditProfileComponent],\n  imports: [\n    CommonModule,\n    FormModule,\n    HttpClientModule,\n    ErrorModule,\n    ReactiveFormsModule,\n    ProfileRoutingModule,\n  ],\n  exports: [\n    ProfileComponent, ProfileBarComponent, \n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent,\n  },\n  {\n    path: 'edit-profile/:user_id',\n    component: EditProfileComponent,\n\n  }\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class ProfileRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { filter, map } from 'rxjs/internal/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http:HttpClient, private auth:AuthService) { }\n\n  private user_request:Observable<User>\n  \n  getUserProfile(){\n\n    if(!this.user_request){ \n      this.user_request = this.auth.state\n      .pipe(\n        filter(() => this.auth.isAuthenticated),\n        map(() => this.auth.getCurrentUser()),\n      )\n    }\n    return this.user_request\n  }\n\n  clearCache(){\n    this.user_request = null\n  }\n\n  // ---> localhost\n  // update(id:number, user:Partial<User>){\n  //   return this.http.put<User>(\"http://localhost:8080/user/\"+id, user)\n  // }\n\n  // ----> remote\n  // update(id:number, user:Partial<User>){\n  //   return this.http.put<User>(\"https://x-tom-api.herokuapp.com/user/\"+id, user)\n  // }\n\n    // ----> remote aws\n    update(id:number, user:Partial<User>){\n      return this.http.put<User>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"+id, user)\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../profile.service';\nimport { User } from 'src/app/model/user';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { UsersService } from 'src/app/users/users.service';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public auth:AuthService, private http:HttpClient) { \n    this.auth.state.subscribe()\n  }\n\n  ngOnInit() {\n\n    if(this.auth.isAuthenticated){\n      this.id = this.auth.getCurrentUser().user_id  \n\n      this.http.get<User>(this.remoteUrlAWS+this.id).subscribe(\n        response =>{\n          this.profile = response\n        }\n      ), error =>{\n        if(error instanceof HttpErrorResponse){\n          this.statusError = error.status\n          console.error(error.error)\n        }\n      } \n    } \n  }\n\n  // localUrl = \"http://localhost:8080/user/\"\n  // remoteUrl = \"https://x-tom-api.herokuapp.com/user/\"\n  remoteUrlAWS = \"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"\n  id:number\n  profile:User\n  statusError:number\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <ng-container *ngIf=\"auth.isAuthenticated && profile\">\n                <div class=\"wraper\">\n                    <div class=\"options\">\n                        <a [routerLink]=\"['/edit-profile', profile.user_id]\">\n                            <span _ngcontent-qdj-c191=\"\" class=\"material-icons\">edit</span>   \n                            edycja\n                        </a> \n                        <a [routerLink]=\"['/zmiana-hasla']\">\n                            <span class=\"material-icons\">settings</span>\n                            zmień hasło\n                        </a>\n                        <a [routerLink]=\"['/zmiana-email']\">\n                            <span class=\"material-icons\">settings</span>\n                            zmień email\n                        </a>\n                    </div>\n                    <p>Dane konta:</p>\n                    <p>imię i nazwisko <span>{{profile.user_firstName}} </span><span>{{profile.user_lastName}}</span></p>\n                    <p>e-mail <span>{{profile.user_email}}</span></p>\n                    <p>tel. <span>{{profile.user_phoneNumber}}</span></p>\n                    <p>miasto <span>{{profile.user_zipCode}} </span><span>{{profile.user_city}}</span></p>\n                    <p>ulica <span>{{profile.user_street}}</span></p>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!auth.isAuthenticated\">\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    <h3>Nie jesteś zalogowany</h3>\n                    <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n                  </div>\n              </ng-container>\n            \n              <error-handler [errorHandler]=\"statusError\"></error-handler>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderComponent } from './slider/slider.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [SliderComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n  ],\n  exports: [\n    SliderComponent\n  ],\n  bootstrap: [SliderComponent]\n})\nexport class SliderModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  // images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n}\n","<div class=\"carusel-wraper\">\n  <ngb-carousel>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_1.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_2.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n    <ng-template ngbSlide>\n      <div class=\"picsum-img-wrapper\">\n        <img src=\"../../../assets/img/slider/banner_3.jpg\">\n      </div>\n      <div class=\"carousel-caption\">\n      </div>\n    </ng-template>\n  </ngb-carousel>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-delete-user',\n  templateUrl: './delete-user.component.html',\n  styleUrls: ['./delete-user.component.css']\n})\nexport class DeleteUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) { \n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n  }\n\n  id:number\n  error: boolean;\n\n  remove:boolean = false\n\n  delete(){\n    this.http.delete(this.id).subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n    })\n\n    this.remove = true\n}\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <ng-container *ngIf=\"!remove\">\n                        <p>\n                            Czy napewo chcesz usunąć wybranego użytkownika?\n                        </p>\n                        <button class=\"btn btn-secondary\" [routerLink]=\"['/user', id]\">Nie</button>\n                        <button class=\"btn btn-secondary\" (click)=\"delete()\">Tak</button>\n                    </ng-container>\n                \n                    <ng-container *ngIf=\"remove\">\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            Usunięto\n                          </div>\n                        <a class=\"btn btn-success\" [routerLink]=\"['/users']\">Ok</a>\n                    </ng-container>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                  </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    })\n   }\n\n   id:number\n   editedUser:User\n   error:boolean\n   returnPath = 'user'\n\n   updateUser(user){\n    console.log(user)\n    this.http.update(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <user-form [getPath]=\"returnPath\" [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-role-user',\n  templateUrl: './role-user.component.html',\n  styleUrls: ['./role-user.component.css']\n})\nexport class RoleUserComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n\n    this.route.paramMap.subscribe(params =>{\n      this.id = +params.get('user_id')\n    })\n\n\n    this.http.getById(this.id).subscribe(response =>{\n      this.editedUser = response\n    })\n   }\n\n   id:number\n   editedUser:User\n   error:boolean\n   returnPath = 'user'\n\n   updateUser(user){\n    console.log(user)\n    this.http.updateRole(this.id, user)\n    .subscribe(()=>{\n      console.log(\"Success\")\n    },err=>{\n      this.error = err.message\n      console.log(\"error: \"+this.error.valueOf)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <user-role-form [getUser]=\"editedUser\" (saveUser)=\"updateUser($event)\"></user-role-form>\n                </ng-container>\n                \n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                      </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-by-id',\n  templateUrl: './user-by-id.component.html',\n  styleUrls: ['./user-by-id.component.css']\n})\nexport class UserByIdComponent implements OnInit {\n\n  \n  constructor(private http:UsersService, public auth:AuthService, private route:ActivatedRoute) {\n    this.auth.state.subscribe()\n   }\n\n   id:number\n\n   user = this.route.paramMap.pipe(\n    map(params => +params.get('user_id')),\n    switchMap(id => this.http.getById(id))\n  )\n  \n  ngOnInit() {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"wraper\">\n                <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n                    <ng-container *ngIf=\"user | async as user\">\n                        <div class=\"options\">\n                            <a [routerLink]=\"['/edit-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" _ngcontent-qdj-c191=\"\" class=\"material-icons\">edit</span>\n                                Edytuj\n                            </a>\n                            <a [routerLink]=\"['/role-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" class=\"material-icons\">settings</span>\n                                Uprawnienia\n                            </a>\n                            <a [routerLink]=\"['/delete-user', user.user_id]\">\n                                <span _ngcontent-xpw-c168=\"\" class=\"material-icons\">settings</span>\n                                Usuń\n                            </a>\n                        </div>\n                        <p>Dane użytkownika</p>\n                        <p>Imię i nazwisko <span>{{user.user_firstName}} </span><span>{{user.user_lastName}}</span></p>\n                        <p>Uprawnienia <span>{{user.user_role}}</span></p>\n                        <p>E-mail <span>{{user.user_email}}</span></p>\n                        <p>Tel. <span>{{user.user_phoneNumber}}</span></p>\n                        <p>Miasto <span>{{user.user_zipCode}} </span><span>{{user.user_city}}</span></p>\n                        <p>Ulica <span>{{user.user_street}}</span></p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container *ngIf=\"!auth.isAuthenticated\">\n                    <div class=\"alert alert-warning\" role=\"alert\">\n                        <h3>Nie jesteś zalogowany</h3>\n                        <button class=\"btn btn-info\" [routerLink]=\"['/login']\">Zaloguj</button>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n    <!-- <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n        <ng-container *ngIf=\"user | async as user\">\n            <a class=\"btn btn-info\" [routerLink]=\"['/edit-user', user.user_id]\">Edytuj</a>\n            <a class=\"btn btn-info\" [routerLink]=\"['/role-user', user.user_id]\">Uprawnienia</a>\n            <a class=\"btn btn-danger\" [routerLink]=\"['/delete-user', user.user_id]\">Usuń</a>\n            <dl class=\"row\">\n                <dt class=\"col-3\">email</dt>\n                <dd class=\"col-9\">{{user.user_email}}</dd>\n                <dt class=\"col-3\">role</dt>\n                <dd class=\"col-9\">{{user.user_role}}</dd>\n                <dt class=\"col-3\">imię</dt>\n                <dd class=\"col-9\">{{user.user_firstName}}</dd>\n                <dt class=\"col-3\">nazwisko</dt>\n                <dd class=\"col-9\">{{user.user_lastName}}</dd>\n                <dt class=\"col-3\">numer tel</dt>\n                <dd class=\"col-9\">{{user.user_phoneNumber}}</dd>\n                <dt class=\"col-3\">kod pocztowy</dt>\n                <dd class=\"col-9\">{{user.user_zipCode}}</dd>\n                <dt class=\"col-3\">miasto</dt>\n                <dd class=\"col-9\">{{user.user_city}}</dd>\n                <dt class=\"col-3\">ulica</dt>\n                <dd class=\"col-9\">{{user.user_street}}</dd>\n            </dl>\n        </ng-container>\n\n    </ng-container> -->\n\n    \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users/users.component';\nimport { UsersRoutingModule } from './users.routing.module';\nimport { UserByIdComponent } from './user-by-id/user-by-id.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { FormModule } from '../form/form.module';\nimport { RoleUserComponent } from './role-user/role-user.component';\n\n\n\n@NgModule({\n  declarations: [UsersComponent, UserByIdComponent, EditUserComponent, DeleteUserComponent, RoleUserComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormModule,\n    UsersRoutingModule\n  ],\n  exports: [\n    UsersComponent, \n  ]\n})\nexport class UsersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { UserByIdComponent } from './user-by-id/user-by-id.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { DeleteUserComponent } from './delete-user/delete-user.component';\nimport { RoleUserComponent } from './role-user/role-user.component';\n\nconst routes: Routes = [\n  {\n    path:'users',\n    component:  UsersComponent\n  },\n  {\n    path: 'user/:user_id',\n    component: UserByIdComponent\n  },\n  {\n    path: 'edit-user/:user_id',\n    component: EditUserComponent\n  },\n  {\n    path: 'role-user/:user_id',\n    component: RoleUserComponent\n  },\n  {\n    path: 'delete-user/:user_id',\n    component: DeleteUserComponent\n  }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\nexport class UsersRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserList } from '../model/userList';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) {}\n\n  // ---> localhost\n  // getAll(){\n  //   return this.http.get<UserList>(\"http://localhost:8080/user/all\")\n  // }\n\n  // ----> remote\n  // getAll(){\n  //   return this.http.get<UserList>(\"https://x-tom-api.herokuapp.com/user/all\")\n  // }\n  \n    // ----> remote aws\n    getAll(){\n      return this.http.get<UserList>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/all\")\n    }\n\n// ---> localhost\n  // getById(id:number){\n  //   return this.http.get<User>(\"http://localhost:8080/user/\"+id)\n  // }\n\n// ----> remote\n  // getById(id:number){\n  //   return this.http.get<User>(\"https://x-tom-api.herokuapp.com/user/\"+id)\n  // }\n\n// ----> remote aws\ngetById(id:number){\n  return this.http.get<User>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"+id)\n}\n\n// ---> localhost\n  // update(id:number, user:Partial<User>){\n  //   return this.http.put<User>(\"http://localhost:8080/user/\"+id, user)\n  // }\n\n// ----> remote\n// update(id:number, user:Partial<User>){\n//   return this.http.put<User>(\"https://x-tom-api.herokuapp.com/user/\"+id, user)\n// }\n\n// ----> remote aws\nupdate(id:number, user:Partial<User>){\n  return this.http.put<User>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"+id, user)\n}\n\n  // ---> localhost\n  // updateRole(id:number, user:Partial<User>){\n  //   return this.http.put<User>(\"http://localhost:8080/user/role/\"+id, user)\n  // }\n\n// ----> remote\n// updateRole(id:number, user:Partial<User>){\n//     return this.http.put<User>(\"https://x-tom-api.herokuapp.com/user/role/\"+id, user)\n//   }\n\n// ----> remote aws\nupdateRole(id:number, user:Partial<User>){\n  return this.http.put<User>(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/role/\"+id, user)\n}\n\n// ---> localhost\n  // delete(id:number){\n  //   return this.http.delete(\"http://localhost:8080/user/\"+id)\n  // }\n\n// ----> remote\n// delete(id:number){\n//   return this.http.delete(\"https://x-tom-api.herokuapp.com/user/\"+id)\n// }\n\n// ----> remote aws\ndelete(id:number){\n  return this.http.delete(\"http://ec2-3-127-233-248.eu-central-1.compute.amazonaws.com:8080/user/\"+id)\n}\n\n}","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../users.service';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { UserList } from 'src/app/model/userList';\n\n@Component({\n  selector: 'users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor(private http:UsersService, public auth:AuthService) {\n    this.auth.state.subscribe()    \n   }\n\n   usersList:UserList\n\n   getAllUsers(){\n    this.http.getAll().subscribe(response =>{\n      this.usersList = response;\n    })\n  }\n\n  ngOnInit() {\n    this.getAllUsers()\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div col=\"row\">\n    <div class=\"col-lg-12\">\n        <div class=\"wraper\">\n          <ng-container *ngIf=\"auth.isAuthenticated && auth.role == 'ADMIN'\">\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Lp</th>\n                  <th scope=\"col\">Imię i nazwisko</th>\n                  <th scope=\"col\">E-mail</th>\n                  <th scope=\"col\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of usersList let i = index;\">\n                  <th scope=\"row\">{{i+1}}</th>\n                  <td>{{user.user_firstName }} {{user.user_lastName}}</td>\n                  <td>{{user.user_email}}</td>\n                  <a [routerLink]=\"['/user', user.user_id]\">\n                    <span _ngcontent-rgj-c197=\"\" class=\"material-icons\">assignment</span>\n                      szczegóły\n                  </a>\n                </tr>\n              </tbody>\n            </table>\n          </ng-container>\n          \n          <ng-container *ngIf=\"!auth.isAuthenticated\">\n            <div class=\"alert alert-warning\" role=\"alert\">\n                <h3>Nie jesteś zalogowany</h3>\n                <button class=\"btn btn-info\" [routerLink]=\"['/logowanie']\">Zaloguj</button>\n              </div>\n          </ng-container>\n        </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-feedback',\n  templateUrl: './validation-feedback.component.html',\n  styleUrls: ['./validation-feedback.component.css']\n})\nexport class ValidationFeedbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n\n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n    <div *ngIf=\"control.hasError('required')\">\n        Pole jest wymagane\n    </div>\n    \n    <div *ngIf=\"control.getError('minlength') as error\">\n        wymagane przynajmniej {{error.requiredLength}} znaków\n    </div>\n\n    <div *ngIf=\"control.hasError('email')\">\n        Niepoprawny email\n    </div>\n    <div *ngIf=\"control.hasError('invalid-username')\">\n         email zajęty\n    </div>\n\n    <div *ngIf=\"control.getError('password') as error\">\n        Hasło musi zawierać:\n        <div *ngIf=\"error.lowercase\"> - małą literę</div>\n        <div *ngIf=\"error.uppercase\"> - dużą literę</div>\n        <div *ngIf=\"error.number\"> - liczbę</div>\n        <div *ngIf=\"error.special\"> - znak specjalny</div>\n    </div>\n\n    <div *ngIf=\"control.hasError('password_match')\">\n        Hasła nie są równe. Spróbuj ponownie!!!\n    </div>\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-order-address',\n  templateUrl: './validation-order-address.component.html',\n  styleUrls: ['./validation-order-address.component.css']\n})\nexport class ValidationOrderAddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n  \n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n\n    <div *ngIf=\"control.hasError('required')\">\n        Pole jest wymagane\n    </div>\n\n    <div *ngIf=\"control.getError('minlength') as error\">\n        Musisz podać min {{error.requiredLength}} znaki\n    </div>\n\n    <div *ngIf=\"control.hasError('pattern')\">\n        Niepoprawny\n    </div>\n\n    <div *ngIf=\"control.hasError('email')\">\n        Niepoprawny email\n    </div>\n\n\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'validation-product',\n  templateUrl: './validation-product.component.html',\n  styleUrls: ['./validation-product.component.css']\n})\nexport class ValidationProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Input()\n  control\n\n  \n}\n","<div class=\"validation-feedback\" *ngIf=\"control.touched || control.dirty\">\n    \n    <div *ngIf=\"control.hasError('required')\">\n            Pole jest wymagane\n    </div>\n\n    <div *ngIf=\"control.hasError('pattern')\">\n        wymagane liczby\n    </div>\n\n    <div *ngIf=\"control.getError('minlength') as error\">\n        Pozostało jeszcze {{error.requiredLength - control.value.length}} znaków do wpisania\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidationFeedbackComponent } from './validation-feedback/validation-feedback.component';\nimport { ValidationProductComponent } from './validation-product/validation-product.component';\nimport { ValidationOrderAddressComponent } from './validation-order-address/validation-order-address.component';\n\n\n\n@NgModule({\n  declarations: [ValidationFeedbackComponent, ValidationProductComponent, ValidationOrderAddressComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [ValidationFeedbackComponent, ValidationProductComponent, ValidationOrderAddressComponent]\n})\nexport class ValidationModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}